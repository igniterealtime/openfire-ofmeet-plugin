/*! For license information please see face-landmarks-worker.min.js.LICENSE.txt */
(()=>{var e={8417:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js",function(e){function t(){return $.buffer!=z&&K($.buffer),D}function a(){return $.buffer!=z&&K($.buffer),P}function s(){return $.buffer!=z&&K($.buffer),L}function i(){return $.buffer!=z&&K($.buffer),W}function o(){return $.buffer!=z&&K($.buffer),B}var l,u,d,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){l=e,u=t})),"undefined"!=typeof process&&process.listeners&&(d={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,h={};for(p in c)c.hasOwnProperty(p)&&(h[p]=c[p]);var f,m,g,y,A=[],b=function(e,t){throw t};f="object"==typeof window,m="function"==typeof importScripts,g="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,y=!f&&!g&&!m;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(z=c.buffer);var w,v,k,I,S,N="";function T(e){return c.locateFile?c.locateFile(e,N):N+e}if(g){var C;N=m?n(5281).dirname(N)+"/":"//",w=function(e,t){return I||(I=n(9893)),S||(S=n(5281)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),A=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof pt))throw e})),process.on("unhandledRejection",ie),b=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{C=n(3556)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else y?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?A=scriptArgs:void 0!==arguments&&(A=arguments),"function"==typeof quit&&(b=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(f||m)&&(m?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==r&&r&&(N=r),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",g?(w=function(e,t){return I||(I=n(9893)),S||(S=n(5281)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));g&&"undefined"==typeof performance&&(n.g.performance=n(7244).performance);var E,_=c.print||console.log.bind(console),R=c.printErr||console.warn.bind(console);for(p in h)h.hasOwnProperty(p)&&(c[p]=h[p]);function M(e){M.shown||(M.shown={}),M.shown[e]||(M.shown[e]=1,R(e))}h=null,c.arguments&&(A=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(b=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(E=c.wasmBinary);var $,F,O=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ie("no native wasm support detected");var z,D,P,L,W,B,U=!1;function V(e,t){e||ie("Assertion failed: "+t)}function G(e){var t=c["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function j(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var l=s-65536;a+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function H(e,t){return e?j(a(),e,t):""}function q(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,a(),t,n)}function K(e){z=e,c.HEAP8=D=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=L=new Int32Array(e),c.HEAPU8=P=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=W=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=B=new Float64Array(e)}var X,Z=c.INITIAL_MEMORY||16777216;if(x)$=c.wasmMemory,z=c.buffer;else if(c.wasmMemory)$=c.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),g&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(z=$.buffer),Z=z.byteLength,K(z);var Y=[],J=[],Q=[],ee=[],te=[];function ne(){x||he(J)}x||J.push({func:function(){Ge()}});var re=0,ae=null,se=null;function ie(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),R(e+=""),U=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw u(t),t}function oe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function le(e){return oe(e,"data:application/octet-stream;base64,")}function ue(e){return oe(e,"file://")}c.preloadedImages={},c.preloadedAudios={};var de="tfjs-backend-wasm-threaded-simd.wasm";function ce(e){try{if(e==de&&E)return new Uint8Array(E);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){ie(e)}}le(de)||(de=T(de));var pe={10664:function(){throw"Canceled!"},10682:function(e,t){setTimeout((function(){et(e,t)}),0)}};function he(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?X.get(n)():X.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function fe(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),ct>>2),a=0;if(r==e&&Atomics.compareExchange(s(),ct>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function me(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=ye.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;ye.returnWorkerToPool(n)}}c._emscripten_futex_wake=fe;var ge,ye={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)ye.allocateUnusedWorker()},initRuntime:function(){for(var e=je(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=je(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),at(e,!m,1),Je(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;ye.threadExitHandlers.length>0;)ye.threadExitHandlers.pop()();x&&Xe()&&Ze()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),fe(e+0,2147483647),at(0,0,0)},threadExit:function(e){var t=Xe();t&&(ye.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){ye.runExitHandlersAndDeinitThread(Xe(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in ye.pthreads)(r=ye.pthreads[e])&&r.worker&&ye.returnWorkerToPool(r.worker);ye.pthreads={};for(var t=0;t<ye.unusedWorkers.length;++t)(n=ye.unusedWorkers[t]).terminate();for(ye.unusedWorkers=[],t=0;t<ye.runningWorkers.length;++t){var n,r=(n=ye.runningWorkers[t]).pthread;ye.freeThreadData(r),n.terminate()}ye.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,He(t),He(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&He(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){ye.runWithoutMainThreadQueuedCalls((function(){delete ye.pthreads[e.pthread.threadInfoStruct],ye.unusedWorkers.push(e),ye.runningWorkers.splice(ye.runningWorkers.indexOf(e),1),ye.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[dt>>2]=0;try{e()}finally{s()[dt>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(ye.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Xe()){var o=ye.pthreads[r.targetThread];return o?o.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(ye.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Ye();else if("spawnThread"===a)Oe(n.data);else if("cleanupThread"===a)me(r.thread);else if("killThread"===a)!function(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=ye.pthreads[e];t.worker.terminate(),ye.freeThreadData(t),ye.runningWorkers.splice(ye.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread);else if("cancelThread"===a)!function(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";ye.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)_("Thread "+r.threadId+": "+r.text);else if("printErr"===a)R("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&ye.returnWorkerToPool(e);else if("exitProcess"===a)try{!function(e){if(x)throw postMessage({cmd:"exitProcess",returnCode:e}),new pt(e);O||(ye.terminateAllThreads(),c.onExit&&c.onExit(e),U=!0),b(e,new pt(e))}(r.returnCode)}catch(n){if(n instanceof pt)return;throw n}else"cancelDone"===a?ye.returnWorkerToPool(e):"objectTransfer"===a?ye.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):R("worker sent an unknown command "+a);ye.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){R("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},g&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:$,wasmModule:F})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");ye.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==ye.unusedWorkers.length&&(ye.allocateUnusedWorker(),ye.loadWasmModuleToWorker(ye.unusedWorkers[0])),ye.unusedWorkers.length>0?ye.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Ae(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(f){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),ct>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),ct>>2,0),-73;if(0==Atomics.exchange(s(),ct>>2,0))break;if(Ye(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),ct>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function be(e,t){for(var n=arguments.length-2,r=st(),a=n,s=ot(8*a),i=s>>3,l=0;l<n;l++){var u=arguments[2+l];o()[i+l]=u}var d=nt(e,a,s,t);return it(r),d}c.establishStackSpace=function(e,t){lt(e,t),it(e)},c.getNoExitRuntime=function(){return O},c.invokeEntryPoint=function(e,t){return X.get(e)(t)},ge=g?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var xe=[],we=[];function ve(e){try{return $.grow(e-z.byteLength+65535>>>16),K($.buffer),1}catch(e){}}var ke={inEventHandler:0,removeAllEventListeners:function(){for(var e=ke.eventHandlers.length-1;e>=0;--e)ke._removeHandler(e);ke.eventHandlers=[],ke.deferredCalls=[]},registerRemoveEventListeners:function(){ke.removeEventListenersRegistered||(ee.push(ke.removeAllEventListeners),ke.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in ke.deferredCalls){var s=ke.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}ke.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ke.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ke.deferredCalls.length;++t)ke.deferredCalls[t].targetFunction==e&&(ke.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ke.inEventHandler&&ke.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ke.canPerformEventHandlerRequests())for(var e=0;e<ke.deferredCalls.length;++e){var t=ke.deferredCalls[e];ke.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ke.eventHandlers.length;++n)ke.eventHandlers[n].target!=e||t&&t!=ke.eventHandlers[n].eventTypeString||ke._removeHandler(n--)},_removeHandler:function(e){var t=ke.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ke.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ke.inEventHandler,ke.currentEventHandler=e,ke.runDeferredCalls(),e.handlerFunc(t),ke.runDeferredCalls(),--ke.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ke.eventHandlers.push(e),ke.registerRemoveEventListeners();else for(var n=0;n<ke.eventHandlers.length;++n)ke.eventHandlers[n].target==e.target&&ke.eventHandlers[n].eventTypeString==e.eventTypeString&&ke._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=st(),o=ot(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,rt(0,e,637534208,t,r,o),it(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return ye.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var Ie=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Se(e){return function(e){var t;return e=(t=e)>2?H(t):t,Ie[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}(e)}function Ne(e,t,n){var r=Se(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){!function(e,t,n,r){var a,i,o,l=st(),u=ot(12),d=0;t&&(i=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(a=t)+1,q(a,o=je(i),i),d=o),s()[u>>2]=d,s()[u+4>>2]=n,s()[u+8>>2]=r,rt(0,e,657457152,0,d,u),it(l)}(e,t=t?H(t):"",n,r)}(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Te(e,t,n){return x?be(2,1,e,t,n):Ne(e,t,n)}var Ce,Ee={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){Ee.lastError||(Ee.lastError=e)},getNewId:function(e){for(var t=Ee.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=H(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Ee.registerContext(n,t):0},registerContext:function(e,t){var n=je(8);s()[n+4>>2]=Xe();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Ee.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Ee.initExtensions(r),n},makeContextCurrent:function(e){return Ee.currentContext=Ee.contexts[e],c.ctx=Ce=Ee.currentContext&&Ee.currentContext.GLctx,!(e&&!Ce)},getContext:function(e){return Ee.contexts[e]},deleteContext:function(e){Ee.currentContext===Ee.contexts[e]&&(Ee.currentContext=null),"object"==typeof ke&&ke.removeAllHandlersOnTarget(Ee.contexts[e].GLctx.canvas),Ee.contexts[e]&&Ee.contexts[e].GLctx.canvas&&(Ee.contexts[e].GLctx.canvas.GLctxObject=void 0),He(Ee.contexts[e].handle),Ee.contexts[e]=null},initExtensions:function(e){if(e||(e=Ee.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t,n=e.GLctx;!function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})}(n),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(n),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(n),n.disjointTimerQueryExt=n.getExtension("EXT_disjoint_timer_query"),(t=n).multiDrawWebgl=t.getExtension("WEBGL_multi_draw"),(n.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&n.getExtension(e)}))}},populateUniformTable:function(e){for(var t=Ee.programs[e],n=Ee.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Ce.getProgramParameter(t,35718),s=0;s<a;++s){var i=Ce.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var l=Ce.getUniformLocation(t,o);if(l){var u=Ee.getNewId(Ee.uniforms);r[o]=[i.size,u],Ee.uniforms[u]=l;for(var d=1;d<i.size;++d){var c=o+"["+d+"]";l=Ce.getUniformLocation(t,c),u=Ee.getNewId(Ee.uniforms),Ee.uniforms[u]=l}}}}},_e=["default","low-power","high-performance"],Re={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Re.buffers[e];0===t||10===t?((1===e?_:R)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Re.varargs+=4,s()[Re.varargs-4>>2]},getStr:function(e){return H(e)},get64:function(e,t){return e}};function Me(e){return x?be(3,1,e):0}function $e(e,t,n,r,a){if(x)return be(4,1,e,t,n,r,a)}function Fe(e,t,n,r){if(x)return be(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var l=s()[t+8*o>>2],u=s()[t+(8*o+4)>>2],d=0;d<u;d++)Re.printChar(e,a()[l+d]);i+=u}return s()[r>>2]=i,0}function Oe(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=ye.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";ye.runningWorkers.push(t);for(var n=je(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=ye.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},l=o.threadInfoStruct>>2;Atomics.store(i(),l+16,e.detached),Atomics.store(i(),l+25,n),Atomics.store(i(),l+10,o.threadInfoStruct),Atomics.store(i(),l+20,e.stackSize),Atomics.store(i(),l+19,a),Atomics.store(i(),l+26,e.stackSize),Atomics.store(i(),l+28,a),Atomics.store(i(),l+29,e.detached);var u=Ke()+40;Atomics.store(i(),l+43,u),t.pthread=o;var d={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){d.time=performance.now(),t.postMessage(d,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function ze(){if(x){var e=Xe();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function De(){g||m||M("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Pe(e){if(x)return be(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return s()[qe()>>2]=28,-1}x||ye.initMainThreadBlock();var Le,We,Be,Ue=[null,function(e,t){if(x)return be(1,1,e,t)},Te,Me,$e,Fe,Pe],Ve={e:function(e,t,n,r){ie("Assertion failed: "+H(e)+", at: "+[t?H(t):"unknown filename",n,r?H(r):"unknown function"])},r:function(e,t){_main(e,t)},x:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=ye.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},b:function(){ie()},y:function(e,t,n){var r=function(e,t){var n;for(we.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,we.push(r?o()[t++>>1]:s()[t]),++t}return we}(t,n);return pe[e].apply(null,r)},j:function(e,t){},d:Ae,c:fe,f:ge,p:function(e,t,n){a().copyWithin(e,t,t+n)},A:function(){return g?n(8074).cpus().length:navigator.hardwareConcurrency},u:function(e,t,n){xe.length=t;for(var r=n>>3,a=0;a<t;a++)xe[a]=o()[r+a];return(e<0?pe[-e-1]:Ue[e]).apply(null,xe)},q:function(e){var t=a().length;if(e<=t)return!1;var n,r=2147483648;if(e>r)return!1;for(var s=1;s<=4;s*=2){var i=t*(1+.2/s);if(i=Math.min(i,e+100663296),ve(Math.min(r,((n=Math.max(e,i))%65536>0&&(n+=65536-n%65536),n))))return!0}return!1},v:function(e,t,n){return Se(e)?Ne(e,t,n):Te(e,t,n)},i:function(e){},s:function(e,t){},w:function(e,t){return n=e,r=t>>2,a=s()[r+6],i={alpha:!!s()[r+0],depth:!!s()[r+1],stencil:!!s()[r+2],antialias:!!s()[r+3],premultipliedAlpha:!!s()[r+4],preserveDrawingBuffer:!!s()[r+5],powerPreference:_e[a],failIfMajorPerformanceCaveat:!!s()[r+7],majorVersion:s()[r+8],minorVersion:s()[r+9],enableExtensionsByDefault:s()[r+10],explicitSwapControl:s()[r+11],proxyContextToMainThread:s()[r+12],renderViaOffscreenBackBuffer:s()[r+13]},(o=Se(n))?i.explicitSwapControl?0:Ee.createContext(o,i):0;var n,r,a,i,o},l:Me,n:$e,g:Fe,o:function(){ye.initRuntime()},a:$||c.wasmMemory,z:function(e){var t=ye.threadExitHandlers.pop();e&&t()},k:function(e,t){ye.threadExitHandlers.push((function(){X.get(e)(t)}))},h:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return R("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return R("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return tt(687865856,e,t,n,r);var o=0,l=0,u=0;t&&-1!=t?(o=s()[t>>2],o+=81920,l=s()[t+8>>2],u=0!==s()[t+12>>2]):o=2097152;var d=0==l;d?l=ut(16,o):V((l-=o)>0);for(var c=je(228),p=0;p<57;++p)i()[(c>>2)+p]=0;s()[e>>2]=c,s()[c+12>>2]=c;var h=c+152;s()[h>>2]=h;var f={stackBase:l,stackSize:o,allocatedOwnStack:d,detached:u,startRoutine:n,pthread_ptr:c,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Oe(f),0},m:function(e,t){return function(e,t){if(!e)return R("pthread_join attempted on a null thread pointer!"),71;if(x&&Xe()==e)return R("PThread "+e+" is attempting to join to itself!"),16;if(!x&&Qe()==e)return R("Main thread "+e+" is attempting to join to itself!"),16;if(s()[e+12>>2]!==e)return R("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),71;if(Atomics.load(i(),e+64>>2))return R("Attempted to join thread "+e+", which was already detached!"),28;for(De();;){var n=Atomics.load(i(),e+0>>2);if(1==n){var r=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=r),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):me(e),0}0,ze(),x||Ye(),Ae(e+0,n,x?100:1)}}(e,t)},t:Pe},Ge=(function(){var e={a:Ve};function t(e,t){var n=e.exports;if(c.asm=n,X=c.asm.I,F=t,!x){var r=ye.unusedWorkers.length;ye.unusedWorkers.forEach((function(e){ye.loadWasmModuleToWorker(e,(function(){--r||function(){if(re--,c.monitorRunDependencies&&c.monitorRunDependencies(re),0==re&&(null!==ae&&(clearInterval(ae),ae=null),se)){var e=se;se=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!E&&(f||m)){if("function"==typeof fetch&&!ue(de))return fetch(de,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+de+"'";return e.arrayBuffer()})).catch((function(){return ce(de)}));if(v)return new Promise((function(e,t){v(de,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ce(de)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){R("failed to asynchronously prepare wasm: "+e),ie(e)}))}if(x||(V(!x,"addRunDependency cannot be used in a pthread worker"),re++,c.monitorRunDependencies&&c.monitorRunDependencies(re)),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return R("Module.instantiateWasm callback failed with error: "+e),!1}(E||"function"!=typeof WebAssembly.instantiateStreaming||le(de)||ue(de)||"function"!=typeof fetch?r(n):fetch(de,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return R("wasm streaming compile failed: "+e),R("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(u)}(),c.___wasm_call_ctors=function(){return(Ge=c.___wasm_call_ctors=c.asm.B).apply(null,arguments)}),je=(c._init=function(){return(c._init=c.asm.C).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.D).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.E).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.F).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.G).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.H).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.J).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.K).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.L).apply(null,arguments)},c._All=function(){return(c._All=c.asm.M).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.N).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.O).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.P).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.Q).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.R).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.S).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.T).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.U).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.V).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.W).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.X).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Y).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.Z).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm._).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.$).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.aa).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.ba).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.ca).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.da).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.ea).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.fa).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ga).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.ha).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ia).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ja).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ka).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.la).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ma).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.na).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.oa).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.pa).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.qa).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ra).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.sa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.ta).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.ua).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.va).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.wa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.xa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ya).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.za).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.Aa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.Ba).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.Ca).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.Da).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Ea).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Fa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ga).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Ha).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ia).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ja).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ka).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.La).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ma).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Na).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Oa).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Pa).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Qa).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ra).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Sa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Ta).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Ua).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Va).apply(null,arguments)},c._SparseFillEmptyRows=function(){return(c._SparseFillEmptyRows=c.asm.Wa).apply(null,arguments)},c._SparseReshape=function(){return(c._SparseReshape=c.asm.Xa).apply(null,arguments)},c._SparseSegmentReduction=function(){return(c._SparseSegmentReduction=c.asm.Ya).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Za).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm._a).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.$a).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.ab).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.bb).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.cb).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.db).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.eb).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.fb).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.gb).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.hb).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.ib).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.jb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.kb).apply(null,arguments)},c._malloc=function(){return(je=c._malloc=c.asm.lb).apply(null,arguments)}),He=c._free=function(){return(He=c._free=c.asm.mb).apply(null,arguments)},qe=c.___errno_location=function(){return(qe=c.___errno_location=c.asm.nb).apply(null,arguments)},Ke=c._emscripten_get_global_libc=function(){return(Ke=c._emscripten_get_global_libc=c.asm.ob).apply(null,arguments)},Xe=c._pthread_self=function(){return(Xe=c._pthread_self=c.asm.pb).apply(null,arguments)},Ze=c.___pthread_tsd_run_dtors=function(){return(Ze=c.___pthread_tsd_run_dtors=c.asm.qb).apply(null,arguments)},Ye=c._emscripten_main_thread_process_queued_calls=function(){return(Ye=c._emscripten_main_thread_process_queued_calls=c.asm.rb).apply(null,arguments)},Je=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.sb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(Je=c._emscripten_register_main_browser_thread_id=c.asm.tb).apply(null,arguments)}),Qe=c._emscripten_main_browser_thread_id=function(){return(Qe=c._emscripten_main_browser_thread_id=c.asm.ub).apply(null,arguments)},et=c.__emscripten_do_dispatch_to_thread=function(){return(et=c.__emscripten_do_dispatch_to_thread=c.asm.vb).apply(null,arguments)},tt=c._emscripten_sync_run_in_main_thread_4=function(){return(tt=c._emscripten_sync_run_in_main_thread_4=c.asm.wb).apply(null,arguments)},nt=c._emscripten_run_in_main_runtime_thread_js=function(){return(nt=c._emscripten_run_in_main_runtime_thread_js=c.asm.xb).apply(null,arguments)},rt=c.__emscripten_call_on_thread=function(){return(rt=c.__emscripten_call_on_thread=c.asm.yb).apply(null,arguments)},at=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.zb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(at=c.__emscripten_thread_init=c.asm.Ab).apply(null,arguments)}),st=c.stackSave=function(){return(st=c.stackSave=c.asm.Bb).apply(null,arguments)},it=c.stackRestore=function(){return(it=c.stackRestore=c.asm.Cb).apply(null,arguments)},ot=c.stackAlloc=function(){return(ot=c.stackAlloc=c.asm.Db).apply(null,arguments)},lt=c._emscripten_stack_set_limits=function(){return(lt=c._emscripten_stack_set_limits=c.asm.Eb).apply(null,arguments)},ut=c._memalign=function(){return(ut=c._memalign=c.asm.Fb).apply(null,arguments)},dt=c.__emscripten_allow_main_runtime_queued_calls=10656,ct=c.__emscripten_main_thread_futex=12292;function pt(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ht(e){if(e=e||A,!(re>0)){if(x)return l(c),ne(),void postMessage({cmd:"loaded"});!function(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)e=c.preRun.shift(),Y.unshift(e);var e;he(Y)}}(),re>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Le||(Le=!0,c.calledRun=!0,U||(ne(),x||he(Q),l(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),function(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)e=c.postRun.shift(),te.unshift(e);var e;he(te)}}()))}}if(c.cwrap=function(e,n,r,a){var s=(r=r||[]).every((function(e){return"number"===e}));return"string"!==n&&s&&!a?G(e):function(){return function(e,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);q(e,t=ot(n),n)}return t},array:function(e){var n=ot(e.length);return function(e,n){t().set(e,n)}(e,n),n}},i=G(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var d=s[r[u]];d?(0===l&&(l=st()),o[u]=d(a[u])):o[u]=a[u]}var c=i.apply(null,o);return c=function(e){return"string"===n?H(e):"boolean"===n?Boolean(e):e}(c),0!==l&&it(l),c}(e,n,r,arguments)}},c.PThread=ye,c.PThread=ye,c.wasmMemory=$,c.ExitStatus=pt,se=function e(){Le||ht(),Le||(se=e)},c.run=ht,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();if(x&&(O=!1,ye.initWorker()),ht(),d&&(We={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!d.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!d.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Be=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Be=e}if(We){var ft=Be._dispose;Be._dispose=function(){ft(),We.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),We.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},3805:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"node_modules/@tensorflow/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js",function(e){var t,a,s,i=void 0!==(e=e||{})?e:{};i.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(s={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var o,l={};for(o in i)i.hasOwnProperty(o)&&(l[o]=i[o]);var u,d,c,p,h=[];u="object"==typeof window,d="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!u&&!c&&!d;var f,m,g,y,A,b="";c?(b=d?n(5281).dirname(b)+"/":"//",f=function(e,t){return y||(y=n(9893)),A||(A=n(5281)),e=A.normalize(e),y.readFileSync(e,t?null:"utf8")},g=function(e){var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),S(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof le))throw e})),process.on("unhandledRejection",V),i.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(f=function(e){return read(e)}),g=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(S("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?h=scriptArgs:void 0!==arguments&&(h=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||d)&&(d?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(g=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var x,w,v=i.print||console.log.bind(console),k=i.printErr||console.warn.bind(console);for(o in l)l.hasOwnProperty(o)&&(i[o]=l[o]);l=null,i.arguments&&(h=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(x=i.wasmBinary),i.noExitRuntime,"object"!=typeof WebAssembly&&V("no native wasm support detected");var I=!1;function S(e,t){e||V("Assertion failed: "+t)}function N(e){var t=i["_"+e];return S(t,"Cannot call unknown function "+e+", make sure it is exported"),t}var T,C,E,_,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function M(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function $(e,t){return e?M(E,e,t):""}function F(e){T=e,i.HEAP8=C=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=_=new Int32Array(e),i.HEAPU8=E=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var O,z=[],D=[],P=[],L=[];D.push({func:function(){re()}});var W=0,B=null,U=null;function V(e){i.onAbort&&i.onAbort(e),k(e+=""),I=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function G(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function j(e){return G(e,"data:application/octet-stream;base64,")}function H(e){return G(e,"file://")}i.preloadedImages={},i.preloadedAudios={};var q,K="tfjs-backend-wasm.wasm";function X(e){try{if(e==K&&x)return new Uint8Array(x);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(e){V(e)}}function Z(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?O.get(n)():O.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(i)}}function Y(e){try{return w.grow(e-T.byteLength+65535>>>16),F(w.buffer),1}catch(e){}}j(K)||(q=K,K=i.locateFile?i.locateFile(q,b):b+q);var J,Q,ee,te={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=te.buffers[e];0===t||10===t?((1===e?v:k)(M(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return te.varargs+=4,_[te.varargs-4>>2]},getStr:function(e){return $(e)},get64:function(e,t){return e}},ne={a:function(){V()},d:function(e,t,n){E.copyWithin(e,t,t+n)},e:function(e){var t,n=E.length,r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),Y(Math.min(r,((t=Math.max(e,s))%65536>0&&(t+=65536-t%65536),t))))return!0}return!1},f:function(e){return 0},c:function(e,t,n,r,a){},b:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=_[t+8*s>>2],o=_[t+(8*s+4)>>2],l=0;l<o;l++)te.printChar(e,E[i+l]);a+=o}return _[r>>2]=a,0},h:function(){return 6},g:function(){return 28},i:function(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return _[ae()>>2]=28,-1}},re=(function(){var e={a:ne};function t(e,t){var n=e.exports;i.asm=n,F((w=i.asm.j).buffer),O=i.asm.r,function(){if(W--,i.monitorRunDependencies&&i.monitorRunDependencies(W),0==W&&(null!==B&&(clearInterval(B),B=null),U)){var e=U;U=null,e()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!x&&(u||d)){if("function"==typeof fetch&&!H(K))return fetch(K,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+K+"'";return e.arrayBuffer()})).catch((function(){return X(K)}));if(m)return new Promise((function(e,t){m(K,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return X(K)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),V(e)}))}if(W++,i.monitorRunDependencies&&i.monitorRunDependencies(W),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(e){return k("Module.instantiateWasm callback failed with error: "+e),!1}(x||"function"!=typeof WebAssembly.instantiateStreaming||j(K)||H(K)||"function"!=typeof fetch?r(n):fetch(K,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),i.___wasm_call_ctors=function(){return(re=i.___wasm_call_ctors=i.asm.k).apply(null,arguments)}),ae=(i._init=function(){return(i._init=i.asm.l).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.m).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.n).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.o).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.p).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.q).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.s).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.t).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.u).apply(null,arguments)},i._All=function(){return(i._All=i.asm.v).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.w).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.x).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.y).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.z).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.A).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.B).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.C).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.D).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.E).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.F).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.G).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.H).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.I).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.J).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.K).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.L).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.M).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.N).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.O).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.P).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.Q).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.R).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.S).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.T).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.U).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.V).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.W).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.X).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Y).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.Z).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm._).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.$).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.aa).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.ba).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.ca).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.da).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.ea).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.fa).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.ga).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.ha).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.ia).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.ja).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.ka).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.la).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.ma).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.na).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.oa).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.pa).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.qa).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.ra).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.sa).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.ta).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.ua).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.va).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.wa).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.xa).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.ya).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.za).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.Aa).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.Ba).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Ca).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Da).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Ea).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.Fa).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.Ga).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.Ha).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Ia).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Ja).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.Ka).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.La).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.Ma).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Na).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Oa).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Pa).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Qa).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Ra).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.Sa).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Ta).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Ua).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm.Va).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.Wa).apply(null,arguments)},i._free=function(){return(i._free=i.asm.Xa).apply(null,arguments)},i.___errno_location=function(){return(ae=i.___errno_location=i.asm.Ya).apply(null,arguments)}),se=i.stackSave=function(){return(se=i.stackSave=i.asm.Za).apply(null,arguments)},ie=i.stackRestore=function(){return(ie=i.stackRestore=i.asm._a).apply(null,arguments)},oe=i.stackAlloc=function(){return(oe=i.stackAlloc=i.asm.$a).apply(null,arguments)};function le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ue(e){function n(){J||(J=!0,i.calledRun=!0,I||(Z(D),Z(P),t(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),function(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)e=i.postRun.shift(),L.unshift(e);var e;Z(L)}()))}e=e||h,W>0||(function(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)e=i.preRun.shift(),z.unshift(e);var e;Z(z)}(),W>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),n()}),1)):n()))}if(i.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?N(e):function(){return function(e,t,n,r){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,E,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){C.set(e,t)}(e,t),t}},s=N(e),i=[],o=0;if(r)for(var l=0;l<r.length;l++){var u=a[n[l]];u?(0===o&&(o=se()),i[l]=u(r[l])):i[l]=r[l]}var d=s.apply(null,i);return d=function(e){return"string"===t?$(e):"boolean"===t?Boolean(e):e}(d),0!==o&&ie(o),d}(e,t,n,arguments)}},U=function e(){J||ue(),J||(U=e)},i.run=ue,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(ue(),s&&(Q={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)ee=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ee=WasmBackendModuleThreadedSimd}if(Q){var de=ee._dispose;ee._dispose=function(){de(),Q.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Q.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});e.exports=a},8570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return v}else{if(e<=-f)return k;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),c=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));s=s.mul(p).add(o(c))}else s=(s=s.mul(a)).add(o(c))}return s.unsigned=t,s}function c(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?d(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=d,n.fromValue=c;var p=4294967296,h=p*p,f=h/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var A=i(1);n.ONE=A;var b=i(1,!0);n.UONE=b;var x=i(-1);n.NEG_ONE=x;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var v=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=v;var k=l(0,-2147483648,!1);n.MIN_VALUE=k;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(k)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),d=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return d+i;for(;d.length<6;)d="0"+d;i=""+d+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(k)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return!(1&~this.low)},I.isEven=function(){return!(1&this.low)},I.equals=function(e){return r(e)||(e=c(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=c(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(k)?k:this.not().add(A)},I.neg=I.negate,I.add=function(e){r(e)||(e=c(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,d=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+u)>>>16,d+=(p+=n+o)>>>16,d+=t+i,l((h&=65535)<<16|(f&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=c(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=c(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(k))return e.isOdd()?k:g;if(e.eq(k))return this.isOdd()?k:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,d=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,A=0,b=0;return A+=(b+=i*h)>>>16,y+=(A+=s*h)>>>16,A&=65535,y+=(A+=i*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*d)>>>16,f+=n*h+a*p+s*d+i*u,l((A&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=c(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;s=y}else{if(this.eq(k))return e.eq(A)||e.eq(x)?k:e.eq(k)?A:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?A:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(k))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),d=i<=48?1:u(2,i-48),p=o(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=o(n-=d,this.unsigned)).mul(e);p.isZero()&&(p=A),s=s.add(p),a=a.sub(h)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=c(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=c(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=c(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=c(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},9893:()=>{},8074:()=>{},5281:()=>{},7244:()=>{},3556:()=>{},5817:()=>{},8590:()=>{},9306:(e,t,n)=>{"use strict";var r=n(4901),a=n(6823),s=TypeError;e.exports=function(e){if(r(e))return e;throw new s(a(e)+" is not a function")}},5548:(e,t,n)=>{"use strict";var r=n(3517),a=n(6823),s=TypeError;e.exports=function(e){if(r(e))return e;throw new s(a(e)+" is not a constructor")}},3506:(e,t,n)=>{"use strict";var r=n(3925),a=String,s=TypeError;e.exports=function(e){if(r(e))return e;throw new s("Can't set "+a(e)+" as a prototype")}},6469:(e,t,n)=>{"use strict";var r=n(8227),a=n(2360),s=n(4913).f,i=r("unscopables"),o=Array.prototype;void 0===o[i]&&s(o,i,{configurable:!0,value:a(null)}),e.exports=function(e){o[i][e]=!0}},679:(e,t,n)=>{"use strict";var r=n(1625),a=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw new a("Incorrect invocation")}},8551:(e,t,n)=>{"use strict";var r=n(34),a=String,s=TypeError;e.exports=function(e){if(r(e))return e;throw new s(a(e)+" is not an object")}},9617:(e,t,n)=>{"use strict";var r=n(5397),a=n(5610),s=n(6198),i=function(e){return function(t,n,i){var o=r(t),l=s(o);if(0===l)return!e&&-1;var u,d=a(i,l);if(e&&n!=n){for(;l>d;)if((u=o[d++])!=u)return!0}else for(;l>d;d++)if((e||d in o)&&o[d]===n)return e||d||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},7680:(e,t,n)=>{"use strict";var r=n(9504);e.exports=r([].slice)},6319:(e,t,n)=>{"use strict";var r=n(8551),a=n(9539);e.exports=function(e,t,n,s){try{return s?t(r(n)[0],n[1]):t(n)}catch(t){a(e,"throw",t)}}},4428:(e,t,n)=>{"use strict";var r=n(8227)("iterator"),a=!1;try{var s=0,i={next:function(){return{done:!!s++}},return:function(){a=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){try{if(!t&&!a)return!1}catch(e){return!1}var n=!1;try{var s={};s[r]=function(){return{next:function(){return{done:n=!0}}}},e(s)}catch(e){}return n}},2195:(e,t,n)=>{"use strict";var r=n(9504),a=r({}.toString),s=r("".slice);e.exports=function(e){return s(a(e),8,-1)}},6955:(e,t,n)=>{"use strict";var r=n(2140),a=n(4901),s=n(2195),i=n(8227)("toStringTag"),o=Object,l="Arguments"===s(function(){return arguments}());e.exports=r?s:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=o(e),i))?n:l?s(t):"Object"===(r=s(t))&&a(t.callee)?"Arguments":r}},7740:(e,t,n)=>{"use strict";var r=n(9297),a=n(5031),s=n(7347),i=n(4913);e.exports=function(e,t,n){for(var o=a(t),l=i.f,u=s.f,d=0;d<o.length;d++){var c=o[d];r(e,c)||n&&r(n,c)||l(e,c,u(t,c))}}},2211:(e,t,n)=>{"use strict";var r=n(9039);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},2529:e=>{"use strict";e.exports=function(e,t){return{value:e,done:t}}},6699:(e,t,n)=>{"use strict";var r=n(3724),a=n(4913),s=n(6980);e.exports=r?function(e,t,n){return a.f(e,t,s(1,n))}:function(e,t,n){return e[t]=n,e}},6980:e=>{"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},2278:(e,t,n)=>{"use strict";var r=n(3724),a=n(4913),s=n(6980);e.exports=function(e,t,n){r?a.f(e,t,s(0,n)):e[t]=n}},2106:(e,t,n)=>{"use strict";var r=n(283),a=n(4913);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),a.f(e,t,n)}},6840:(e,t,n)=>{"use strict";var r=n(4901),a=n(4913),s=n(283),i=n(9433);e.exports=function(e,t,n,o){o||(o={});var l=o.enumerable,u=void 0!==o.name?o.name:t;if(r(n)&&s(n,u,o),o.global)l?e[t]=n:i(t,n);else{try{o.unsafe?e[t]&&(l=!0):delete e[t]}catch(e){}l?e[t]=n:a.f(e,t,{value:n,enumerable:!1,configurable:!o.nonConfigurable,writable:!o.nonWritable})}return e}},6279:(e,t,n)=>{"use strict";var r=n(6840);e.exports=function(e,t,n){for(var a in t)r(e,a,t[a],n);return e}},9433:(e,t,n)=>{"use strict";var r=n(4576),a=Object.defineProperty;e.exports=function(e,t){try{a(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},3724:(e,t,n)=>{"use strict";var r=n(9039);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4055:(e,t,n)=>{"use strict";var r=n(4576),a=n(34),s=r.document,i=a(s)&&a(s.createElement);e.exports=function(e){return i?s.createElement(e):{}}},8727:e=>{"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},4265:(e,t,n)=>{"use strict";var r=n(2839);e.exports=/ipad|iphone|ipod/i.test(r)&&"undefined"!=typeof Pebble},9544:(e,t,n)=>{"use strict";var r=n(2839);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},6193:(e,t,n)=>{"use strict";var r=n(4215);e.exports="NODE"===r},7860:(e,t,n)=>{"use strict";var r=n(2839);e.exports=/web0s(?!.*chrome)/i.test(r)},2839:(e,t,n)=>{"use strict";var r=n(4576).navigator,a=r&&r.userAgent;e.exports=a?String(a):""},9519:(e,t,n)=>{"use strict";var r,a,s=n(4576),i=n(2839),o=s.process,l=s.Deno,u=o&&o.versions||l&&l.version,d=u&&u.v8;d&&(a=(r=d.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(a=+r[1]),e.exports=a},4215:(e,t,n)=>{"use strict";var r=n(4576),a=n(2839),s=n(2195),i=function(e){return a.slice(0,e.length)===e};e.exports=i("Bun/")?"BUN":i("Cloudflare-Workers")?"CLOUDFLARE":i("Deno/")?"DENO":i("Node.js/")?"NODE":r.Bun&&"string"==typeof Bun.version?"BUN":r.Deno&&"object"==typeof Deno.version?"DENO":"process"===s(r.process)?"NODE":r.window&&r.document?"BROWSER":"REST"},8574:(e,t,n)=>{"use strict";var r=n(9504),a=Error,s=r("".replace),i=String(new a("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,l=o.test(i);e.exports=function(e,t){if(l&&"string"==typeof e&&!a.prepareStackTrace)for(;t--;)e=s(e,o,"");return e}},747:(e,t,n)=>{"use strict";var r=n(6699),a=n(8574),s=n(4659),i=Error.captureStackTrace;e.exports=function(e,t,n,o){s&&(i?i(e,t):r(e,"stack",a(n,o)))}},4659:(e,t,n)=>{"use strict";var r=n(9039),a=n(6980);e.exports=!r((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",a(1,7)),7!==e.stack)}))},6518:(e,t,n)=>{"use strict";var r=n(4576),a=n(7347).f,s=n(6699),i=n(6840),o=n(9433),l=n(7740),u=n(2796);e.exports=function(e,t){var n,d,c,p,h,f=e.target,m=e.global,g=e.stat;if(n=m?r:g?r[f]||o(f,{}):r[f]&&r[f].prototype)for(d in t){if(p=t[d],c=e.dontCallGetSet?(h=a(n,d))&&h.value:n[d],!u(m?d:f+(g?".":"#")+d,e.forced)&&void 0!==c){if(typeof p==typeof c)continue;l(p,c)}(e.sham||c&&c.sham)&&s(p,"sham",!0),i(n,d,p,e)}}},9039:e=>{"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},8745:(e,t,n)=>{"use strict";var r=n(616),a=Function.prototype,s=a.apply,i=a.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?i.bind(s):function(){return i.apply(s,arguments)})},6080:(e,t,n)=>{"use strict";var r=n(7476),a=n(9306),s=n(616),i=r(r.bind);e.exports=function(e,t){return a(e),void 0===t?e:s?i(e,t):function(){return e.apply(t,arguments)}}},616:(e,t,n)=>{"use strict";var r=n(9039);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},9565:(e,t,n)=>{"use strict";var r=n(616),a=Function.prototype.call;e.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},350:(e,t,n)=>{"use strict";var r=n(3724),a=n(9297),s=Function.prototype,i=r&&Object.getOwnPropertyDescriptor,o=a(s,"name"),l=o&&"something"===function(){}.name,u=o&&(!r||r&&i(s,"name").configurable);e.exports={EXISTS:o,PROPER:l,CONFIGURABLE:u}},6706:(e,t,n)=>{"use strict";var r=n(9504),a=n(9306);e.exports=function(e,t,n){try{return r(a(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(e){}}},7476:(e,t,n)=>{"use strict";var r=n(2195),a=n(9504);e.exports=function(e){if("Function"===r(e))return a(e)}},9504:(e,t,n)=>{"use strict";var r=n(616),a=Function.prototype,s=a.call,i=r&&a.bind.bind(s,s);e.exports=r?i:function(e){return function(){return s.apply(e,arguments)}}},7751:(e,t,n)=>{"use strict";var r=n(4576),a=n(4901);e.exports=function(e,t){return arguments.length<2?(n=r[e],a(n)?n:void 0):r[e]&&r[e][t];var n}},1767:e=>{"use strict";e.exports=function(e){return{iterator:e,next:e.next,done:!1}}},851:(e,t,n)=>{"use strict";var r=n(6955),a=n(5966),s=n(4117),i=n(6269),o=n(8227)("iterator");e.exports=function(e){if(!s(e))return a(e,o)||a(e,"@@iterator")||i[r(e)]}},81:(e,t,n)=>{"use strict";var r=n(9565),a=n(9306),s=n(8551),i=n(6823),o=n(851),l=TypeError;e.exports=function(e,t){var n=arguments.length<2?o(e):t;if(a(n))return s(r(n,e));throw new l(i(e)+" is not iterable")}},5966:(e,t,n)=>{"use strict";var r=n(9306),a=n(4117);e.exports=function(e,t){var n=e[t];return a(n)?void 0:r(n)}},4576:function(e,t,n){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},9297:(e,t,n)=>{"use strict";var r=n(9504),a=n(8981),s=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return s(a(e),t)}},421:e=>{"use strict";e.exports={}},3138:e=>{"use strict";e.exports=function(e,t){try{1===arguments.length?console.error(e):console.error(e,t)}catch(e){}}},397:(e,t,n)=>{"use strict";var r=n(7751);e.exports=r("document","documentElement")},5917:(e,t,n)=>{"use strict";var r=n(3724),a=n(9039),s=n(4055);e.exports=!r&&!a((function(){return 7!==Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a}))},7055:(e,t,n)=>{"use strict";var r=n(9504),a=n(9039),s=n(2195),i=Object,o=r("".split);e.exports=a((function(){return!i("z").propertyIsEnumerable(0)}))?function(e){return"String"===s(e)?o(e,""):i(e)}:i},3167:(e,t,n)=>{"use strict";var r=n(4901),a=n(34),s=n(2967);e.exports=function(e,t,n){var i,o;return s&&r(i=t.constructor)&&i!==n&&a(o=i.prototype)&&o!==n.prototype&&s(e,o),e}},3706:(e,t,n)=>{"use strict";var r=n(9504),a=n(4901),s=n(7629),i=r(Function.toString);a(s.inspectSource)||(s.inspectSource=function(e){return i(e)}),e.exports=s.inspectSource},7584:(e,t,n)=>{"use strict";var r=n(34),a=n(6699);e.exports=function(e,t){r(t)&&"cause"in t&&a(e,"cause",t.cause)}},1181:(e,t,n)=>{"use strict";var r,a,s,i=n(8622),o=n(4576),l=n(34),u=n(6699),d=n(9297),c=n(7629),p=n(6119),h=n(421),f="Object already initialized",m=o.TypeError,g=o.WeakMap;if(i||c.state){var y=c.state||(c.state=new g);y.get=y.get,y.has=y.has,y.set=y.set,r=function(e,t){if(y.has(e))throw new m(f);return t.facade=e,y.set(e,t),t},a=function(e){return y.get(e)||{}},s=function(e){return y.has(e)}}else{var A=p("state");h[A]=!0,r=function(e,t){if(d(e,A))throw new m(f);return t.facade=e,u(e,A,t),t},a=function(e){return d(e,A)?e[A]:{}},s=function(e){return d(e,A)}}e.exports={set:r,get:a,has:s,enforce:function(e){return s(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=a(t)).type!==e)throw new m("Incompatible receiver, "+e+" required");return n}}}},4209:(e,t,n)=>{"use strict";var r=n(8227),a=n(6269),s=r("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||i[s]===e)}},4901:e=>{"use strict";var t="object"==typeof document&&document.all;e.exports=void 0===t&&void 0!==t?function(e){return"function"==typeof e||e===t}:function(e){return"function"==typeof e}},3517:(e,t,n)=>{"use strict";var r=n(9504),a=n(9039),s=n(4901),i=n(6955),o=n(7751),l=n(3706),u=function(){},d=o("Reflect","construct"),c=/^\s*(?:class|function)\b/,p=r(c.exec),h=!c.test(u),f=function(e){if(!s(e))return!1;try{return d(u,[],e),!0}catch(e){return!1}},m=function(e){if(!s(e))return!1;switch(i(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return h||!!p(c,l(e))}catch(e){return!0}};m.sham=!0,e.exports=!d||a((function(){var e;return f(f.call)||!f(Object)||!f((function(){e=!0}))||e}))?m:f},2796:(e,t,n)=>{"use strict";var r=n(9039),a=n(4901),s=/#|\.prototype\./,i=function(e,t){var n=l[o(e)];return n===d||n!==u&&(a(t)?r(t):!!t)},o=i.normalize=function(e){return String(e).replace(s,".").toLowerCase()},l=i.data={},u=i.NATIVE="N",d=i.POLYFILL="P";e.exports=i},4117:e=>{"use strict";e.exports=function(e){return null==e}},34:(e,t,n)=>{"use strict";var r=n(4901);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},3925:(e,t,n)=>{"use strict";var r=n(34);e.exports=function(e){return r(e)||null===e}},6395:e=>{"use strict";e.exports=!1},757:(e,t,n)=>{"use strict";var r=n(7751),a=n(4901),s=n(1625),i=n(7040),o=Object;e.exports=i?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return a(t)&&s(t.prototype,o(e))}},2652:(e,t,n)=>{"use strict";var r=n(6080),a=n(9565),s=n(8551),i=n(6823),o=n(4209),l=n(6198),u=n(1625),d=n(81),c=n(851),p=n(9539),h=TypeError,f=function(e,t){this.stopped=e,this.result=t},m=f.prototype;e.exports=function(e,t,n){var g,y,A,b,x,w,v,k=n&&n.that,I=!(!n||!n.AS_ENTRIES),S=!(!n||!n.IS_RECORD),N=!(!n||!n.IS_ITERATOR),T=!(!n||!n.INTERRUPTED),C=r(t,k),E=function(e){return g&&p(g,"normal",e),new f(!0,e)},_=function(e){return I?(s(e),T?C(e[0],e[1],E):C(e[0],e[1])):T?C(e,E):C(e)};if(S)g=e.iterator;else if(N)g=e;else{if(!(y=c(e)))throw new h(i(e)+" is not iterable");if(o(y)){for(A=0,b=l(e);b>A;A++)if((x=_(e[A]))&&u(m,x))return x;return new f(!1)}g=d(e,y)}for(w=S?e.next:g.next;!(v=a(w,g)).done;){try{x=_(v.value)}catch(e){p(g,"throw",e)}if("object"==typeof x&&x&&u(m,x))return x}return new f(!1)}},9539:(e,t,n)=>{"use strict";var r=n(9565),a=n(8551),s=n(5966);e.exports=function(e,t,n){var i,o;a(e);try{if(!(i=s(e,"return"))){if("throw"===t)throw n;return n}i=r(i,e)}catch(e){o=!0,i=e}if("throw"===t)throw n;if(o)throw i;return a(i),n}},9462:(e,t,n)=>{"use strict";var r=n(9565),a=n(2360),s=n(6699),i=n(6279),o=n(8227),l=n(1181),u=n(5966),d=n(7657).IteratorPrototype,c=n(2529),p=n(9539),h=o("toStringTag"),f="IteratorHelper",m="WrapForValidIterator",g=l.set,y=function(e){var t=l.getterFor(e?m:f);return i(a(d),{next:function(){var n=t(this);if(e)return n.nextHandler();if(n.done)return c(void 0,!0);try{var r=n.nextHandler();return n.returnHandlerResult?r:c(r,n.done)}catch(e){throw n.done=!0,e}},return:function(){var n=t(this),a=n.iterator;if(n.done=!0,e){var s=u(a,"return");return s?r(s,a):c(void 0,!0)}if(n.inner)try{p(n.inner.iterator,"normal")}catch(e){return p(a,"throw",e)}return a&&p(a,"normal"),c(void 0,!0)}})},A=y(!0),b=y(!1);s(b,h,"Iterator Helper"),e.exports=function(e,t,n){var r=function(r,a){a?(a.iterator=r.iterator,a.next=r.next):a=r,a.type=t?m:f,a.returnHandlerResult=!!n,a.nextHandler=e,a.counter=0,a.done=!1,g(this,a)};return r.prototype=t?A:b,r}},7657:(e,t,n)=>{"use strict";var r,a,s,i=n(9039),o=n(4901),l=n(34),u=n(2360),d=n(2787),c=n(6840),p=n(8227),h=n(6395),f=p("iterator"),m=!1;[].keys&&("next"in(s=[].keys())?(a=d(d(s)))!==Object.prototype&&(r=a):m=!0),!l(r)||i((function(){var e={};return r[f].call(e)!==e}))?r={}:h&&(r=u(r)),o(r[f])||c(r,f,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:m}},6269:e=>{"use strict";e.exports={}},6198:(e,t,n)=>{"use strict";var r=n(8014);e.exports=function(e){return r(e.length)}},283:(e,t,n)=>{"use strict";var r=n(9504),a=n(9039),s=n(4901),i=n(9297),o=n(3724),l=n(350).CONFIGURABLE,u=n(3706),d=n(1181),c=d.enforce,p=d.get,h=String,f=Object.defineProperty,m=r("".slice),g=r("".replace),y=r([].join),A=o&&!a((function(){return 8!==f((function(){}),"length",{value:8}).length})),b=String(String).split("String"),x=e.exports=function(e,t,n){"Symbol("===m(h(t),0,7)&&(t="["+g(h(t),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!i(e,"name")||l&&e.name!==t)&&(o?f(e,"name",{value:t,configurable:!0}):e.name=t),A&&n&&i(n,"arity")&&e.length!==n.arity&&f(e,"length",{value:n.arity});try{n&&i(n,"constructor")&&n.constructor?o&&f(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=c(e);return i(r,"source")||(r.source=y(b,"string"==typeof t?t:"")),e};Function.prototype.toString=x((function(){return s(this)&&p(this).source||u(this)}),"toString")},741:e=>{"use strict";var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},1955:(e,t,n)=>{"use strict";var r,a,s,i,o,l=n(4576),u=n(3389),d=n(6080),c=n(9225).set,p=n(8265),h=n(9544),f=n(4265),m=n(7860),g=n(6193),y=l.MutationObserver||l.WebKitMutationObserver,A=l.document,b=l.process,x=l.Promise,w=u("queueMicrotask");if(!w){var v=new p,k=function(){var e,t;for(g&&(e=b.domain)&&e.exit();t=v.get();)try{t()}catch(e){throw v.head&&r(),e}e&&e.enter()};h||g||m||!y||!A?!f&&x&&x.resolve?((i=x.resolve(void 0)).constructor=x,o=d(i.then,i),r=function(){o(k)}):g?r=function(){b.nextTick(k)}:(c=d(c,l),r=function(){c(k)}):(a=!0,s=A.createTextNode(""),new y(k).observe(s,{characterData:!0}),r=function(){s.data=a=!a}),w=function(e){v.head||r(),v.add(e)}}e.exports=w},6043:(e,t,n)=>{"use strict";var r=n(9306),a=TypeError,s=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw new a("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new s(e)}},2603:(e,t,n)=>{"use strict";var r=n(655);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},2360:(e,t,n)=>{"use strict";var r,a=n(8551),s=n(6801),i=n(8727),o=n(421),l=n(397),u=n(4055),d=n(6119),c="prototype",p="script",h=d("IE_PROTO"),f=function(){},m=function(e){return"<"+p+">"+e+"</"+p+">"},g=function(e){e.write(m("")),e.close();var t=e.parentWindow.Object;return e=null,t},y=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}var e,t,n;y="undefined"!=typeof document?document.domain&&r?g(r):(t=u("iframe"),n="java"+p+":",t.style.display="none",l.appendChild(t),t.src=String(n),(e=t.contentWindow.document).open(),e.write(m("document.F=Object")),e.close(),e.F):g(r);for(var a=i.length;a--;)delete y[c][i[a]];return y()};o[h]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(f[c]=a(e),n=new f,f[c]=null,n[h]=e):n=y(),void 0===t?n:s.f(n,t)}},6801:(e,t,n)=>{"use strict";var r=n(3724),a=n(8686),s=n(4913),i=n(8551),o=n(5397),l=n(1072);t.f=r&&!a?Object.defineProperties:function(e,t){i(e);for(var n,r=o(t),a=l(t),u=a.length,d=0;u>d;)s.f(e,n=a[d++],r[n]);return e}},4913:(e,t,n)=>{"use strict";var r=n(3724),a=n(5917),s=n(8686),i=n(8551),o=n(6969),l=TypeError,u=Object.defineProperty,d=Object.getOwnPropertyDescriptor,c="enumerable",p="configurable",h="writable";t.f=r?s?function(e,t,n){if(i(e),t=o(t),i(n),"function"==typeof e&&"prototype"===t&&"value"in n&&h in n&&!n[h]){var r=d(e,t);r&&r[h]&&(e[t]=n.value,n={configurable:p in n?n[p]:r[p],enumerable:c in n?n[c]:r[c],writable:!1})}return u(e,t,n)}:u:function(e,t,n){if(i(e),t=o(t),i(n),a)try{return u(e,t,n)}catch(e){}if("get"in n||"set"in n)throw new l("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},7347:(e,t,n)=>{"use strict";var r=n(3724),a=n(9565),s=n(8773),i=n(6980),o=n(5397),l=n(6969),u=n(9297),d=n(5917),c=Object.getOwnPropertyDescriptor;t.f=r?c:function(e,t){if(e=o(e),t=l(t),d)try{return c(e,t)}catch(e){}if(u(e,t))return i(!a(s.f,e,t),e[t])}},8480:(e,t,n)=>{"use strict";var r=n(1828),a=n(8727).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},3717:(e,t)=>{"use strict";t.f=Object.getOwnPropertySymbols},2787:(e,t,n)=>{"use strict";var r=n(9297),a=n(4901),s=n(8981),i=n(6119),o=n(2211),l=i("IE_PROTO"),u=Object,d=u.prototype;e.exports=o?u.getPrototypeOf:function(e){var t=s(e);if(r(t,l))return t[l];var n=t.constructor;return a(n)&&t instanceof n?n.prototype:t instanceof u?d:null}},1625:(e,t,n)=>{"use strict";var r=n(9504);e.exports=r({}.isPrototypeOf)},1828:(e,t,n)=>{"use strict";var r=n(9504),a=n(9297),s=n(5397),i=n(9617).indexOf,o=n(421),l=r([].push);e.exports=function(e,t){var n,r=s(e),u=0,d=[];for(n in r)!a(o,n)&&a(r,n)&&l(d,n);for(;t.length>u;)a(r,n=t[u++])&&(~i(d,n)||l(d,n));return d}},1072:(e,t,n)=>{"use strict";var r=n(1828),a=n(8727);e.exports=Object.keys||function(e){return r(e,a)}},8773:(e,t)=>{"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!n.call({1:2},1);t.f=a?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},2967:(e,t,n)=>{"use strict";var r=n(6706),a=n(34),s=n(7750),i=n(3506);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=r(Object.prototype,"__proto__","set"))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return s(n),i(r),a(n)?(t?e(n,r):n.__proto__=r,n):n}}():void 0)},4270:(e,t,n)=>{"use strict";var r=n(9565),a=n(4901),s=n(34),i=TypeError;e.exports=function(e,t){var n,o;if("string"===t&&a(n=e.toString)&&!s(o=r(n,e)))return o;if(a(n=e.valueOf)&&!s(o=r(n,e)))return o;if("string"!==t&&a(n=e.toString)&&!s(o=r(n,e)))return o;throw new i("Can't convert object to primitive value")}},5031:(e,t,n)=>{"use strict";var r=n(7751),a=n(9504),s=n(8480),i=n(3717),o=n(8551),l=a([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=s.f(o(e)),n=i.f;return n?l(t,n(e)):t}},1103:e=>{"use strict";e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},916:(e,t,n)=>{"use strict";var r=n(4576),a=n(550),s=n(4901),i=n(2796),o=n(3706),l=n(8227),u=n(4215),d=n(6395),c=n(9519),p=a&&a.prototype,h=l("species"),f=!1,m=s(r.PromiseRejectionEvent),g=i("Promise",(function(){var e=o(a),t=e!==String(a);if(!t&&66===c)return!0;if(d&&(!p.catch||!p.finally))return!0;if(!c||c<51||!/native code/.test(e)){var n=new a((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};if((n.constructor={})[h]=r,!(f=n.then((function(){}))instanceof r))return!0}return!(t||"BROWSER"!==u&&"DENO"!==u||m)}));e.exports={CONSTRUCTOR:g,REJECTION_EVENT:m,SUBCLASSING:f}},550:(e,t,n)=>{"use strict";var r=n(4576);e.exports=r.Promise},3438:(e,t,n)=>{"use strict";var r=n(8551),a=n(34),s=n(6043);e.exports=function(e,t){if(r(e),a(t)&&t.constructor===e)return t;var n=s.f(e);return(0,n.resolve)(t),n.promise}},537:(e,t,n)=>{"use strict";var r=n(550),a=n(4428),s=n(916).CONSTRUCTOR;e.exports=s||!a((function(e){r.all(e).then(void 0,(function(){}))}))},1056:(e,t,n)=>{"use strict";var r=n(4913).f;e.exports=function(e,t,n){n in e||r(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},8265:e=>{"use strict";var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var t={item:e,next:null},n=this.tail;n?n.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return null===(this.head=e.next)&&(this.tail=null),e.item}},e.exports=t},7750:(e,t,n)=>{"use strict";var r=n(4117),a=TypeError;e.exports=function(e){if(r(e))throw new a("Can't call method on "+e);return e}},3389:(e,t,n)=>{"use strict";var r=n(4576),a=n(3724),s=Object.getOwnPropertyDescriptor;e.exports=function(e){if(!a)return r[e];var t=s(r,e);return t&&t.value}},7633:(e,t,n)=>{"use strict";var r=n(7751),a=n(2106),s=n(8227),i=n(3724),o=s("species");e.exports=function(e){var t=r(e);i&&t&&!t[o]&&a(t,o,{configurable:!0,get:function(){return this}})}},687:(e,t,n)=>{"use strict";var r=n(4913).f,a=n(9297),s=n(8227)("toStringTag");e.exports=function(e,t,n){e&&!n&&(e=e.prototype),e&&!a(e,s)&&r(e,s,{configurable:!0,value:t})}},6119:(e,t,n)=>{"use strict";var r=n(5745),a=n(3392),s=r("keys");e.exports=function(e){return s[e]||(s[e]=a(e))}},7629:(e,t,n)=>{"use strict";var r=n(6395),a=n(4576),s=n(9433),i="__core-js_shared__",o=e.exports=a[i]||s(i,{});(o.versions||(o.versions=[])).push({version:"3.40.0",mode:r?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.40.0/LICENSE",source:"https://github.com/zloirock/core-js"})},5745:(e,t,n)=>{"use strict";var r=n(7629);e.exports=function(e,t){return r[e]||(r[e]=t||{})}},2293:(e,t,n)=>{"use strict";var r=n(8551),a=n(5548),s=n(4117),i=n(8227)("species");e.exports=function(e,t){var n,o=r(e).constructor;return void 0===o||s(n=r(o)[i])?t:a(n)}},4495:(e,t,n)=>{"use strict";var r=n(9519),a=n(9039),s=n(4576).String;e.exports=!!Object.getOwnPropertySymbols&&!a((function(){var e=Symbol("symbol detection");return!s(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},9225:(e,t,n)=>{"use strict";var r,a,s,i,o=n(4576),l=n(8745),u=n(6080),d=n(4901),c=n(9297),p=n(9039),h=n(397),f=n(7680),m=n(4055),g=n(2812),y=n(9544),A=n(6193),b=o.setImmediate,x=o.clearImmediate,w=o.process,v=o.Dispatch,k=o.Function,I=o.MessageChannel,S=o.String,N=0,T={},C="onreadystatechange";p((function(){r=o.location}));var E=function(e){if(c(T,e)){var t=T[e];delete T[e],t()}},_=function(e){return function(){E(e)}},R=function(e){E(e.data)},M=function(e){o.postMessage(S(e),r.protocol+"//"+r.host)};b&&x||(b=function(e){g(arguments.length,1);var t=d(e)?e:k(e),n=f(arguments,1);return T[++N]=function(){l(t,void 0,n)},a(N),N},x=function(e){delete T[e]},A?a=function(e){w.nextTick(_(e))}:v&&v.now?a=function(e){v.now(_(e))}:I&&!y?(i=(s=new I).port2,s.port1.onmessage=R,a=u(i.postMessage,i)):o.addEventListener&&d(o.postMessage)&&!o.importScripts&&r&&"file:"!==r.protocol&&!p(M)?(a=M,o.addEventListener("message",R,!1)):a=C in m("script")?function(e){h.appendChild(m("script"))[C]=function(){h.removeChild(this),E(e)}}:function(e){setTimeout(_(e),0)}),e.exports={set:b,clear:x}},5610:(e,t,n)=>{"use strict";var r=n(1291),a=Math.max,s=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):s(n,t)}},5397:(e,t,n)=>{"use strict";var r=n(7055),a=n(7750);e.exports=function(e){return r(a(e))}},1291:(e,t,n)=>{"use strict";var r=n(741);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},8014:(e,t,n)=>{"use strict";var r=n(1291),a=Math.min;e.exports=function(e){var t=r(e);return t>0?a(t,9007199254740991):0}},8981:(e,t,n)=>{"use strict";var r=n(7750),a=Object;e.exports=function(e){return a(r(e))}},2777:(e,t,n)=>{"use strict";var r=n(9565),a=n(34),s=n(757),i=n(5966),o=n(4270),l=n(8227),u=TypeError,d=l("toPrimitive");e.exports=function(e,t){if(!a(e)||s(e))return e;var n,l=i(e,d);if(l){if(void 0===t&&(t="default"),n=r(l,e,t),!a(n)||s(n))return n;throw new u("Can't convert object to primitive value")}return void 0===t&&(t="number"),o(e,t)}},6969:(e,t,n)=>{"use strict";var r=n(2777),a=n(757);e.exports=function(e){var t=r(e,"string");return a(t)?t:t+""}},2140:(e,t,n)=>{"use strict";var r={};r[n(8227)("toStringTag")]="z",e.exports="[object z]"===String(r)},655:(e,t,n)=>{"use strict";var r=n(6955),a=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return a(e)}},6823:e=>{"use strict";var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},3392:(e,t,n)=>{"use strict";var r=n(9504),a=0,s=Math.random(),i=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+i(++a+s,36)}},7040:(e,t,n)=>{"use strict";var r=n(4495);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},8686:(e,t,n)=>{"use strict";var r=n(3724),a=n(9039);e.exports=r&&a((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},2812:e=>{"use strict";var t=TypeError;e.exports=function(e,n){if(e<n)throw new t("Not enough arguments");return e}},8622:(e,t,n)=>{"use strict";var r=n(4576),a=n(4901),s=r.WeakMap;e.exports=a(s)&&/native code/.test(String(s))},8227:(e,t,n)=>{"use strict";var r=n(4576),a=n(5745),s=n(9297),i=n(3392),o=n(4495),l=n(7040),u=r.Symbol,d=a("wks"),c=l?u.for||u:u&&u.withoutSetter||i;e.exports=function(e){return s(d,e)||(d[e]=o&&s(u,e)?u[e]:c("Symbol."+e)),d[e]}},4601:(e,t,n)=>{"use strict";var r=n(7751),a=n(9297),s=n(6699),i=n(1625),o=n(2967),l=n(7740),u=n(1056),d=n(3167),c=n(2603),p=n(7584),h=n(747),f=n(3724),m=n(6395);e.exports=function(e,t,n,g){var y="stackTraceLimit",A=g?2:1,b=e.split("."),x=b[b.length-1],w=r.apply(null,b);if(w){var v=w.prototype;if(!m&&a(v,"cause")&&delete v.cause,!n)return w;var k=r("Error"),I=t((function(e,t){var n=c(g?t:e,void 0),r=g?new w(e):new w;return void 0!==n&&s(r,"message",n),h(r,I,r.stack,2),this&&i(v,this)&&d(r,this,I),arguments.length>A&&p(r,arguments[A]),r}));if(I.prototype=v,"Error"!==x?o?o(I,k):l(I,k,{name:!0}):f&&y in w&&(u(I,w,y),u(I,w,"prepareStackTrace")),l(I,w),!m)try{v.name!==x&&s(v,"name",x),v.constructor=I}catch(e){}return I}}},4423:(e,t,n)=>{"use strict";var r=n(6518),a=n(9617).includes,s=n(9039),i=n(6469);r({target:"Array",proto:!0,forced:s((function(){return!Array(1).includes()}))},{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),i("includes")},6280:(e,t,n)=>{"use strict";var r=n(6518),a=n(4576),s=n(8745),i=n(4601),o="WebAssembly",l=a[o],u=7!==new Error("e",{cause:7}).cause,d=function(e,t){var n={};n[e]=i(e,t,u),r({global:!0,constructor:!0,arity:1,forced:u},n)},c=function(e,t){if(l&&l[e]){var n={};n[e]=i(o+"."+e,t,u),r({target:o,stat:!0,constructor:!0,arity:1,forced:u},n)}};d("Error",(function(e){return function(t){return s(e,this,arguments)}})),d("EvalError",(function(e){return function(t){return s(e,this,arguments)}})),d("RangeError",(function(e){return function(t){return s(e,this,arguments)}})),d("ReferenceError",(function(e){return function(t){return s(e,this,arguments)}})),d("SyntaxError",(function(e){return function(t){return s(e,this,arguments)}})),d("TypeError",(function(e){return function(t){return s(e,this,arguments)}})),d("URIError",(function(e){return function(t){return s(e,this,arguments)}})),c("CompileError",(function(e){return function(t){return s(e,this,arguments)}})),c("LinkError",(function(e){return function(t){return s(e,this,arguments)}})),c("RuntimeError",(function(e){return function(t){return s(e,this,arguments)}}))},8111:(e,t,n)=>{"use strict";var r=n(6518),a=n(4576),s=n(679),i=n(8551),o=n(4901),l=n(2787),u=n(2106),d=n(2278),c=n(9039),p=n(9297),h=n(8227),f=n(7657).IteratorPrototype,m=n(3724),g=n(6395),y="constructor",A="Iterator",b=h("toStringTag"),x=TypeError,w=a[A],v=g||!o(w)||w.prototype!==f||!c((function(){w({})})),k=function(){if(s(this,f),l(this)===f)throw new x("Abstract class Iterator not directly constructable")},I=function(e,t){m?u(f,e,{configurable:!0,get:function(){return t},set:function(t){if(i(this),this===f)throw new x("You can't redefine this property");p(this,e)?this[e]=t:d(this,e,t)}}):f[e]=t};p(f,b)||I(b,A),!v&&p(f,y)&&f[y]!==Object||I(y,k),k.prototype=f,r({global:!0,constructor:!0,forced:v},{Iterator:k})},2489:(e,t,n)=>{"use strict";var r=n(6518),a=n(9565),s=n(9306),i=n(8551),o=n(1767),l=n(9462),u=n(6319),d=n(6395),c=l((function(){for(var e,t,n=this.iterator,r=this.predicate,s=this.next;;){if(e=i(a(s,n)),this.done=!!e.done)return;if(t=e.value,u(n,r,[t,this.counter++],!0))return t}}));r({target:"Iterator",proto:!0,real:!0,forced:d},{filter:function(e){return i(this),s(e),new c(o(this),{predicate:e})}})},6499:(e,t,n)=>{"use strict";var r=n(6518),a=n(9565),s=n(9306),i=n(6043),o=n(1103),l=n(2652);r({target:"Promise",stat:!0,forced:n(537)},{all:function(e){var t=this,n=i.f(t),r=n.resolve,u=n.reject,d=o((function(){var n=s(t.resolve),i=[],o=0,d=1;l(e,(function(e){var s=o++,l=!1;d++,a(n,t,e).then((function(e){l||(l=!0,i[s]=e,--d||r(i))}),u)})),--d||r(i)}));return d.error&&u(d.value),n.promise}})},2003:(e,t,n)=>{"use strict";var r=n(6518),a=n(6395),s=n(916).CONSTRUCTOR,i=n(550),o=n(7751),l=n(4901),u=n(6840),d=i&&i.prototype;if(r({target:"Promise",proto:!0,forced:s,real:!0},{catch:function(e){return this.then(void 0,e)}}),!a&&l(i)){var c=o("Promise").prototype.catch;d.catch!==c&&u(d,"catch",c,{unsafe:!0})}},436:(e,t,n)=>{"use strict";var r,a,s,i=n(6518),o=n(6395),l=n(6193),u=n(4576),d=n(9565),c=n(6840),p=n(2967),h=n(687),f=n(7633),m=n(9306),g=n(4901),y=n(34),A=n(679),b=n(2293),x=n(9225).set,w=n(1955),v=n(3138),k=n(1103),I=n(8265),S=n(1181),N=n(550),T=n(916),C=n(6043),E="Promise",_=T.CONSTRUCTOR,R=T.REJECTION_EVENT,M=T.SUBCLASSING,$=S.getterFor(E),F=S.set,O=N&&N.prototype,z=N,D=O,P=u.TypeError,L=u.document,W=u.process,B=C.f,U=B,V=!!(L&&L.createEvent&&u.dispatchEvent),G="unhandledrejection",j=function(e){var t;return!(!y(e)||!g(t=e.then))&&t},H=function(e,t){var n,r,a,s=t.value,i=1===t.state,o=i?e.ok:e.fail,l=e.resolve,u=e.reject,c=e.domain;try{o?(i||(2===t.rejection&&Y(t),t.rejection=1),!0===o?n=s:(c&&c.enter(),n=o(s),c&&(c.exit(),a=!0)),n===e.promise?u(new P("Promise-chain cycle")):(r=j(n))?d(r,n,l,u):l(n)):u(s)}catch(e){c&&!a&&c.exit(),u(e)}},q=function(e,t){e.notified||(e.notified=!0,w((function(){for(var n,r=e.reactions;n=r.get();)H(n,e);e.notified=!1,t&&!e.rejection&&X(e)})))},K=function(e,t,n){var r,a;V?((r=L.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),u.dispatchEvent(r)):r={promise:t,reason:n},!R&&(a=u["on"+e])?a(r):e===G&&v("Unhandled promise rejection",n)},X=function(e){d(x,u,(function(){var t,n=e.facade,r=e.value;if(Z(e)&&(t=k((function(){l?W.emit("unhandledRejection",r,n):K(G,n,r)})),e.rejection=l||Z(e)?2:1,t.error))throw t.value}))},Z=function(e){return 1!==e.rejection&&!e.parent},Y=function(e){d(x,u,(function(){var t=e.facade;l?W.emit("rejectionHandled",t):K("rejectionhandled",t,e.value)}))},J=function(e,t,n){return function(r){e(t,r,n)}},Q=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,q(e,!0))},ee=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw new P("Promise can't be resolved itself");var r=j(t);r?w((function(){var n={done:!1};try{d(r,t,J(ee,n,e),J(Q,n,e))}catch(t){Q(n,t,e)}})):(e.value=t,e.state=1,q(e,!1))}catch(t){Q({done:!1},t,e)}}};if(_&&(D=(z=function(e){A(this,D),m(e),d(r,this);var t=$(this);try{e(J(ee,t),J(Q,t))}catch(e){Q(t,e)}}).prototype,(r=function(e){F(this,{type:E,done:!1,notified:!1,parent:!1,reactions:new I,rejection:!1,state:0,value:null})}).prototype=c(D,"then",(function(e,t){var n=$(this),r=B(b(this,z));return n.parent=!0,r.ok=!g(e)||e,r.fail=g(t)&&t,r.domain=l?W.domain:void 0,0===n.state?n.reactions.add(r):w((function(){H(r,n)})),r.promise})),a=function(){var e=new r,t=$(e);this.promise=e,this.resolve=J(ee,t),this.reject=J(Q,t)},C.f=B=function(e){return e===z||void 0===e?new a(e):U(e)},!o&&g(N)&&O!==Object.prototype)){s=O.then,M||c(O,"then",(function(e,t){var n=this;return new z((function(e,t){d(s,n,e,t)})).then(e,t)}),{unsafe:!0});try{delete O.constructor}catch(e){}p&&p(O,D)}i({global:!0,constructor:!0,wrap:!0,forced:_},{Promise:z}),h(z,E,!1,!0),f(E)},3362:(e,t,n)=>{"use strict";n(436),n(6499),n(2003),n(7743),n(1481),n(280)},7743:(e,t,n)=>{"use strict";var r=n(6518),a=n(9565),s=n(9306),i=n(6043),o=n(1103),l=n(2652);r({target:"Promise",stat:!0,forced:n(537)},{race:function(e){var t=this,n=i.f(t),r=n.reject,u=o((function(){var i=s(t.resolve);l(e,(function(e){a(i,t,e).then(n.resolve,r)}))}));return u.error&&r(u.value),n.promise}})},1481:(e,t,n)=>{"use strict";var r=n(6518),a=n(6043);r({target:"Promise",stat:!0,forced:n(916).CONSTRUCTOR},{reject:function(e){var t=a.f(this);return(0,t.reject)(e),t.promise}})},280:(e,t,n)=>{"use strict";var r=n(6518),a=n(7751),s=n(6395),i=n(550),o=n(916).CONSTRUCTOR,l=n(3438),u=a("Promise"),d=s&&!o;r({target:"Promise",stat:!0,forced:s||o},{resolve:function(e){return l(d&&this===u?i:this,e)}})},8992:(e,t,n)=>{"use strict";n(8111)},4520:(e,t,n)=>{"use strict";n(2489)},3611:(e,t,n)=>{"use strict";var r=n(6518),a=n(4576),s=n(2106),i=n(3724),o=TypeError,l=Object.defineProperty,u=a.self!==a;try{if(i){var d=Object.getOwnPropertyDescriptor(a,"self");!u&&d&&d.get&&d.enumerable||s(a,"self",{get:function(){return a},set:function(e){if(this!==a)throw new o("Illegal invocation");l(a,"self",{value:e,writable:!0,configurable:!0,enumerable:!0})},configurable:!0,enumerable:!0})}else r({global:!0,simple:!0,forced:u},{self:a})}catch(e){}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,n),s.exports}n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";n(3362),n(3611),n(6280),n(4423),n(8992),n(4520);class e{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class t{refCount(e){return r("refCount")}incRef(e){return r("incRef")}timerAvailable(){return!0}time(e){return r("time")}read(e){return r("read")}readSync(e){return r("readSync")}readToGPU(e,t){return r("readToGPU")}numDataIds(){return r("numDataIds")}disposeData(e,t){return r("disposeData")}write(e,t,n){return r("write")}move(e,t,n,a,s){return r("move")}memory(){return r("memory")}floatPrecision(){return r("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return r("dispose")}}function r(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function a(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function s(e,t,n=""){a(u(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function i(e){a(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function o(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||h(e)&&!n)for(let r=0;r<e.length;++r)o(e[r],t,n);else t.push(e);return t}function l(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function u(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function c(e,t){const n=t.length;return a((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),a(e.every((e=>e%1==0)),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function p(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function h(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function f(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function m(e){return"string"==typeof e||e instanceof String}function g(e){return Array.isArray(e)?g(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":m(e)?"string":"boolean"==typeof e?"bool":"float32"}function y(e){return!!(e&&e.constructor&&e.call&&e.apply)}function A(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function b(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=b(e+t*o,i,n,r)}return a}function x(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return b(0,e,t,n)}function w(e,t){const n=v(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function v(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function k(e){e.forEach((t=>{a(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function I(e){return e&&e.then&&"function"==typeof e.then}const S="tfjsflags";class N{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=T,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(I(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);S in e&&e[S].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function T(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function C(){return _}let E,_=null;function R(){if(null==E){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}E=e}return E}function M(e,t){const n=function(){const e=R();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const $="Add",F="AddN",O="ArgMax",z="AvgPool",D="BatchMatMul",P="Cast",L="ClipByValue",W="Concat",B="Conv2D",U="Conv2DBackpropInput",V="Cumsum",G="CropAndResize",j="DepthToSpace",H="DepthwiseConv2dNative",q="RealDiv",K="ExpandDims",X="Fill",Z="FlipLeftRight",Y="FloorDiv",J="FusedBatchNorm",Q="GatherNd",ee="Greater",te="GreaterEqual",ne="Identity",re="LeakyRelu",ae="LessEqual",se="LogicalAnd",ie="Max",oe="MaxPool",le="Mean",ue="Min",de="Minimum",ce="MirrorPad",pe="Multiply",he="NotEqual",fe="NonMaxSuppressionV3",me="NonMaxSuppressionV4",ge="NonMaxSuppressionV5",ye="OneHot",Ae="Pack",be="PadV2",xe="Prelu",we="Prod",ve="Range",ke="Relu",Ie="Reshape",Se="ResizeBilinear",Ne="Relu6",Te="Reverse",Ce="Round",Ee="ScatterNd",_e="Select",Re="Slice",Me="Sigmoid",$e="Sqrt",Fe="Sum",Oe="SplitV",ze="Softmax",De="SparseFillEmptyRows",Pe="SparseReshape",Le="SparseSegmentMean",We="SparseSegmentSum",Be="SquaredDifference",Ue="StridedSlice",Ve="Tile",Ge="TopK",je="Transform",He="Transpose",qe="Unpack",Ke="ZerosLike",Xe="Step",Ze="RotateWithOffset",Ye="_FusedMatMul",Je="FusedConv2D",Qe="FusedDepthwiseConv2D";function et(...e){C().getBool("IS_TEST")||C().getBool("PROD")||console.warn(...e)}const tt=M("kernelRegistry",(()=>new Map)),nt=M("gradRegistry",(()=>new Map));function rt(e,t){const n=ot(e,t);return tt.get(n)}function at(e){return nt.get(e)}function st(e){const t=tt.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function it(e){const{kernelName:t,backendName:n}=e,r=ot(t,n);tt.has(r)&&et(`The kernel '${t}' for backend '${n}' is already registered`),tt.set(r,e)}function ot(e,t){return`${t}_${e}`}var lt=n(8570);const ut=n.n(lt)()||lt;function dt(e){return ut.fromString(e,!0,16)}function ct(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=o(e)),C().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function pt(){return C().platform.now()}function ht(e,t="utf-8"){return t=t||"utf-8",C().platform.encode(e,t)}function ft(e,t="utf-8"){return t=t||"utf-8",C().platform.decode(e,t)}dt("c3a5c85c97cb3127"),dt("b492b66fbe98f273"),dt("9ae16a3b2f90404f");class mt{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new yt)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=pt();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:pt()-i})}if(C().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{gt(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function gt(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class yt{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?d(`${r}ms`,9):r.error,o=d(e,25),l=t.rank,u=t.size,c=d(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function At(e,t,n,r){const a=A(t),s=function(e,t,n,r){const a=l(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?vt(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],bt(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=wt(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function bt(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:m(e)?`'${e}'`:"bool"===n?xt(e):parseFloat(e.toFixed(7)).toString(),d(r,t)}function xt(e){return 0===e?"false":"true"}function wt(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[bt(vt(e)[0],0,n)]:"bool"===n?[xt(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=vt(r),s=vt(s)),["["+r.map(((e,t)=>bt(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>bt(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?vt(e):Array.from(e)).map(((e,t)=>bt(e,a[t],n))).join(", ")+"]"]}const u=t.slice(1),d=r.slice(1),c=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*c,s=r+c;p.push(...wt(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*c,s=r+c;p.push(...wt(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*c,s=r+c;p.push(...wt(e.slice(r,s),u,n,d,a,t===o-1))}const h=2===l?",":"";p[0]="["+p[0]+h;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+h;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function vt(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class kt{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=l(e),null!=n){const e=n.length;a(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||p(t,this.size),this.strides=A(e)}set(e,...t){0===t.length&&(t=[0]),a(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return It().makeTensor(this.values,this.shape,this.dtype)}}let It=null,St=null,Nt=null;class Tt{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=l(e),this.strides=A(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return St.buffer(this.shape,this.dtype,e)}bufferSync(){return St.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return x(this.shape,e,"complex64"===this.dtype)}arraySync(){return x(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=It().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>ft(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),It().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=It().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ft(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await It().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(It().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return St.print(this,e)}clone(){return this.throwIfDisposed(),St.clone(this)}toString(e=!1){return At(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),St.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),It().makeVariable(this,e,t,n)}}Object.defineProperty(Tt,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),M("Tensor",(()=>Tt));class Ct extends Tt{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!u(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);It().disposeTensor(this),this.dataId=e.dataId,It().incRef(this,null)}dispose(){It().disposeVariable(this),this.isDisposedInternal=!0}}var Et,_t,Rt,Mt,$t;Object.defineProperty(Ct,Symbol.hasInstance,{value:e=>e instanceof Tt&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Et||(Et={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(_t||(_t={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Rt||(Rt={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Mt||(Mt={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}($t||($t={}));const Ft={float32:Mt,int32:_t,bool:Rt,complex64:$t};function Ot(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Ft[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function zt(e){const t=[];return Dt(e,t,new Set),t}function Dt(e,t,n){if(null==e)return;if(e instanceof Tt)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Dt(r,t,n))}}function Pt(e){return null!=e.kernelName}class Lt{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Wt{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Lt}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(et(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new mt(this.backendInstance),!0}setupRegisteredKernels(){st(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){st(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const n=this.registryFactory[e];if(null==n)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(!r||r instanceof t||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,n=r.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,et(`Initialization of backend ${e} failed`),et(n.stack||n.message)),!1)));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return et(`Initialization of backend ${e} failed`),et(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Wt.nextTensorId++}nextVariableId(){return Wt.nextVariableId++}clone(e){const t=Ut.runKernel(ne,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Ut.runKernel(P,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==rt(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let o,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Pt(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Pt(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const u=rt(t,this.backendName);a(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const o=a.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:c}=e,p=Pt(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=o()})),r&&this.addTapeNode(u,d,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=at(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(a(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return i.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&m(e[0])&&(a=e.map((e=>ht(e))));const s=r.write(a,t,n),i=new Tt(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Tt(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Ct(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*f(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ct||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*f(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=at(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=v(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=zt(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(a(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));a(s instanceof Tt,(()=>"The result y returned by f() must be a tensor."));const i=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=w(l(e),"float32");return Ut.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!u(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,i,(e=>this.tidy(e)),Vt);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return a(y(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;a(t.every((e=>e instanceof Tt)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),a(n.value instanceof Tt,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),a(y(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];a(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),a(i.every((e=>e instanceof Tt)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return i.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=pt(),n=await this.backend.time(e);return n.wallMs=pt()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Lt;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Bt(){const e=R();if(null==e._tfengine){const t=new N(e);e._tfengine=new Wt(t)}var t;return t=e._tfengine.ENV,_=t,It=()=>e._tfengine,e._tfengine}Wt.nextTensorId=0,Wt.nextVariableId=0;const Ut=Bt();function Vt(e,t){const n={a:e,b:t};return Ut.runKernel($,n)}const Gt=C();Gt.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Gt.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),Gt.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Gt.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Gt.registerFlag("PROD",(()=>!1)),Gt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Gt.getBool("DEBUG"))),Gt.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Gt.registerFlag("IS_TEST",(()=>!1)),Gt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Gt.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const jt="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ht(e){return jt?Buffer.byteLength(e):new Blob([e]).size}function qt(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Kt(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Xt(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ht(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ht(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Zt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Zt.instance&&(Zt.instance=new Zt),Zt.instance}static registerSaveRouter(e){Zt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Zt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Zt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Zt.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Zt.getInstance().loadRouters:Zt.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Yt="tensorflowjs",Jt="models_store",Qt="model_info_store";function en(){if(!C().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function tn(e){const t=e.result;t.createObjectStore(Jt,{keyPath:"modelPath"}),t.createObjectStore(Qt,{keyPath:"modelPath"})}class nn{constructor(e){if(this.indexedDB=en(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Yt,1);r.onupgradeneeded=()=>tn(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Jt,"readonly"),r=t.objectStore(Jt).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Xt(t),s=a.transaction(Qt,"readwrite");let i=s.objectStore(Qt);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=a.transaction(Jt,"readwrite");const o=l.objectStore(Jt).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(Qt);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}nn.URL_SCHEME="indexeddb://";const rn=e=>{return C().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(nn.URL_SCHEME)?(t=e.slice(nn.URL_SCHEME.length),new nn(t)):null;var t};Zt.registerSaveRouter(rn),Zt.registerLoadRouter(rn);class an{constructor(){this.indexedDB=en()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Yt,1);n.onupgradeneeded=()=>tn(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Qt,"readonly"),s=a.objectStore(Qt).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(nn.URL_SCHEME)?t.slice(nn.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Yt,1);r.onupgradeneeded=()=>tn(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Qt,"readwrite"),i=s.objectStore(Qt),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(Jt,"readwrite");const r=l.objectStore(Jt).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const sn="/",on="tensorflowjs_models",ln="info",un="model_topology",dn="weight_specs",cn="weight_data",pn="model_metadata";function hn(e){return{info:[on,e,ln].join(sn),topology:[on,e,un].join(sn),weightSpecs:[on,e,dn].join(sn),weightData:[on,e,cn].join(sn),modelMetadata:[on,e,pn].join(sn)}}function fn(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function mn(e){const t=e.split(sn);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(sn)}class gn{constructor(e){if(!C().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=hn(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Xt(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(jt)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw fn(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(jt){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}gn.URL_SCHEME="localstorage://";const yn=e=>{return C().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(gn.URL_SCHEME)?(t=e.slice(gn.URL_SCHEME.length),new gn(t)):null;var t};Zt.registerSaveRouter(yn),Zt.registerLoadRouter(yn);class An{constructor(){a(C().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),a("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=on+sn,n=sn+ln;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[mn(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=hn(e=(t=e).startsWith(gn.URL_SCHEME)?t.slice(gn.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return fn(n),r}}class bn{constructor(){this.managers={}}static getInstance(){return null==bn.instance&&(bn.instance=new bn),bn.instance}static registerManager(e,t){a(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),a(e.length>0,(()=>"scheme must not be an empty string."));const n=bn.getInstance();a(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class xn{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(C().get("IS_BROWSER")){C().setPlatform("browser",new xn);try{bn.registerManager(gn.URL_SCHEME,new An)}catch(e){}try{bn.registerManager(nn.URL_SCHEME,new an)}catch(e){}}let wn;function vn(e,t="float32",n){return t=t||"float32",k(e),new kt(e,t,n)}function kn(e,t){let n=e;if(h(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||h(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&C().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&In(e,r,[]),r}function In(e,t,n){if(n=n||[],!Array.isArray(e)&&!h(e))return void a(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));a(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),a(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)In(e[t],r,n.concat(t))}function Sn(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Nn(e,t,n,r="numeric"){if(e instanceof Tt)return Sn(r,e.dtype,t,n),e;let a=g(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Sn(r,a,t,n),null==e||!h(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=kn(e,a);h(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?ct(e,a):o(e,[],!0);return Ut.makeTensor(i,s,a)}function Tn(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Nn(e,`${t}[${a}]`,n,r)))}function Cn(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{Ut.startScope(n);try{const t=r(...e);return I(t)&&console.error("Cannot return a Promise inside of tidy."),Ut.endScope(t),t}catch(e){throw Ut.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}C().get("IS_NODE")&&C().setPlatform("node",new class{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=C().global.fetch?C().global.fetch(e,t):(null==wn&&(wn=n(5817)),wn(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const En=Cn({cast_:function(e,t){const n=Nn(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Ut.runKernel(P,r,a)}}),_n=Cn({clone_:function(e){const t={x:Nn(e,"x","clone","string_or_numeric")};return Ut.runKernel(ne,t)}});function Rn(e){return new Promise((e=>setTimeout(e))).then(e)}Bt(),St={buffer:vn,cast:En,clone:_n,print:function(e,t=!1){console.log(e.toString(t))}};class Mn{constructor(e){if(!C().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Mn.URL_SCHEME)&&(e=e.slice(Mn.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Kt(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Rn((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Rn((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Xt(e)}}}}function $n(e,t,n,r){!function(e){a(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){a(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),a(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),a(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Fn(e,t){null==t&&(t={});const n=null==t.fetchFunc?C().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await $n(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await $n(a,t.onProgress,.5,1)}Mn.URL_SCHEME="downloads://",Zt.registerSaveRouter((e=>C().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mn.URL_SCHEME)?function(e="model"){return new Mn(e)}(e.slice(Mn.URL_SCHEME.length)):null));class On{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(a("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=C().platform.fetch,a(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&a(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Kt(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Xt(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,qt(await Fn(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function zn(e){return null!=e.match(On.URL_SCHEME_REGEX)}On.URL_SCHEME_REGEX=/^https?:\/\//;const Dn=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>zn(e))):zn(e),n)return function(e,t){return new On(e,t)}(e,t)}return null};function Pn(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Ln(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Wn(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Bn(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}Zt.registerSaveRouter(Dn),Zt.registerLoadRouter(Dn);const Un=Cn({complex_:function(e,t){const n=Nn(e,"real","complex"),r=Nn(t,"imag","complex");s(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Ut.runKernel("Complex",a)}}),Vn=Cn({concat_:function(e,t=0){a(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Tn(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return _n(n[0]);const r=n,s={axis:t};return Ut.runKernel(W,r,s)}}),Gn=Cn({imag_:function(e){const t={input:Nn(e,"input","imag")};return Ut.runKernel("Imag",t)}}),jn=Cn({real_:function(e){const t={input:Nn(e,"input","real")};return Ut.runKernel("Real",t)}}),Hn=Cn({reshape_:function(e,t){const n={x:Nn(e,"x","reshape","string_or_numeric")},r={shape:t};return Ut.runKernel(Ie,n,r)}}),qn=Cn({slice_:function(e,t,n){const r=Nn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Ut.runKernel(Re,a,s)}}),Kn=Cn({split_:function(e,t,n=0){const r={x:Nn(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Ut.runKernel(Oe,r,a)}});function Xn(e,t="float32"){if("complex64"===t){const t=Xn(e,"float32"),n=Xn(e,"float32");return Un(t,n)}const n=v(l(e),t);return Ut.makeTensor(n,e,t)}const Zn=Cn({zerosLike_:function(e){const t={x:Nn(e,"x","zerosLike")};return Ut.runKernel(Ke,t)}}),Yn=Cn({fft_:function(e){a("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ut.runKernel("FFT",t)}}),Jn=Cn({rfft_:function(e,t){a("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=qn(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Vn([e,Xn(r)],e.shape.length-1),n=t}else s=e;const i=Zn(s),o=Hn(Un(s,i),[r,n]),l=Yn(o),u=Math.floor(n/2)+1,d=jn(l),c=Gn(l),p=Kn(d,[u,n-u],d.shape.length-1),h=Kn(c,[u,n-u],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,Hn(Un(p[0],h[0]),f)}}),Qn=Cn({ifft_:function(e){a("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ut.runKernel("IFFT",t)}}),er=Cn({mul_:function(e,t){let n=Nn(e,"a","mul"),r=Nn(t,"b","mul");[n,r]=Ot(n,r);const a={a:n,b:r};return Ut.runKernel(pe,a)}}),tr=Cn({reverse_:function(e,t){const n={x:Nn(e,"x","reverse")},r={dims:t};return Ut.runKernel(Te,n,r)}});function nr(e,t,n,r){if(null==r&&(r=g(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!h(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){k(t);const e=l(t),r=l(n);a(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==l(t.slice(e));a(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return h(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ct(e,r):o(e,[],!0),Ut.makeTensor(e,t,r)}function rr(e,t){if((h(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&h(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return nr(e,[],[],t)}function ar(e,t){i(e);const n=kn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return nr(e,null,n,t)}function sr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ar(a,"float32")}Cn({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Hn(e,[n,t]);r=Qn(a)}else{const a=[n,2*(t-1)],s=Hn(jn(e),[n,t]),i=Hn(Gn(e),[n,t]),o=tr(qn(s,[0,1],[n,t-2]),1),l=er(tr(qn(i,[0,1],[n,t-2]),1),rr(-1)),u=Vn([s,o],1),d=Vn([i,l],1),c=Hn(Un(u,d),[a[0],a[1]]);r=Qn(c)}if(r=jn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Hn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Cn({hammingWindow_:function(e){return sr(e,.54,.46)}});const ir=Cn({hannWindow_:function(e){return sr(e,.5,.5)}});function or(e,t,n){const r={shape:e,value:t,dtype:n};return Ut.runKernel(X,{},r)}function lr(e,t,n){if(i(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=kn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return nr(e,t,r,n)}const ur=Cn({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(qn(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Vn([qn(e,s,t-r),or([r],a)]);i.push(o),s+=n}return 0===i.length?lr([],[0,t]):Hn(Vn(i),[i.length,t])}});Cn({stft_:function(e,t,n,r,a=ir){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=ur(e,t,n),o=er(i,a(t));return Jn(o,r)}}),Cn({cropAndResize_:function(e,t,n,r,s="bilinear",i=0){const o=Nn(e,"image","cropAndResize"),l=Nn(t,"boxes","cropAndResize","float32"),u=Nn(n,"boxInd","cropAndResize","int32"),d=l.shape[0];a(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),a(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${l.shape}.`)),a(1===u.rank&&u.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${l.shape}.`)),a(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),a(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),a("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:o,boxes:l,boxInd:u},p={method:s,extrapolationValue:i,cropSize:r};return Ut.runKernel(G,c,p)}}),Cn({flipLeftRight_:function(e){const t=Nn(e,"image","flipLeftRight","float32");a(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ut.runKernel(Z,n,{})}});const dr=Cn({tile_:function(e,t){const n=Nn(e,"x","tile","string_or_numeric");a(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Ut.runKernel(Ve,r,s)}});function cr(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const o=e.shape[0];return n=Math.min(n,o),a(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),a(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),a(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),a(1===t.rank,(()=>"scores must be a 1D tensor")),a(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),a(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}Cn({grayscaleToRGB_:function(e){const t=Nn(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];a(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),a(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,dr(t,s)}}),Cn({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Nn(e,"image","rotateWithOffset","float32");a(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},o={radians:t,fillValue:n,center:r};return Ut.runKernel(Ze,i,o)}}),Cn({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Nn(e,"boxes","nonMaxSuppression","float32"),i=Nn(t,"scores","nonMaxSuppression","float32"),o=cr(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Ut.runKernel(fe,{boxes:s,scores:i},l)}}),Cn({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Nn(e,"boxes","nonMaxSuppression"),o=Nn(t,"scores","nonMaxSuppression"),l=cr(i,o,n,r,a,s),u={boxes:i,scores:o},d={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},c=Ut.runKernel(ge,u,d);return{selectedIndices:c[0],selectedScores:c[1]}}}),Cn({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Nn(e,"boxes","nonMaxSuppression"),o=Nn(t,"scores","nonMaxSuppression"),l=cr(i,o,n,r,a,null),u={boxes:i,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},c=Ut.runKernel(me,u,d);return{selectedIndices:c[0],validOutputs:c[1]}}}),Cn({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Nn(e,"images","resizeBilinear");a(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),a(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),a(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,o=!1;3===s.rank&&(o=!0,i=Hn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,l={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},d=Ut.runKernel(Se,l,u);return o?Hn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Cn({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Nn(e,"images","resizeNearestNeighbor");a(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),a(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),a("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),a(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,o=!1;3===s.rank&&(o=!0,i=Hn(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,l={images:i},u={alignCorners:n,halfPixelCenters:r,size:t},d=Ut.runKernel("ResizeNearestNeighbor",l,u);return o?Hn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const pr=Cn({bincount_:function(e,t,n){const r=Nn(e,"x","bincount"),s=Nn(t,"weights","bincount");a("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),a(n>=0,(()=>`size must be non-negative, but got ${n}.`)),a(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n};return Ut.runKernel("Bincount",i,o)}}),hr=Cn({lessEqual_:function(e,t){let n=Nn(e,"a","lessEqual","string_or_numeric"),r=Nn(t,"b","lessEqual","string_or_numeric");[n,r]=Ot(n,r),Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(ae,a)}}),fr=Cn({greater_:function(e,t){let n=Nn(e,"a","greater","string_or_numeric"),r=Nn(t,"b","greater","string_or_numeric");[n,r]=Ot(n,r),Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(ee,a)}}),mr=Cn({sum_:function(e,t=null,n=!1){let r=Nn(e,"x","sum");"bool"===r.dtype&&(r=En(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Ut.runKernel(Fe,a,s)}}),gr=Cn({add_:function(e,t){let n=Nn(e,"a","add"),r=Nn(t,"b","add");[n,r]=Ot(n,r);const a={a:n,b:r};return Ut.runKernel($,a)}}),yr=Cn({floorDiv_:function(e,t){let n=Nn(e,"a","floorDiv"),r=Nn(t,"b","floorDiv");[n,r]=Ot(n,r);const a={a:n,b:r};return Ut.runKernel(Y,a)}}),Ar=Cn({div_:function(e,t){let n=Nn(e,"a","div"),r=Nn(t,"b","div");if([n,r]=Ot(n,r),"int32"===n.dtype&&"int32"===r.dtype)return yr(n,r);const a={a:n,b:r};return Ut.runKernel(q,a,{})}}),br=Cn({sub_:function(e,t){let n=Nn(e,"a","sub"),r=Nn(t,"b","sub");[n,r]=Ot(n,r);const a={a:n,b:r};return Ut.runKernel("Sub",a)}}),xr=Cn({round_:function(e){const t={x:Nn(e,"x","round")};return Ut.runKernel(Ce,t)}}),wr=Cn({broadcastTo_:function(e,t){let n=Nn(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Hn(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return _n(n);const i={x:n},o={reps:s};return Ut.runKernel(Ve,i,o)}}),vr=Cn({where_:function(e,t,n){const r=Nn(t,"a","where"),a=Nn(n,"b","where"),s=Nn(e,"condition","where","bool"),i=Pn(Pn(s.shape,r.shape),a.shape),o={condition:wr(s,i),t:wr(r,i),e:wr(a,i)};return Ut.runKernel(_e,o)}});function kr(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Ut.runKernel(ve,{},a)}Cn({threshold_:function(e,t="binary",n=!1,r=.5){const s=Nn(e,"image","threshold"),i=s.shape[0]*s.shape[1];let o,l,u,d,c=er(ar([r]),255);if(a(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),a(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),a("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),a("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,l,u]=Kn(s,[1,1,1],-1);const e=er(o,.2989),t=er(l,.587),n=er(u,.114);d=gr(gr(e,t),n)}else d=e;var p,h;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,l=ar([-1]),u=ar([0]),d=ar([0]);for(let c=0;c<e.size-1;c++){n=qn(e,0,c+1),r=qn(e,c+1),i=Ar(mr(n),t),o=Ar(mr(r),t);const p=mr(er(n,kr(0,n.size)));a=Ar(p,mr(n));const h=or(r.shape,n.size),f=gr(kr(0,r.size),h),m=er(r,f);s=Ar(mr(m),mr(r));const g=br(a,s),y=br(a,s),A=er(i,o);d=er(er(A,g),y);const b=fr(d,u);u=vr(b,d,u),l=vr(b,ar([c]),l)}return l}(pr(En(xr(d),"int32"),nr(p=[],undefined,kn(p,h),h),256),i));const f=n?hr(d,c):fr(d,c);return En(er(f,255),"int32")}}),Cn({transform_:function(e,t,n="nearest",r="constant",s=0,i){const o=Nn(e,"image","transform","float32"),l=Nn(t,"transforms","transform","float32");a(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),a(2===l.rank&&(l.shape[0]===o.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),a(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const u={image:o,transforms:l},d={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Ut.runKernel(je,u,d)}});const Ir=Cn({greaterEqual_:function(e,t){let n=Nn(e,"a","greaterEqual","string_or_numeric"),r=Nn(t,"b","greaterEqual","string_or_numeric");[n,r]=Ot(n,r),Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(te,a)}}),Sr=Cn({logicalAnd_:function(e,t){const n=Nn(e,"a","logicalAnd","bool"),r=Nn(t,"b","logicalAnd","bool");Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(se,a)}}),Nr=Cn({stack_:function(e,t=0){const n=Tn(e,"tensors","stack","string_or_numeric");a(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&a(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Ut.runKernel(Ae,r,s)}}),Tr=Cn({unstack_:function(e,t=0){const n=Nn(e,"x","unstack","string_or_numeric");a(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Ut.runKernel(qe,r,s)}});Cn({bandPart_:function(e,t,n){a(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),a(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Nn(e,"a","bandPart");a(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,o]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=i),n<0&&(n=o);const l=Hn(kr(0,i,1,"int32"),[-1,1]),u=kr(0,o,1,"int32"),d=br(l,u),c=Sr(hr(d,rr(+t,"int32")),Ir(d,rr(-n,"int32"))),p=Xn([i,o],r.dtype);return Hn(Nr(Tr(Hn(r,[-1,i,o])).map((e=>vr(c,e,p)))),s)}});const Cr=Cn({abs_:function(e){const t=Nn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ut.runKernel("ComplexAbs",e)}{const e={x:t};return Ut.runKernel("Abs",e)}}});function Er(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function _r(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Rr(e,t){return function(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}(e,t.map((e=>1)),t)}function Mr(e,t,n){a(Er(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function $r(e,t){if(Er(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Fr(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Or=Cn({max_:function(e,t=null,n=!1){const r={x:Nn(e,"x","max")},a={reductionIndices:t,keepDims:n};return Ut.runKernel(ie,r,a)}}),zr=Cn({min_:function(e,t=null,n=!1){const r={x:Nn(e,"x","min")},a={axis:t,keepDims:n};return Ut.runKernel(ue,r,a)}}),Dr=Cn({pow_:function(e,t){let n=Nn(e,"base","pow"),r=Nn(t,"exp","pow");[n,r]=Ot(n,r);const a={a:n,b:r};return Ut.runKernel("Pow",a)}}),Pr=Cn({sqrt_:function(e){const t={x:Nn(e,"x","sqrt","float32")};return Ut.runKernel($e,t)}}),Lr=Cn({square_:function(e){const t=Nn(e,"x","square");return Ut.runKernel("Square",{x:t},{})}});function Wr(e,t,n=null){if(0===e.rank)return Cr(e);if(1!==e.rank&&null===n)return Wr(Hn(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return mr(Cr(e),n);if(t===1/0)return Or(Cr(e),n);if(t===-1/0)return zr(Cr(e),n);if("euclidean"===t||2===t)return Pr(mr(Dr(Cr(e),rr(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Or(mr(Cr(e),n[0]),n[1]-1);if(t===1/0)return Or(mr(Cr(e),n[1]),n[0]);if(t===-1/0)return zr(mr(Cr(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Pr(mr(Lr(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Br=Cn({norm_:function(e,t="euclidean",n=null,r=!1){const a=Wr(e=Nn(e,"x","norm"),t,n);let s=a.shape;if(r){const t=c(n,e.shape);s=Rr(a.shape,t)}return Hn(a,s)}}),Ur=Cn({squeeze_:function(e,t){const n=Nn(e,"x","squeeze");return Hn(n,function(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:c(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});Cn({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,a(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)a(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Kn(e,e.shape[0],0).map((e=>Ur(e,[0])));a(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ut.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=er(mr(er(n[r],e)),n[r]);e=br(e,t)}return Ar(e,Br(e,"euclidean"))})));return t?Nr(n,0):n}}),Nt=function(e){C().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Vr=Cn({expandDims_:function(e,t=0){const n=Nn(e,"x","expandDims","string_or_numeric");a(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Ut.runKernel(K,r,s)}}),Gr=Cn({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=vn([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Hn(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return dr(Vr(i,0),[n[0],1,1]);if(2===n.length)return dr(Vr(Vr(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return dr(Vr(Vr(Vr(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),jr=Cn({matMul_:function(e,t,n=!1,r=!1){let a=Nn(e,"a","matMul"),s=Nn(t,"b","matMul");[a,s]=Ot(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Ut.runKernel(D,i,o)}}),Hr=Cn({neg_:function(e){const t={x:Nn(e,"x","neg")};return Ut.runKernel("Neg",t)}}),qr=Cn({transpose_:function(e,t){const n=Nn(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),a(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{a(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Ut.runKernel(He,r,s)}});function Kr(e,t=!1){return Ut.tidy((()=>{a(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Gr(n),i=_n(e);const o=lr([[1]],[1,1]);let l=_n(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=i,a=l,u=s;[l,i,s]=Ut.tidy((()=>{const t=qn(i,[e,e],[n-e,1]),a=Br(t),u=qn(i,[e,e],[1,1]),d=vr(fr(u,0),lr([[-1]]),lr([[1]])),c=br(u,er(d,a)),p=Ar(t,c);l=1===p.shape[0]?_n(o):Vn([o,qn(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=Hr(Ar(jr(d,c),a)),f=qn(i,[e,0],[n-e,r]),m=er(h,l),g=qr(l);if(0===e)i=br(f,jr(m,jr(g,f)));else{const t=br(f,jr(m,jr(g,f)));i=Vn([qn(i,[0,0],[e,r]),t],0)}const y=qr(m),A=qn(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=br(A,jr(jr(A,l),y));else{const t=br(A,jr(jr(A,l),y));s=Vn([qn(s,[0,0],[n,e]),t],1)}return[l,i,s]})),zt([t,a,u]).forEach((e=>e.dispose()))}return!t&&n>r&&(s=qn(s,[0,0],[n,r]),i=qn(i,[0,0],[r,r])),[s,i]}))}var Xr;Cn({qr_:function(e,t=!1){if(a(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Tr(Hn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Kr(e,t);a.push(n),s.push(r)})),[Hn(Nr(a,0),e.shape),Hn(Nr(s,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Xr||(Xr={}));const Zr=Cn({mean_:function(e,t=null,n=!1){const r={x:Nn(e,"x","mean")},a={axis:t,keepDims:n};return Ut.runKernel(le,r,a)}}),Yr=Cn({notEqual_:function(e,t){let n=Nn(e,"a","notEqual","string_or_numeric"),r=Nn(t,"b","notEqual","string_or_numeric");[n,r]=Ot(n,r),Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(he,a)}});function Jr(e,t="float32"){if("complex64"===t){const t=Jr(e,"float32"),n=Xn(e,"float32");return Un(t,n)}const n=w(l(e),t);return Ut.makeTensor(n,e,t)}const Qr=Cn({computeWeightedLoss_:function(e,t,n=Xr.SUM_BY_NONZERO_WEIGHTS){const r=Nn(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Nn(t,"weights","computeWeightedLoss"));const s=null==a?r:er(r,a);if(n===Xr.NONE)return s;if(n===Xr.SUM)return mr(s);if(n===Xr.MEAN){if(null==a)return Zr(s);{const e=r.size/a.size,t=Ar(mr(s),mr(a));return e>1?Ar(t,rr(e)):t}}if(n===Xr.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Ar(mr(s),rr(r.size));{const e=er(a,Jr(r.shape)),t=En(mr(Yr(e,rr(0))),"float32");return Ar(mr(s),t)}}throw Error(`Unknown reduction: ${n}`)}});Cn({absoluteDifference_:function(e,t,n,r=Xr.SUM_BY_NONZERO_WEIGHTS){const a=Nn(e,"labels","absoluteDifference"),i=Nn(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Nn(n,"weights","absoluteDifference")),s(a.shape,i.shape,"Error in absoluteDifference: ");const l=Cr(br(a,i));return Qr(l,o,r)}}),Cn({cosineDistance_:function(e,t,n,r,a=Xr.SUM_BY_NONZERO_WEIGHTS){const i=Nn(e,"labels","cosineDistance"),o=Nn(t,"predictions","cosineDistance");let l=null;null!=r&&(l=Nn(r,"weights","cosineDistance")),s(i.shape,o.shape,"Error in cosineDistance: ");const u=rr(1),d=br(u,mr(er(i,o),n,!0));return Qr(d,l,a)}});const ea=Cn({relu_:function(e){const t={x:Nn(e,"x","relu")};return Ut.runKernel(ke,t)}});Cn({hingeLoss_:function(e,t,n,r=Xr.SUM_BY_NONZERO_WEIGHTS){let a=Nn(e,"labels","hingeLoss");const i=Nn(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Nn(n,"weights","hingeLoss")),s(a.shape,i.shape,"Error in hingeLoss: ");const l=rr(1);a=br(er(rr(2),a),l);const u=ea(br(l,er(a,i)));return Qr(u,o,r)}});const ta=Cn({minimum_:function(e,t){let n=Nn(e,"a","minimum"),r=Nn(t,"b","minimum");[n,r]=Ot(n,r),"bool"===n.dtype&&(n=En(n,"int32"),r=En(r,"int32")),Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(de,a)}});Cn({huberLoss_:function(e,t,n,r=1,a=Xr.SUM_BY_NONZERO_WEIGHTS){const i=Nn(e,"labels","huberLoss"),o=Nn(t,"predictions","huberLoss");let l=null;null!=n&&(l=Nn(n,"weights","huberLoss")),s(i.shape,o.shape,"Error in huberLoss: ");const u=rr(r),d=Cr(br(o,i)),c=ta(d,u),p=br(d,c),h=gr(er(rr(.5),Lr(c)),er(u,p));return Qr(h,l,a)}});const na=Cn({log_:function(e){const t={x:Nn(e,"x","log","float32")};return Ut.runKernel("Log",t)}});Cn({logLoss_:function(e,t,n,r=1e-7,a=Xr.SUM_BY_NONZERO_WEIGHTS){const i=Nn(e,"labels","logLoss"),o=Nn(t,"predictions","logLoss");let l=null;null!=n&&(l=Nn(n,"weights","logLoss")),s(i.shape,o.shape,"Error in logLoss: ");const u=rr(1),d=rr(r),c=Hr(er(i,na(gr(o,d)))),p=er(br(u,i),na(gr(br(u,o),d))),h=br(c,p);return Qr(h,l,a)}});const ra=Cn({squaredDifference_:function(e,t){let n=Nn(e,"a","squaredDifference"),r=Nn(t,"b","squaredDifference");[n,r]=Ot(n,r),Pn(n.shape,r.shape);const a={a:n,b:r};return Ut.runKernel(Be,a,{})}});Cn({meanSquaredError_:function(e,t,n,r=Xr.SUM_BY_NONZERO_WEIGHTS){const a=Nn(e,"labels","meanSquaredError"),i=Nn(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Nn(n,"weights","meanSquaredError")),s(a.shape,i.shape,"Error in meanSquaredError: ");const l=ra(a,i);return Qr(l,o,r)}});const aa=Cn({exp_:function(e){const t={x:Nn(e,"x","exp")};return Ut.runKernel("Exp",t)}}),sa=Cn({log1p_:function(e){const t={x:Nn(e,"x","log1p")};return Ut.runKernel("Log1p",t)}});Cn({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Xr.SUM_BY_NONZERO_WEIGHTS){let i=Nn(e,"multiClassLabels","sigmoidCrossEntropy");const o=Nn(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=Nn(n,"weights","sigmoidCrossEntropy")),s(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=rr(r),t=rr(1),n=rr(.5);i=gr(er(i,br(t,e)),er(n,e))}const u=function(e,t){const n=Nn(e,"labels","sigmoidCrossEntropyWithLogits"),r=Nn(t,"logits","sigmoidCrossEntropyWithLogits");s(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=ea(r),i=er(r,n),o=sa(aa(Hr(Cr(r))));return gr(br(a,i),o)}(i,o);return Qr(u,l,a)}});const ia=Cn({logSumExp_:function(e,t=null,n=!1){const r=Nn(e,"x","logSumExp"),a=c(t,r.shape),s=Or(r,a,!0),i=br(r,s),o=aa(i),l=mr(o,a),u=na(l),d=gr(Hn(s,u.shape),u);if(n){const e=Rr(d.shape,a);return Hn(d,e)}return d}});function oa(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function la(e,t,n,r,a,s,i="channelsLast"){const[o,l]=da(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ua(e,u,n,r,a,s,!1,i)}function ua(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,d,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,c]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,d]=e}const[p,h,,f]=t,[m,g]=da(n),[y,A]=da(r),b=ca(p,y),x=ca(h,A),{padInfo:w,outHeight:v,outWidth:k}=function(e,t,n,r,a,s,i,o,l){let u,d,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=function(e,t,n,r=1){const a=ca(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}(e,t,n));const s=e[1];return[pa((e[0]-t+2*r)/n+1,a),pa((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],c=a[1]}else if("same"===e){d=Math.ceil(t/r),c=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(c-1)*a+i-n),l=Math.floor(e/2),p=e-l,h=Math.floor(o/2);u={top:l,bottom:p,left:h,right:o-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),c=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},d=pa((t-s+p+h)/r+1,o),c=pa((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:c}}(a,u,d,m,g,b,x,s,o),I=i?f*c:f;let S;return"channelsFirst"===o?S=[l,I,v,k]:"channelsLast"===o&&(S=[l,v,k,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:c,outHeight:v,outWidth:k,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:A,inShape:e,outShape:S,filterShape:t}}function da(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ca(e,t){return t<=1?e:e+(e-1)*(t-1)}function pa(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ha(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function fa(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function ma(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function ga(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function ya(e){try{return e.map((e=>ft(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Aa(e){return e.map((e=>ht(e)))}var ba,xa;let wa;Cn({softmaxCrossEntropy_:function(e,t,n,r=0,a=Xr.SUM_BY_NONZERO_WEIGHTS){let i=Nn(e,"onehotLabels","softmaxCrossEntropy");const o=Nn(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=Nn(n,"weights","softmaxCrossEntropy")),s(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=rr(r),t=rr(1),n=rr(i.shape[1]);i=gr(er(i,br(t,e)),Ar(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(a=(e,t,r)=>{const a=ia(t,[n],!0),s=br(En(t,"float32"),a);r([e,s]);const i=Hr(er(s,e));return{value:mr(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Rr(e.shape,[n]);return[er(Hn(e,s),br(En(r,"float32"),aa(a))),er(Hn(e,s),br(aa(a),En(r,"float32")))]}}},Ut.customGrad(a));var a;return r(e,t)}(i,o);return Qr(u,l,a)}}),Cn({sparseFillEmptyRows_:function(e,t,n,r){const a=Nn(e,"indices","sparseFillEmptyRows","int32"),s=Nn(t,"values","sparseFillEmptyRows"),i=Nn(n,"denseShape","sparseFillEmptyRows","int32"),o=Nn(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:s,denseShape:i,defaultValue:o},u=Ut.runKernel(De,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),Cn({sparseReshape_:function(e,t,n){const r=Nn(e,"inputIndices","sparseReshape","int32"),a=Nn(t,"inputShape","sparseReshape","int32"),s=Nn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Ut.runKernel(Pe,i);return{outputIndices:o[0],outputShape:o[1]}}}),Cn({sparseSegmentMean_:function(e,t,n){const r=Nn(e,"data","sparseSegmentMean"),a=Nn(t,"indices","sparseSegmentMean","int32"),s=Nn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Ut.runKernel(Le,i)}}),Cn({sparseSegmentSum_:function(e,t,n){const r=Nn(e,"data","sparseSegmentSum"),a=Nn(t,"indices","sparseSegmentSum","int32"),s=Nn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Ut.runKernel(We,i)}}),Cn({stringNGrams_:function(e,t,n,r,a,s,i,o){const l=Nn(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Nn(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},c={data:l,dataSplits:u},p=Ut.runKernel("StringNGrams",c,d);return{nGrams:p[0],nGramsSplits:p[1]}}}),Cn({stringSplit_:function(e,t,n=!0){const r=Nn(e,"input","stringSplit","string"),a=Nn(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Ut.runKernel("StringSplit",i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Cn({stringToHashBucketFast_:function(e,t){const n=Nn(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Ut.runKernel("StringToHashBucketFast",a,r)}}),Cn({elu_:function(e){const t={x:Nn(e,"x","elu","float32")};return Ut.runKernel("Elu",t)}}),Cn({leakyRelu_:function(e,t=.2){const n={x:Nn(e,"x","leakyRelu")},r={alpha:t};return Ut.runKernel(re,n,r)}}),Cn({prelu_:function(e,t){const n={x:Nn(e,"x","prelu"),alpha:Nn(t,"alpha","prelu")};return Ut.runKernel(xe,n)}}),Cn({relu6_:function(e){const t={x:Nn(e,"x","relu6")};return Ut.runKernel(Ne,t)}}),Cn({sigmoid_:function(e){const t={x:Nn(e,"x","sigmoid","float32")};return Ut.runKernel(Me,t)}}),Cn({step_:function(e,t=0){const n={x:Nn(e,"x","step")},r={alpha:t};return Ut.runKernel(Xe,n,r)}}),function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(ba||(ba={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(xa||(xa={}));const va={kernelName:Ye,backendName:"wasm",setupFunc:function(e){wa=e.wasm.cwrap(Ye,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=r,p=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=xa[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);const y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],b=Pn(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...b,y,A],a.dtype),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return wa(p,v,a.shape.length,h,k,s.shape.length,l,u,g,f,m,c||0,w),x}};function ka(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===l(i.shape)||n(s,ba[a.dtype],o),i}}}const Ia=ka("Abs");function Sa(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,u=t.dataIdMap.get(i.dataId).id,d=null!=n?n:s.dtype,c=Pn(s.shape,i.shape),p=t.makeOutput(c,d);if(0===l(c))return p;const h=new Uint8Array(new Int32Array(s.shape).buffer),f=new Uint8Array(new Int32Array(i.shape).buffer),m=t.dataIdMap.get(p.dataId).id;return r(o,h,s.shape.length,u,f,i.shape.length,ba[s.dtype],m),p}}}const Na=Sa($);let Ta;const Ca={kernelName:F,backendName:"wasm",setupFunc:function(e){Ta=e.wasm.cwrap(F,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===l(r.shape))return r;const a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return Ta(s,a.length,ba[r.dtype],i),r}};function Ea(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const _a={kernelName:ne,backendName:"wasm",kernelFunc:Ea};let Ra;function Ma(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=Ea({inputs:t,backend:n});return e.shape=o,e}const u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,c=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return Ra(d,h,l.shape.length,ba[l.dtype],c,p,s.length),u}const $a={kernelName:He,backendName:"wasm",kernelFunc:Ma,setupFunc:function(e){Ra=e.wasm.cwrap(He,null,["number","array","number","number","number","array","number"])}};function Fa(e,t,n){const r=e.shape,a=e.shape.length,s=c(t,r);let i=s;const o=$r(i,a);let l=null,u=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Fr(i.length,a),l=Ma({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}let Oa;const za={kernelName:"All",backendName:"wasm",setupFunc:function(e){Oa=e.wasm.cwrap("All",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=Fa(i,a,t);h&&(u=d,o=t.dataIdMap.get(d.dataId).id),Mr("all",c,u.shape.length);const[f,m]=_r(u.shape,c),g=l(m),y=t.makeOutput(f,i.dtype);if(0!==l(u.shape)){const e=t.dataIdMap.get(y.dataId).id;Oa(o,g,e)}if(h&&t.disposeData(d.dataId),s){const e=Rr(y.shape,p);y.shape=e}return y}};let Da;const Pa={kernelName:"Any",backendName:"wasm",setupFunc:function(e){Da=e.wasm.cwrap("Any",null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=Fa(i,a,t);h&&(u=d,o=t.dataIdMap.get(d.dataId).id),Mr("any",c,u.shape.length);const[f,m]=_r(u.shape,c),g=l(m),y=t.makeOutput(f,i.dtype);if(0!==l(u.shape)){const e=t.dataIdMap.get(y.dataId).id;Da(o,g,e)}if(h&&t.disposeData(d.dataId),s){const e=Rr(y.shape,p);y.shape=e}return y}};let La;const Wa={kernelName:O,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:d,axes:c,inputWasTransposed:p}=Fa(s,a,t);if(p){const e=t.dataIdMap.get(d.dataId).id;e!==i&&(u=d,o=e)}const h=u.shape.slice(0,-1),f=t.makeOutput(h,"int32"),m=t.dataIdMap.get(f.dataId).id,g=l(f.shape),y=u.shape[c[0]];return La(o,ba[u.dtype],g,y,m),p&&t.disposeData(d.dataId),f},setupFunc:function(e){La=e.wasm.cwrap(O,null,["number","number","number","number","number"])}};let Ba;const Ua={kernelName:z,backendName:"wasm",setupFunc:function(e){Ba=e.wasm.cwrap(z,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=la(a.shape,i,o,1,l,u),c=d.filterHeight,p=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,b=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const x=r.makeOutput(d.outShape,"float32"),w=r.dataIdMap.get(x.dataId).id;return Ba(s,a.shape[0],a.shape[1],a.shape[2],c,p,h,f,m,g,y,A,b,w),x}};function Va(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:s}=n,i=l(r.shape),o=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(s,i);return a(i===l(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const Ga={kernelName:Ie,backendName:"wasm",kernelFunc:Va};let ja;const Ha={kernelName:D,backendName:"wasm",setupFunc:function(e){ja=e.wasm.cwrap(D,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:o,transposeB:u}=r;if("float32"!==s.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const d=s.shape.length,c=i.shape.length,p=o?s.shape[d-2]:s.shape[d-1],h=u?i.shape[c-1]:i.shape[c-2],f=o?s.shape[d-1]:s.shape[d-2],m=u?i.shape[c-2]:i.shape[c-1],g=s.shape.slice(0,-2),y=i.shape.slice(0,-2),A=l(g),b=l(y),x=Pn(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);a(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const w=u?[b,m,h]:[b,h,m],v=Va({inputs:{x:s},backend:n,attrs:{shape:o?[A,p,f]:[A,f,p]}}),k=Va({inputs:{x:i},backend:n,attrs:{shape:w}}),I=n.dataIdMap.get(v.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=o?v.shape[2]:v.shape[1],T=u?k.shape[1]:k.shape[2],C=Math.max(A,b),E=n.makeOutput([C,N,T],v.dtype),_=n.dataIdMap.get(E.dataId).id,R=new Uint8Array(new Int32Array(v.shape).buffer),M=new Uint8Array(new Int32Array(k.shape).buffer);return ja(I,R,v.shape.length,S,M,k.shape.length,o,u,_),n.disposeData(v.dataId),n.disposeData(k.dataId),E.shape=x,E}};function qa(e,t,n,r,a){const s=Ln(r,t,n),i=l(n),o=A(r);if(s){const n=Wn(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=vn(r,a,"string"===a?ya(e):e),d=vn(n,a);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(u.get(...r),...n)}return"string"===a?Aa(d.values):d.values}function Ka(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:s}=e,[i,o]=function(e,t,n){let r;const s=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(a(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}(t,n,r),u=Ln(t.shape,i,o),d=s.readSync(t.dataId),c=s.makeOutput(o,t.dtype),p=A(t.shape),h=s.dataIdMap.get(c.dataId);if(u){const e=Wn(i,p);return"string"===t.dtype?h.stringBytes=d.slice(e,e+l(o)):s.typedArrayFromHeap(c).set(d.subarray(e,e+l(o))),c}if("string"===t.dtype){const e=qa(d,i,o,t.shape,t.dtype);return h.stringBytes=e,c}const f=s.typedArrayFromHeap(c),m=t.shape.length;if(2===m)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(d,p[0],f,i,o);else if(3===m)!function(e,t,n,r,a,s){let i=0;const o=a[0],l=a[1],u=a[2],d=o+s[0],c=l+s[1];for(let a=o;a<d;a++)for(let o=l;o<c;o++){const l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(d,p[0],p[1],f,i,o);else if(4===m)!function(e,t,n,r,a,s,i){let o=0;const l=s[0],u=s[1],d=s[2],c=l+i[0],p=u+i[1],h=d+i[2],f=s[3];for(let s=l;s<c;s++)for(let l=u;l<p;l++)for(let u=d;u<h;u++){const d=s*t+l*n+u*r+f;a.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(d,p[0],p[1],p[2],f,i,o);else{const e=qa(d,i,o,t.shape,t.dtype);f.set(e)}return c}const Xa={kernelName:Re,backendName:"wasm",kernelFunc:Ka},Za={kernelName:"BatchToSpaceND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=fa(a.shape,s,o),u=ma(l.length,s.length),d=ga(a.shape,s,o),c=function(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}(i,s.length),p=function(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}(d,i,s.length),h=Va({inputs:{x:a},backend:n,attrs:{shape:l}}),f=Ma({inputs:{x:h},backend:n,attrs:{perm:u}}),m=Ka({inputs:{x:Va({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:c,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),m}};function Ya(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const Ja={kernelName:P,backendName:"wasm",kernelFunc:Ya},Qa=ka("Ceil");let es;const ts={kernelName:L,backendName:"wasm",setupFunc:function(e){es=e.wasm.cwrap(L,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return es(o,s,i,u),l}};function ns(e){const{inputs:t,backend:n}=e,r=c(e.attrs.axis,t[0].shape)[0];let s=oa(t.map((e=>e.shape)),r);const i=t.filter((e=>l(e.shape)>0));if(1===i.length)return Ea({inputs:{x:i[0]},backend:n});const o=n.makeOutput(s,t[0].dtype);if(0===l(s))return o;if(function(e,t){const n=e[0].length;e.forEach(((e,t)=>{a(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),a(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)a(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}(i.map((e=>e.shape)),r),"string"===i[0].dtype){const e=i.map((e=>{const t=l(e.shape.slice(r));return Va({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),a=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=oa(e.map((e=>e.shape)),1);const u=1===e[0].shape[0],d=function(e,t,n,r){const a=p(n,l(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=l(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?ya(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}(a,s,t[0].dtype,u),c=oa(i.map((e=>e.shape)),r);return o.shape=c,n.dataIdMap.get(o.dataId).stringBytes=Aa(d),e.forEach((e=>n.disposeData(e.dataId))),o}const u=l(i[0].shape.slice(0,r));let d=0;const h=i.map((e=>{const t=l(e.shape.slice(r));return d+=t,t})),f=i.map((e=>n.typedArrayFromHeap(e))),m=n.typedArrayFromHeap(o);for(let e=0;e<u;e++){let t=e*d;for(let n=0;n<f.length;n++){const r=h[n],a=e*r,s=f[n].subarray(a,a+r);m.set(s,t),t+=r}}return o}const rs={kernelName:W,backendName:"wasm",kernelFunc:ns};let as;const ss={kernelName:B,backendName:"wasm",setupFunc:function(e){as=e.wasm.cwrap(B,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:c,dataFormat:p}=n,h=ha(p),f=ua(a.shape,s.shape,l,u,d,c,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,b=f.padInfo.bottom,x=f.padInfo.left,w=f.dilationHeight,v=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return as(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,b,x,T,w,v,k,I,S,N,E),C}};let is;const os={kernelName:U,backendName:"wasm",setupFunc:function(e){is=e.wasm.cwrap(U,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,c=ha(l),p=ua(d,s.shape,i,1,o,u,!1,c),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=p,S=f-1-p.padInfo.top,N=m-1-p.padInfo.left,T="channelsLast"===p.dataFormat,C=A(p.inShape),E=A(a.shape),[_,R,M]=A(s.shape),$=C[0],F=T?C[1]:C[2],O=T?C[2]:1,z=T?1:C[1],D=E[0],P=T?E[1]:E[2],L=T?E[2]:1,W=T?1:E[1],B=t.makeOutput(p.inShape,"float32"),U=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,G=t.dataIdMap.get(s.dataId).id;return is(V,G,h,f,m,y,b,g,w,v,x,k,I,S,N,_,R,M,$,F,O,z,D,P,L,W,U),B}},ls=ka("Cos"),us=ka("Cosh");var ds;let cs;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(ds||(ds={}));const ps={kernelName:G,backendName:"wasm",setupFunc:function(e){cs=e.wasm.cwrap(G,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:l,boxInd:u}=n,d=l.shape[0],[c,p]=i,h=[d,c,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=Ya({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(u.dataId).id,b=t.makeOutput(h,"float32"),x=t.dataIdMap.get(b.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return cs(g,y,A,d,w,c,p,ds[a],s,x),null!=f&&t.disposeData(f.dataId),b}};let hs;const fs={kernelName:V,backendName:"wasm",setupFunc:function(e){hs=e.wasm.cwrap(V,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:o,reverse:l}=r,u=s.shape.length;a("float32"===s.dtype||"int32"===s.dtype,(()=>`cumsum does not support ${s.dtype} tensors in the WASM backend`));const d=$r([i],u);let c=s;null!==d&&(c=Ma({inputs:{x:s},attrs:{perm:d},backend:n}));const p=Fr(1,u)[0];Mr("cumsum",[p],u);const h=n.makeOutput(c.shape,c.dtype),f=c.shape[p],m=n.dataIdMap.get(c.dataId).id,g=n.dataIdMap.get(h.dataId).id;hs(m,o?1:0,l?1:0,f,g,ba[s.dtype]);let y=h;if(null!==d){const e=d.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]));y=Ma({inputs:{x:h},attrs:{perm:e},backend:n}),n.disposeData(c.dataId),n.disposeData(h.dataId)}return y}};let ms;const gs={kernelName:j,backendName:"wasm",setupFunc:function(e){ms=e.wasm.cwrap(j,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),c="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(c,"float32"),h=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(A(a.shape)).buffer),m=new Uint8Array(new Int32Array(c).buffer),g=new Uint8Array(new Int32Array(A(c)).buffer),y=t.dataIdMap.get(p.dataId).id;return ms(h,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,c.length,y),p}};let ys;const As={kernelName:H,backendName:"wasm",setupFunc:function(e){ys=e.wasm.cwrap(H,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:c}=n,p=null==u?[1,1]:u,h=ua(a.shape,s.shape,l,p,d,c,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,A=h.padInfo.bottom,b=h.padInfo.left,x=h.dilationHeight,w=h.dilationWidth,v=h.strideHeight,k=h.strideWidth,I=h.inChannels,S=h.outChannels,N="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const T=r.makeOutput(h.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return ys(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,b,N,x,w,v,k,I,S,C),T}},bs=ka("Elu"),xs=Sa("Equal",0,"bool"),ws=ka("Exp","float32");function vs(e){const{inputs:t,attrs:n,backend:r}=e,{input:s}=t,{dim:i}=n,o=s.shape.length,l=s.shape.slice();let u=i;return i<0&&(a(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+i+1),l.splice(u,0,1),Va({inputs:{x:s},backend:r,attrs:{shape:l}})}const ks={kernelName:K,backendName:"wasm",kernelFunc:vs};function Is(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const Ss={kernelName:X,backendName:"wasm",kernelFunc:Is};let Ns;const Ts={kernelName:Z,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return Ns(s,o,l,u,d,i),a},setupFunc:function(e){Ns=e.wasm.cwrap(Z,null,["number","number","number","number","number","number"])}},Cs=ka("Floor"),Es=Sa(Y);let _s;const Rs={kernelName:J,backendName:"wasm",setupFunc:function(e){_s=e.wasm.cwrap(J,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:d}=n,c=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=null!=d?t.dataIdMap.get(d.dataId).id:0,g=t.makeOutput(s.shape,s.dtype);if(0===l(s.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return _s(c,p,h,f,m,a,y),g}};let Ms;const $s={kernelName:Je,backendName:"wasm",setupFunc:function(e){Ms=e.wasm.cwrap(Je,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=ua(a.shape,s.shape,l,d,u,p),g=xa[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const w=m.filterHeight,v=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==c)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);const z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Ms(y,$,F,O,A,w,v,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}};let Fs;const Os={kernelName:Qe,backendName:"wasm",setupFunc:function(e){Fs=e.wasm.cwrap(Qe,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=ua(a.shape,s.shape,l,d,u,p,!0),g=xa[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels;let x=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}const w=m.filterHeight,v=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==c)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);const z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Fs(y,$,F,O,A,w,v,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}};let zs;const Ds={kernelName:Q,backendName:"wasm",setupFunc:function(e){zs=e.wasm.cwrap(Q,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=function(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===l(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let d=1;for(let e=s;e<n;++e)d*=o[e],u.push(o[e]);const c=[...A(e.shape).map((e=>e/d)),1].slice(0,s);return[u,i,d,c]}(r,a),d=t.makeOutput(s,r.dtype);if(0===i)return d;const c=a.shape,p=c[c.length-1],h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(u).buffer),g=t.dataIdMap.get(d.dataId).id;return zs(h,ba[r.dtype],f,i,p,o,m,g),d}};let Ps;const Ls={kernelName:"GatherV2",backendName:"wasm",setupFunc:function(e){Ps=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s,indices:i}=n,{axis:o,batchDims:u}=r,d=c(o,s.shape)[0],p=t.readSync(i.dataId),h=s.shape[d];for(let e=0;e<p.length;++e){const t=p[e];a(t<=h-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${h-1}]`))}const f=function(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,d=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}(s,i,d,u),m=Va({inputs:{x:s},attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]},backend:t}),g=l(i.shape),y=Va({inputs:{x:i},attrs:{shape:[f.batchSize,g/f.batchSize]},backend:t}),b=[f.batchSize,f.outerSize,g/f.batchSize,f.sliceSize],x=t.makeOutput(b,s.dtype);if(0===l(s.shape))return x;const w=m.shape.length-1,v=t.dataIdMap.get(m.dataId).id,k=t.dataIdMap.get(y.dataId).id,I=t.dataIdMap.get(x.dataId).id,S=new Uint8Array(new Int32Array(A(m.shape)).buffer),N=new Uint8Array(new Int32Array(A(b)).buffer);return Ps(v,ba[s.dtype],S,w,k,f.batchSize,N,I),t.disposeData(m.dataId),t.disposeData(y.dataId),x.shape=f.outputShape,x}},Ws=Sa(ee,0,"bool"),Bs=Sa(te,0,"bool");let Us;const Vs={kernelName:re,backendName:"wasm",setupFunc:function(e){Us=e.wasm.cwrap(re,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==l(t.shape)){const e=r.dataIdMap.get(s.dataId).id;Us(a,ba[t.dtype],n,e)}return s}},Gs=Sa("Less",0,"bool"),js=Sa(ae,0,"bool"),Hs=ka("Log"),qs=Sa(se,0,"bool");let Ks;const Xs={kernelName:ie,backendName:"wasm",setupFunc:function(e){Ks=e.wasm.cwrap(ie,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=Fa(i,a,t);h&&(u=d,o=t.dataIdMap.get(d.dataId).id),Mr("max",c,u.shape.length);const[f,m]=_r(u.shape,c),g=l(m),y=t.makeOutput(f,i.dtype);if(0!==l(u.shape)){const e=t.dataIdMap.get(y.dataId).id;Ks(o,ba[i.dtype],g,e)}if(h&&t.disposeData(d.dataId),s){const e=Rr(y.shape,p);y.shape=e}return y}},Zs=Sa("Maximum");let Ys;const Js={kernelName:oe,backendName:"wasm",setupFunc:function(e){Ys=e.wasm.cwrap(oe,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,s=t.x,i=r.dataIdMap.get(s.dataId).id;a("float32"===s.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${s.dtype}.`));const{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=n,c=la(s.shape,o,l,1,u,d),p=c.filterHeight,h=c.filterWidth,f=c.padInfo.top,m=c.padInfo.right,g=c.padInfo.bottom,y=c.padInfo.left,A=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return Ys(i,s.shape[0],s.shape[1],s.shape[2],p,h,f,m,g,y,A,b,x,w,v,k,S),I}};let Qs;const ei={kernelName:le,backendName:"wasm",setupFunc:function(e){Qs=e.wasm.cwrap(le,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:f}=Fa(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(d=c,u=e,m=Fr(m.length,d.shape.length))}Mr("mean",m,d.shape.length);const[g,y]=_r(d.shape,m),A=l(y);let b=d;"float32"!==d.dtype&&(b=Ya({backend:t,inputs:{x:d},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(g,"float32");if(0!==l(d.shape)){const e=t.dataIdMap.get(x.dataId).id;Qs(u,A,e)}if(f&&t.disposeData(c.dataId),s){const e=Rr(x.shape,h);x.shape=e}return"float32"!==d.dtype&&t.disposeData(b.dataId),x}};let ti;const ni={kernelName:ue,backendName:"wasm",setupFunc:function(e){ti=e.wasm.cwrap(ue,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:f}=Fa(i,a,t);if(f){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(d=c,u=e)}Mr("min",p,d.shape.length);const[m,g]=_r(d.shape,p),y=l(g),A=t.makeOutput(m,d.dtype);if(0!==l(d.shape)){const e=t.dataIdMap.get(A.dataId).id;ti(u,ba[i.dtype],y,e)}if(f&&t.disposeData(c.dataId),s){const e=Rr(A.shape,h);A.shape=e}return A}},ri=Sa(de);var ai;let si;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(ai||(ai={}));const ii={kernelName:ce,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),c=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(c).buffer);return si(i,u,t.shape.length,ba[t.dtype],p,h,ai[a],l),o},setupFunc:function(e){si=e.wasm.cwrap(ce,null,["number","array","number","number","array","array","number","number"])}},oi=Sa(pe),li=ka("Neg");function ui(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let di;const ci={kernelName:fe,backendName:"wasm",setupFunc:function(e){di=e.wasm.cwrap(fe,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,c=di(u,d,s,a,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=ui(t,c);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};let pi;const hi={kernelName:me,backendName:"wasm",setupFunc:function(e){pi=e.wasm.cwrap(me,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=pi(d,c,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=ui(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}};let fi;const mi={kernelName:ge,backendName:"wasm",setupFunc:function(e){fi=e.wasm.cwrap(ge,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=fi(d,c,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=ui(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},gi=Sa(he,0,"bool");let yi;const Ai={kernelName:ye,backendName:"wasm",setupFunc:function(e){yi=e.wasm.cwrap(ye,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return yi(d,s,i,o,u),l}},bi={kernelName:Ae,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:i}=r;if(1===t.length)return vs({inputs:{input:t[0]},backend:n,attrs:{dim:i}});const o=t[0].shape,l=t[0].dtype;t.forEach((e=>{s(o,e.shape,"All tensors passed to stack must have matching shapes"),a(l===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],d=ns({inputs:t.map((e=>{const t=vs({inputs:{input:e},backend:n,attrs:{dim:i}});return u.push(t),t})),backend:n,attrs:{axis:i}});return u.forEach((e=>n.disposeData(e.dataId))),d}};let xi;const wi={kernelName:be,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===l(t.shape))return Is({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map((e=>e[0])),p=r.map((e=>e[1])),h=new Uint8Array(new Int32Array(c).buffer),f=new Uint8Array(new Int32Array(p).buffer);return xi(i,d,t.shape.length,ba[t.dtype],h,f,a,u),o},setupFunc:function(e){xi=e.wasm.cwrap(be,null,["number","array","number","number","array","array","number","number"])}},vi=Sa("Pow");let ki;const Ii={kernelName:xe,backendName:"wasm",setupFunc:function(e){ki=e.wasm.cwrap(xe,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const l=r;let u=l;"float32"!==l.dtype&&(u=Ya({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);const d=n.makeOutput(r.shape,"float32"),c=n.dataIdMap.get(d.dataId).id;return ki(o,i,c),"float32"!==l.dtype&&n.disposeData(u.dataId),d}};let Si;const Ni={kernelName:we,backendName:"wasm",setupFunc:function(e){Si=e.wasm.cwrap(we,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:f}=Fa(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(d=c,u=e,m=Fr(m.length,d.shape.length))}Mr("prod",m,d.shape.length);const[g,y]=_r(d.shape,m),A=l(y),b=t.makeOutput(g,d.dtype);if(0!==l(d.shape)){const e=t.dataIdMap.get(b.dataId).id;Si(u,A,ba[b.dtype],e)}if(f&&t.disposeData(c.dataId),s){const e=Rr(b.shape,h);b.shape=e}return b}},Ti={kernelName:ve,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return v(0,r);const a=v(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},Ci=Sa(q),Ei=ka(ke),_i=ka(Ne);let Ri;const Mi={kernelName:Se,backendName:"wasm",setupFunc:function(e){Ri=e.wasm.cwrap(Se,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,d]=o,[c,p,h,f]=a.shape,m=[c,u,d,f];let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=Ya({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const A=y.id,b=t.makeOutput(m,"float32");if(0===l(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return Ri(A,c,p,h,f,u,d,s?1:0,i?1:0,x),null!=g&&t.disposeData(g.dataId),b}};let $i;const Fi={kernelName:Te,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=c(s,a.shape);if(0===a.shape.length)return Ea({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);$i(l,d,i.length,p,a.shape.length,u);const h=Va({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),h},setupFunc:function(e){$i=e.wasm.cwrap(Te,null,["number","array","number","array","number","number"])}};let Oi;const zi={kernelName:Ze,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[c,p,h,f]=a.shape,[m,g]=function(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}(o,p,h),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return Oi(u,c,p,h,f,s,m,g,A,y.length,d),l},setupFunc:function(e){Oi=e.wasm.cwrap(Ze,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Di=ka(Ce),Pi=ka("Rsqrt");let Li;const Wi={kernelName:Ee,backendName:"wasm",setupFunc:function(e){Li=e.wasm.cwrap(Ee,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===l(i))return o;const{sliceRank:u,numUpdates:d,sliceSize:c,strides:p,outputSize:h}=function(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:l(t.shape)/o,sliceSize:i,strides:[...A(n.slice(0,a)),1],outputSize:l(n)}}(0,a,i),f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return Li(f,m,ba[s.dtype],u,d,c,g,h,y),o}};let Bi;const Ui={kernelName:_e,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,d=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(d.dataId).id,p=r.shape.length,h=a.shape.length,f=0===p||p>1||1===h?1:l(a.shape.slice(1));return Bi(i,o,u,f,c),d},setupFunc:function(e){Bi=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let Vi;const Gi={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Vi=e.wasm.cwrap(Me,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===l(a.shape)||Vi(r,s),a}},ji=ka("Sin");let Hi;const qi={kernelName:ze,backendName:"wasm",setupFunc:function(e){Hi=e.wasm.cwrap(ze,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=l(n.shape)/o;return 0===l(s.shape)||Hi(a,i,o,u),s}},Ki={kernelName:"SpaceToBatchND",backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=l(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const d=wi.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=fa(d.shape,s,o,!1),p=ma(c.length,s.length,!1),h=ga(d.shape,s,o,!1),f=Va({inputs:{x:d},backend:n,attrs:{shape:c}}),m=Ma({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Va({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(d.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};let Xi;const Zi={kernelName:De,backendName:"wasm",setupFunc:function(e){Xi=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],l=r.shape[1],u=t.readSync(s.dataId)[0],d=[o+u,l],c=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(d,r.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(d.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([u],"bool"),b=t.dataIdMap.get(A.dataId).id,x=t.makeOutput([o],r.dtype),w=t.dataIdMap.get(x.dataId).id,v=t.makeOutput([4],"int32"),k=t.dataIdMap.get(v.dataId).id,I=Xi(c,p,ba[a.dtype],o,u,l,h,m,y,b,w,k),S=t.readSync(v.dataId);let N;switch(S[0]){case 1:N=`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${S[1]}`;break;case 2:N=function(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}(S[1],S[2]);break;case 3:N=function(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}(S[1],S[2],S[3]);break;default:N=""}if(t.disposeData(v.dataId),N)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(x.dataId),new Error(N);let T=f,C=g;return I!==d[0]&&(T=Ka({inputs:{x:f},attrs:{begin:0,size:[I,l]},backend:t}),C=Ka({inputs:{x:g},attrs:{begin:0,size:I},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[T,C,A,x]}};let Yi;const Ji={kernelName:Pe,backendName:"wasm",setupFunc:function(e){Yi=e.wasm.cwrap(Pe,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,d=r.shape[0],c=l(s.shape),p=t.makeOutput([d,c],r.dtype),h=t.dataIdMap.get(p.dataId).id,f=t.makeOutput([c],s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput([3],"int32"),y=t.dataIdMap.get(g.dataId).id;Yi(i,o,u,d,h,m,y);const A=t.readSync(g.dataId);let b;switch(A[0]){case 0:b=`only one output dimension may be -1, not both ${A[1]} and ${A[2]}`;break;case 1:b=`size ${A[1]} must be non-negative, not ${A[2]}`;break;case 2:b="reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero";break;case 3:b=function(e,t){return`Input to reshape is a SparseTensor with ${l(e)}\n  dense values, but the requested shape requires a multiple of ${l(t)}. inputShape=${e} outputShape= ${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;case 4:b=function(e,t){return`Input to reshape is a tensor with ${l(e)} dense values, but the requested shape has ${l(t)}. inputShape=${e} outputShape=${t}`}(Array.from(t.readSync(a.dataId)),Array.from(t.readSync(f.dataId)));break;default:b=""}if(t.disposeData(g.dataId),b)throw t.disposeData(p.dataId),t.disposeData(f.dataId),new Error(b);return[p,f]}};let Qi;function eo(e){Qi=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function to(e,t){const{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error("segment ids must be >= 0");const d=a.shape.slice();d[0]=u;const c=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;Qi(c,ba[a.dtype],a.shape[0],p,h,m,y,t,0);const A=n.readSync(g.dataId);let b;switch(A[0]){case 0:b="segment ids must be >= 0";break;case 1:b="segment ids are not increasing";break;case 2:b=function(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}(A[1],A[2]);break;case 3:b=function(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}(A[1],A[2],A[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}const no={kernelName:Le,backendName:"wasm",setupFunc:eo,kernelFunc:function(e){return to(e,!0)}},ro={kernelName:We,backendName:"wasm",setupFunc:eo,kernelFunc:function(e){return to(e,!1)}},ao={kernelName:Oe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:o}=n,l=c(o,s.shape)[0],u=function(e,t,n=0){let r=[];if("number"==typeof t)a(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);a(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}a(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}(s,i,l),d=new Array(s.shape.length).fill(0),p=s.shape.slice();return u.map((e=>{const t=[...p];t[l]=e;const n=Ka({inputs:{x:s},attrs:{begin:d,size:t},backend:r});return d[l]+=e,n}))}},so=ka($e),io=ka("Square"),oo=Sa(Be);let lo;const uo={kernelName:Xe,backendName:"wasm",setupFunc:function(e){lo=e.wasm.cwrap(Xe,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return lo(i,a,ba[s.dtype],l),o}};let co;const po={kernelName:Ue,backendName:"wasm",setupFunc:function(e){co=e.wasm.cwrap(Ue,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=function(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const c={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<c.dims;e++)d&&1<<e&o&&c.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(c.ellipsisMask|=1<<c.dims,c.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(c,p);let h=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Bn(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=Bn(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;h=h&&e,f=f&&(0===t&&1===p.strides[t]||e)}else h=h&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}(s.shape,i,o,l,u,d,c,p,h);let k;if(g)k=Va({inputs:{x:s},backend:t,attrs:{shape:m}});else if(y||b){a(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=function(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}(x,w,v),n=Ka({inputs:{x:s},backend:t,attrs:{begin:x,size:e}});k=Va({inputs:{x:n},backend:t,attrs:{shape:m}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(f,"float32"),n=t.dataIdMap.get(s.dataId).id,r=new Uint8Array(new Int32Array(A(s.shape)).buffer),a=new Uint8Array(new Int32Array(x).buffer),i=new Uint8Array(new Int32Array(w).buffer),o=new Uint8Array(new Int32Array(v).buffer),l=new Uint8Array(new Int32Array(f).buffer),u=new Uint8Array(new Int32Array(A(f)).buffer),d=t.dataIdMap.get(e.dataId).id;co(n,r,s.shape.length,a,i,o,l,u,f.length,d),k=Va({inputs:{x:e},backend:t,attrs:{shape:m}}),t.disposeData(e.dataId)}return k}},ho=Sa("Sub");let fo;const mo={kernelName:Fe,backendName:"wasm",setupFunc:function(e){fo=e.wasm.cwrap(Fe,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,d=i;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:f}=Fa(i,a,t);let m=p;if(f){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(d=c,u=e,m=Fr(m.length,d.shape.length))}Mr("sum",m,d.shape.length);const[g,y]=_r(d.shape,m),A=l(y),b=t.makeOutput(g,d.dtype);if(0!==l(d.shape)){const e=t.dataIdMap.get(b.dataId).id;fo(u,A,ba[b.dtype],e)}if(f&&t.disposeData(c.dataId),s){const e=Rr(b.shape,h);b.shape=e}return b}},go=ka("Tan"),yo=ka("Tanh");let Ao;let bo;let xo;const wo={kernelName:je,backendName:"wasm",setupFunc:function(e){xo=e.wasm.cwrap(je,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,c,p,h]=a.shape,[f,m]=null!=u?u:[c,p],g=[d,f,m,h],y=new Uint8Array(new Int32Array(A(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(a.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return xo(w,v,s.shape[0]>1,d,f,m,h,p,c,y,a.shape.length-1,k,I,l,x),b}},vo={kernelName:qe,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,l=new Array(o-1);let u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);const d=new Array(i),c=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<d.length;e++)c[s]=e,d[e]=Ka({inputs:{x:a},attrs:{begin:c,size:p},backend:n});return d.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},ko=[va,Ia,Na,Ca,za,Pa,Wa,Ua,Ha,Za,Ja,Qa,ts,rs,ss,os,ls,us,ps,fs,gs,As,bs,xs,ws,ks,Ss,Ts,Cs,Es,Rs,$s,Os,Ds,Ls,Ws,Bs,_a,Vs,Gs,js,Hs,qs,Xs,Zs,Js,ei,ni,ri,ii,oi,li,ci,hi,mi,gi,Ai,{kernelName:"OnesLike",backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},bi,wi,vi,Ii,Ni,Ti,Ci,Ei,_i,Ga,Mi,Fi,zi,Di,Pi,Wi,Ui,Gi,ji,Xa,qi,Ki,Zi,Ji,no,ro,ao,so,io,oo,uo,po,ho,mo,go,yo,{kernelName:Ve,backendName:"wasm",setupFunc:function(e){Ao=e.wasm.cwrap(Ve,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),c=n.dataIdMap.get(d.dataId).id;return Ao(s,l,a.shape.length,u,o.length,ba[d.dtype],c),d}},{kernelName:Ge,backendName:"wasm",setupFunc:function(e){bo=e.wasm.cwrap(Ge,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;const u=t.makeOutput(l,r.dtype),d=t.dataIdMap.get(u.dataId).id,c=t.makeOutput(l,"int32"),p=t.dataIdMap.get(c.dataId).id;return bo(i,o,r.shape.length,ba[r.dtype],a,s,d,p),[u,c]}},wo,$a,vo,{kernelName:Ke,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}}];for(const e of ko)it(e);const Io=C();Io.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Io.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Io.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var So=n(8417),No=n.n(So),To=n(3805),Co=n.n(To);class Eo extends t{constructor(t){super(),this.wasm=t,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Do),Po=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new e(this,Ut)}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=pt();return e(),{kernelMs:pt()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=l(n),o=i*f(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||l(s);const o=f(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=l(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=l(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}}function _o(e,t,n){if(null!=Mo)return Mo;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=Fo&&null!=Fo[r]?Fo[r]:n+r}const Ro=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let Mo=null,$o=null,Fo={},Oo=!1,zo=!1,Do=-1,Po=null;!function(e,t,n=1){Ut.registerBackend(e,t,n)}("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([C().getAsync("WASM_HAS_SIMD_SUPPORT"),C().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?_o(e,t,null!=$o?$o:r):r+n}};var s;zo&&(a.instantiateWasm=(s=_o(e,t,null!=$o?$o:""),(e,t)=>(function(e){return C().platform.fetch(e,{credentials:"same-origin"})}(s).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;a.onAbort=()=>{o||Oo||(Oo=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==Mo?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+No().toString()],{type:"text/javascript"}),i=No()(a)):i=Co()(a),i.then((e=>{o=!0,Oo=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new Eo(e)}),2);var Lo="node_modules/@vladmandic/human/dist/human.esm.js",Wo=Object.defineProperty,Bo=(e,t)=>{for(var n in t)Wo(e,n,{get:t[n],enumerable:!0})},Uo=(e,t,n)=>(((e,t,n)=>{t in e?Wo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!=typeof t?t+"":t,n),n),Vo=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},Go=(e,t,n)=>(Vo(e,t,"read from private field"),n?n.call(e):t.get(e)),jo=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},Ho=(e,t,n,r)=>(Vo(e,t,"write to private field"),r?r.call(e,n):t.set(e,n),n);function qo(...e){const t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}var Ko=()=>"undefined"!=typeof performance?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function Xo(e,t,n="config",r=[]){for(const a of Object.keys(t))if("object"==typeof t[a])Xo(e[a],t[a],a,r);else{const s=e&&void 0!==e[a];s||r.push({reason:"unknown property",where:`${n}.${a} = ${t[a]}`});const i=e&&typeof e[a]==typeof t[a];s&&!i&&r.push({reason:"property type mismatch",where:`${n}.${a} = ${t[a]}`,expected:typeof e[a]})}return t.debug&&"config"===n&&r.length>0&&qo("invalid configuration",r),r}function Zo(...e){const t=e=>e&&"object"==typeof e;return e.reduce(((e,n)=>(Object.keys(n||{}).forEach((r=>{const a=e[r],s=n[r];Array.isArray(a)&&Array.isArray(s)?e[r]=a.concat(...s):t(a)&&t(s)?e[r]=Zo(a,s):e[r]=s})),e)),{})}var Yo={backend:"",modelBasePath:"",cacheModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},Jo={};Bo(Jo,{Abs:()=>$u,Acos:()=>Fu,Acosh:()=>Ou,AdadeltaOptimizer:()=>vv,AdagradOptimizer:()=>kv,AdamOptimizer:()=>Iv,AdamaxOptimizer:()=>Sv,Add:()=>zu,AddN:()=>Du,All:()=>Pu,Any:()=>Lu,ArgMax:()=>Wu,ArgMin:()=>Bu,Asin:()=>Uu,Asinh:()=>Vu,Atan:()=>Gu,Atan2:()=>Hu,Atanh:()=>ju,AvgPool:()=>qu,AvgPool3D:()=>Xu,AvgPool3DGrad:()=>Zu,AvgPoolGrad:()=>Ku,BackendWasm:()=>n4,BatchMatMul:()=>Yu,BatchToSpaceND:()=>Ju,Bincount:()=>Qu,BroadcastArgs:()=>td,BroadcastTo:()=>ed,Callback:()=>N$,CallbackList:()=>gC,Cast:()=>nd,Ceil:()=>rd,ClipByValue:()=>ad,Complex:()=>sd,ComplexAbs:()=>id,Concat:()=>od,Conv2D:()=>ld,Conv2DBackpropFilter:()=>ud,Conv2DBackpropInput:()=>dd,Conv3D:()=>cd,Conv3DBackpropFilterV2:()=>pd,Conv3DBackpropInputV2:()=>hd,Cos:()=>fd,Cosh:()=>md,CropAndResize:()=>Ad,Cumprod:()=>gd,Cumsum:()=>yd,CustomCallback:()=>bC,DataStorage:()=>Cl,DenseBincount:()=>bd,DepthToSpace:()=>xd,DepthwiseConv2dNative:()=>wd,DepthwiseConv2dNativeBackpropFilter:()=>vd,DepthwiseConv2dNativeBackpropInput:()=>kd,Diag:()=>Id,Dilation2D:()=>Sd,Dilation2DBackpropFilter:()=>Td,Dilation2DBackpropInput:()=>Nd,ENV:()=>_u,EarlyStopping:()=>E$,Einsum:()=>Ed,Elu:()=>_d,EluGrad:()=>Rd,Environment:()=>Nu,Equal:()=>$d,Erf:()=>Md,Exp:()=>Fd,ExpandDims:()=>Od,Expm1:()=>zd,FFT:()=>Dd,Fill:()=>Pd,FlipLeftRight:()=>Ld,Floor:()=>Wd,FloorDiv:()=>Bd,FromPixels:()=>Fp,FusedBatchNorm:()=>Ud,FusedConv2D:()=>Dp,FusedDepthwiseConv2D:()=>Pp,GPGPUContext:()=>jG,GatherNd:()=>Gd,GatherV2:()=>Vd,GraphModel:()=>pO,Greater:()=>jd,GreaterEqual:()=>Hd,History:()=>AC,IFFT:()=>Kd,Identity:()=>qd,Imag:()=>Xd,InputSpec:()=>aC,IsFinite:()=>Zd,IsInf:()=>Yd,IsNan:()=>Jd,KernelBackend:()=>El,LRN:()=>uc,LRNGrad:()=>dc,LayerVariable:()=>tC,LayersModel:()=>NE,LeakyRelu:()=>Qd,Less:()=>ec,LessEqual:()=>tc,LinSpace:()=>nc,Log:()=>rc,Log1p:()=>ac,LogSoftmax:()=>lc,LogicalAnd:()=>sc,LogicalNot:()=>ic,LogicalOr:()=>oc,MathBackendCPU:()=>Rz,MathBackendWebGL:()=>eH,Max:()=>cc,MaxPool:()=>hc,MaxPool3D:()=>mc,MaxPool3DGrad:()=>gc,MaxPoolGrad:()=>fc,MaxPoolWithArgmax:()=>yc,Maximum:()=>pc,Mean:()=>Ac,Min:()=>bc,Minimum:()=>xc,MirrorPad:()=>wc,Mod:()=>vc,MomentumOptimizer:()=>Tv,Multinomial:()=>kc,Multiply:()=>Ic,Neg:()=>Sc,NonMaxSuppressionV3:()=>Tc,NonMaxSuppressionV4:()=>Cc,NonMaxSuppressionV5:()=>Ec,NotEqual:()=>Nc,OP_SCOPE_SUFFIX:()=>pf,OneHot:()=>Rc,OnesLike:()=>_c,Optimizer:()=>wv,OptimizerConstructors:()=>Ev,Pack:()=>Mc,PadV2:()=>$c,Pool:()=>Fc,Pow:()=>Oc,Prelu:()=>zc,Prod:()=>Dc,RMSPropOptimizer:()=>Cv,RNN:()=>D_,Range:()=>Pc,Rank:()=>Fh,Real:()=>Lc,RealDiv:()=>Cd,Reciprocal:()=>Wc,Reduction:()=>Yw,Relu:()=>Bc,Relu6:()=>qc,Reshape:()=>Uc,ResizeBilinear:()=>jc,ResizeBilinearGrad:()=>Hc,ResizeNearestNeighbor:()=>Vc,ResizeNearestNeighborGrad:()=>Gc,Reverse:()=>Kc,RotateWithOffset:()=>Op,Round:()=>Xc,Rsqrt:()=>Zc,SGDOptimizer:()=>Nv,ScatterNd:()=>Yc,Select:()=>Jc,Selu:()=>Qc,Sequential:()=>_E,Sigmoid:()=>ap,Sign:()=>rp,Sin:()=>tp,Sinh:()=>np,Slice:()=>ep,Softmax:()=>dp,Softplus:()=>sp,SpaceToBatchND:()=>lp,SparseFillEmptyRows:()=>cp,SparseReshape:()=>pp,SparseSegmentMean:()=>hp,SparseSegmentSum:()=>fp,SparseToDense:()=>mp,SplitV:()=>up,Sqrt:()=>ip,Square:()=>yp,SquaredDifference:()=>gp,Step:()=>$p,StridedSlice:()=>Ap,StringNGrams:()=>bp,StringSplit:()=>xp,StringToHashBucketFast:()=>wp,Sub:()=>vp,Sum:()=>op,SymbolicTensor:()=>sC,Tan:()=>kp,Tanh:()=>Ip,Tensor:()=>_h,TensorBuffer:()=>Th,Tile:()=>Sp,TopK:()=>Np,Transform:()=>Tp,Transpose:()=>Cp,Unique:()=>Ep,Unpack:()=>_p,UnsortedSegmentSum:()=>Rp,Variable:()=>Rh,ZerosLike:()=>Mp,_FusedMatMul:()=>zp,abs:()=>ly,acos:()=>uy,acosh:()=>dy,add:()=>ay,addN:()=>cy,all:()=>py,any:()=>hy,argMax:()=>fy,argMin:()=>my,asin:()=>gy,asinh:()=>yy,atan:()=>Ay,atan2:()=>by,atanh:()=>xy,avgPool:()=>zy,avgPool3d:()=>Dy,backend:()=>ny,backend_util:()=>$v,basicLSTMCell:()=>Uy,batchNorm:()=>jy,batchNorm2d:()=>Hy,batchNorm3d:()=>qy,batchNorm4d:()=>Ky,batchToSpaceND:()=>Vy,bincount:()=>Xy,booleanMaskAsync:()=>ew,broadcastArgs:()=>Zy,broadcastTo:()=>Yy,broadcast_util:()=>zm,browser:()=>Bm,buffer:()=>lm,callbacks:()=>_$,cast:()=>um,ceil:()=>Jy,clipByValue:()=>Qy,clone:()=>dm,complex:()=>ff,concat:()=>Py,concat1d:()=>eA,concat2d:()=>tA,concat3d:()=>nA,concat4d:()=>rA,constraints:()=>PS,conv1d:()=>sA,conv2d:()=>aA,conv2dTranspose:()=>oA,conv3d:()=>lA,conv3dTranspose:()=>dA,copyRegisteredKernels:()=>Zp,cos:()=>cA,cosh:()=>pA,cosineWindow:()=>uw,cumprod:()=>hA,cumsum:()=>fA,customGrad:()=>eb,data:()=>mO,denseBincount:()=>mA,deprecationWarn:()=>Wg,depthToSpace:()=>gA,depthwiseConv2d:()=>yA,deregisterOp:()=>z$,device_util:()=>tf,diag:()=>AA,dilation2d:()=>bA,disableDeprecationWarnings:()=>Lg,dispose:()=>Hg,disposeVariables:()=>Bg,div:()=>iy,divNoNan:()=>kA,dot:()=>IA,dropout:()=>ow,einsum:()=>SA,elu:()=>NA,enableDebugMode:()=>Pg,enableProdMode:()=>Dg,enclosingPowerOfTwo:()=>lw,engine:()=>Ug,env:()=>Cu,equal:()=>xA,erf:()=>TA,exp:()=>CA,expandDims:()=>EA,expm1:()=>_A,eye:()=>MA,fft:()=>Ex,fill:()=>$A,findBackend:()=>Qg,findBackendFactory:()=>ey,floor:()=>FA,floorDiv:()=>sy,forceHalfFloat:()=>nH,fused:()=>cw,gather:()=>OA,gatherND:()=>iw,gather_util:()=>qm,getBackend:()=>Yg,getGradient:()=>Gp,getKernel:()=>Vp,getKernelsForBackend:()=>jp,getThreadsCount:()=>m4,gpgpu_util:()=>vG,grad:()=>XA,grads:()=>ZA,greater:()=>zA,greaterEqual:()=>DA,ifft:()=>_x,imag:()=>PA,image:()=>gv,inTopKAsync:()=>dw,initializers:()=>IN,input:()=>FE,io:()=>pm,irfft:()=>Rx,isFinite:()=>LA,isInf:()=>WA,isNaN:()=>BA,keep:()=>qg,kernel_impls:()=>Ok,layers:()=>GT,leakyRelu:()=>UA,less:()=>VA,lessEqual:()=>GA,linalg:()=>yv,linspace:()=>jA,loadGraphModel:()=>hO,loadLayersModel:()=>$E,localResponseNormalization:()=>HA,log:()=>qA,log1p:()=>KA,logSigmoid:()=>ab,logSoftmax:()=>lb,logSumExp:()=>yb,logicalAnd:()=>Ab,logicalNot:()=>bb,logicalOr:()=>xb,logicalXor:()=>wb,losses:()=>Av,matMul:()=>Mm,math:()=>Rm,max:()=>sb,maxPool:()=>vb,maxPool3d:()=>kb,maxPoolWithArgmax:()=>Ib,maximum:()=>Sb,mean:()=>Nb,memory:()=>Vg,meshgrid:()=>Eb,metrics:()=>s$,min:()=>_b,minimum:()=>Rb,mirrorPad:()=>Mb,mod:()=>$b,model:()=>RE,models:()=>w$,moments:()=>Ob,movingAverage:()=>rw,mul:()=>oy,multiRNNCell:()=>zb,multinomial:()=>Db,neg:()=>nb,nextFrame:()=>Mv,norm:()=>nw,notEqual:()=>Pb,oneHot:()=>$m,ones:()=>Cb,onesLike:()=>Lb,op:()=>hf,outerProduct:()=>Wb,pad:()=>Bb,pad1d:()=>Ub,pad2d:()=>Vb,pad3d:()=>Gb,pad4d:()=>jb,pool:()=>qb,pow:()=>Kb,prelu:()=>Xb,print:()=>cm,prod:()=>Zb,profile:()=>Gg,rand:()=>Yb,randomGamma:()=>nx,randomNormal:()=>rx,randomUniform:()=>ax,range:()=>sx,ready:()=>Zg,real:()=>ix,reciprocal:()=>ox,registerBackend:()=>ty,registerCallbackConstructor:()=>OE,registerGradient:()=>qp,registerKernel:()=>Hp,registerOp:()=>F$,regularizers:()=>v$,relu:()=>lx,relu6:()=>ux,removeBackend:()=>Jg,reshape:()=>Oy,reverse:()=>dx,reverse1d:()=>cx,reverse2d:()=>px,reverse3d:()=>hx,reverse4d:()=>fx,rfft:()=>$x,round:()=>mx,rsqrt:()=>gx,scalar:()=>yx,scatterND:()=>aw,scatter_util:()=>Xm,selu:()=>Ax,separableConv2d:()=>bx,sequential:()=>ME,serialization:()=>bg,setBackend:()=>Xg,setPlatform:()=>ry,setThreadsCount:()=>f4,setWasmPath:()=>d4,setWasmPaths:()=>c4,setWebGLContext:()=>VU,setdiff1dAsync:()=>xx,shared:()=>Mz,sigmoid:()=>Ly,sign:()=>wx,signal:()=>mv,sin:()=>vx,sinh:()=>kx,slice:()=>Wy,slice1d:()=>Ix,slice2d:()=>Sx,slice3d:()=>Nx,slice4d:()=>Tx,slice_util:()=>Qm,softmax:()=>Cx,softplus:()=>rb,spaceToBatchND:()=>Hb,sparse:()=>bv,sparseToDense:()=>sw,spectral:()=>fv,split:()=>Mx,sqrt:()=>Fx,square:()=>Fb,squaredDifference:()=>Ox,squeeze:()=>zx,stack:()=>Dx,step:()=>Px,stridedSlice:()=>Lx,string:()=>xv,sub:()=>ib,sum:()=>ob,sumOutType:()=>Bh,tan:()=>Wx,tanh:()=>By,tensor:()=>gf,tensor1d:()=>Bx,tensor2d:()=>Ux,tensor3d:()=>Um,tensor4d:()=>Vx,tensor5d:()=>Gx,tensor6d:()=>jx,tensor_util:()=>Mh,test_util:()=>kg,tidy:()=>jg,tile:()=>RA,time:()=>Kg,topk:()=>Hx,train:()=>_v,transpose:()=>Fm,truncatedNormal:()=>qx,unique:()=>Kx,unregisterGradient:()=>Xp,unregisterKernel:()=>Kp,unsortedSegmentSum:()=>Xx,unstack:()=>Zx,upcastType:()=>Wh,util:()=>Jp,valueAndGrad:()=>YA,valueAndGrads:()=>JA,variable:()=>Yx,variableGrads:()=>QA,version:()=>A4,version_converter:()=>fO,version_core:()=>zg,version_cpu:()=>DP,version_layers:()=>tE,version_wasm:()=>g4,version_webgl:()=>tH,webgl:()=>rH,webgl_util:()=>WU,webgpu:()=>V5,where:()=>wA,whereAsync:()=>Qx,zeros:()=>Tb,zerosLike:()=>vA});var Qo=Object.create,el=Object.defineProperty,tl=Object.getOwnPropertyDescriptor,nl=Object.getOwnPropertyNames,rl=Object.getPrototypeOf,al=Object.prototype.hasOwnProperty,sl=(e,t)=>function(){return t||(0,e[nl(e)[0]])((t={exports:{}}).exports,t),t.exports},il=(e,t)=>{for(var n in t)el(e,n,{get:t[n],enumerable:!0})},ol=(e,t)=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of nl(t))!al.call(e,n)&&"default"!==n&&el(e,n,{get:()=>t[n],enumerable:!(r=tl(t,n))||r.enumerable});return e})((e=>el(e,"__esModule",{value:!0}))(el(null!=e?Qo(rl(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),ll=sl({"src/node_modules/long/src/long.js"(e,t){t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=a;var s={},i={};function o(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=i[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),a&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?A:y;if(t){if(e<0)return A;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return v}return e<0?l(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,n){return new r(e,t,n)}r.fromInt=o,r.fromNumber=l,r.fromBits=u;var d=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=l(d(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var p=l(d(n,o));s=s.mul(p).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}r.fromString=c,r.fromValue=p;var h=4294967296,f=h*h,m=f/2,g=o(1<<24),y=o(0);r.ZERO=y;var A=o(0,!0);r.UZERO=A;var b=o(1);r.ONE=b;var x=o(1,!0);r.UONE=x;var w=o(-1);r.NEG_ONE=w;var v=u(-1,2147483647,!1);r.MAX_VALUE=v;var k=u(-1,-1,!0);r.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);r.MIN_VALUE=I;var S=r.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=l(d(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){a(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,c=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,c+=(h+=r+l)>>>16,d+=(c+=n+o)>>>16,d+=t+i,u((h&=65535)<<16|(f&=65535),(d&=65535)<<16|(c&=65535),this.unsigned)},S.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(a(e)||(e=p(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,d=65535&e.high,c=e.low>>>16,h=65535&e.low,f=0,m=0,A=0,b=0;return A+=(b+=i*h)>>>16,m+=(A+=s*h)>>>16,A&=65535,m+=(A+=i*c)>>>16,f+=(m+=r*h)>>>16,m&=65535,f+=(m+=s*c)>>>16,m&=65535,f+=(m+=i*d)>>>16,f+=t*h+r*c+s*d+i*o,u((A&=65535)<<16|(b&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,r,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return x;s=A}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?b:w:(r=this.sub(e.mul(t)),s=t.add(r.div(e)));if(e.eq(I))return this.unsigned?A:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:d(2,i-48),c=l(t),h=c.mul(e);h.isNegative()||h.gt(r);)h=(c=l(t-=o,this.unsigned)).mul(e);c.isZero()&&(c=b),s=s.add(c),r=r.sub(h)}return s},S.div=S.divide,S.modulo=function(e){return a(e)||(e=p(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return a(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return a(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return a(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return a(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),ul=sl({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),dl=sl({"(disabled):util"(){}}),cl=sl({"src/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function r(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),pl=sl({"src/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),hl=sl({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),fl=sl({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),ml=sl({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),gl=sl({"src/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),yl=sl({"(disabled):crypto"(){}}),Al=sl({"src/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,r,a){var s,i=256,o="random",l=a.pow(i,6),u=a.pow(2,52),d=2*u,c=255;function p(t,n,c){var p=[],A=g(m((n=1==n?{entropy:!0}:n||{}).entropy?[t,y(r)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(t){var n=e.navigator,a=n&&n.plugins;return[+new Date,e,a,e.screen,y(r)]}}():t,3),p),b=new h(p),x=function(){for(var e=b.g(6),t=l,n=0;e<u;)e=(e+n)*i,t*=i,n=b.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|b.g(4)},x.quick=function(){return b.g(4)/4294967296},x.double=x,g(y(b.S),r),(n.pass||c||function(e,t,n,r){return r&&(r.S&&f(r,b),e.state=function(){return f(b,{})}),n?(a[o]=e,t):e})(x,A,"global"in n?n.global:this==a,n.state)}function h(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=c&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=c&a+1],n=n*i+o[c&(o[a]=o[s=c&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(a.random(),r),"object"==typeof t&&t.exports){t.exports=p;try{s=yl()}catch(e){}}else"function"==typeof define&&n.amdO?define((function(){return p})):a["seed"+o]=p}("undefined"!=typeof self?self:e,[],Math)}}),bl=sl({"src/node_modules/seedrandom/index.js"(e,t){var n=cl(),r=pl(),a=hl(),s=fl(),i=ml(),o=gl(),l=Al();l.alea=n,l.xor128=r,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),xl=sl({"(disabled):src/node_modules/string_decoder/index.js"(){}}),wl=sl({"(disabled):fs"(){}}),vl=sl({"(disabled):path"(){}}),kl=sl({"(disabled):worker_threads"(){}}),Il=sl({"(disabled):perf_hooks"(){}}),Sl=sl({"(disabled):os"(){}}),Nl=sl({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||Lo,function(e){function t(){return M.buffer!=L&&X(M.buffer),B}function a(){return M.buffer!=L&&X(M.buffer),U}function s(){return M.buffer!=L&&X(M.buffer),V}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d,c,p,h,f,m,g=Object.assign({},u),y=[],A=(e,t)=>{throw t},b="object"==typeof window,x="function"==typeof importScripts,w="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,v=u.ENVIRONMENT_IS_PTHREAD||!1,k="";function I(e){return u.locateFile?u.locateFile(e,k):k+e}if(w){let e;k=x?vl().dirname(k)+"/":"//",m=()=>{f||(h=wl(),f=vl())},d=function(e,t){return m(),e=f.normalize(e),h.readFileSync(e,t?void 0:"utf8")},p=e=>{var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),t},c=(e,t,n)=>{m(),e=f.normalize(e),h.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof st))throw e})),process.on("unhandledRejection",(function(e){throw e})),A=(e,t)=>{if(re())throw process.exitCode=e,t;(function(e){e instanceof st||E("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=kl()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=e.Worker}else(b||x)&&(x?k=self.location.href:"undefined"!=typeof document&&document.currentScript&&(k=document.currentScript.src),void 0!==r&&r&&(k=r),k=0!==k.indexOf("blob:")?k.substr(0,k.replace(/[?#].*/,"").lastIndexOf("/")+1):"",w||(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},x&&(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),c=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));w&&"undefined"==typeof performance&&(n.g.performance=Il().performance);var S=console.log.bind(console),N=console.warn.bind(console);w&&(m(),S=e=>h.writeSync(1,e+"\n"),N=e=>h.writeSync(2,e+"\n"));var T,C=u.print||S,E=u.printErr||N;function _(e){_.shown||(_.shown={}),_.shown[e]||(_.shown[e]=1,E(e))}Object.assign(u,g),g=null,u.arguments&&(y=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(A=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(T=u.wasmBinary);var R=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&ue("no native wasm support detected");var M,$,F,O=!1;function z(e){return u["_"+e]}function D(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);q(e,t=rt(n),n)}return t},array:function(e){var t=rt(e.length);return function(e,t){(M.buffer!=L&&X(M.buffer),W).set(e,t)}(e,t),t}},i=z(e),o=[],l=0;if(r)for(var u=0;u<r.length;u++){var d=s[n[u]];d?(0===l&&(l=tt()),o[u]=d(r[u])):o[u]=r[u]}var c,p=i.apply(null,o);return c=p,0!==l&&nt(l),p=function(e){return"string"===t?H(e):"boolean"===t?Boolean(e):e}(c),p}function P(e){var t=new TextDecoder(e);this.decode=e=>(e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e))}var L,W,B,U,V,G="undefined"!=typeof TextDecoder?new P("utf8"):void 0;function j(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&G)return G.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function H(e,n){return e?j(t(),e,n):""}function q(e,n,r){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,t(),n,r)}function K(e,t){return e%t>0&&(e+=t-e%t),e}function X(e){L=e,u.HEAP8=W=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=U=new Int32Array(e),u.HEAPU8=B=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=V=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new P("utf-16le"),v&&(L=u.buffer);var Z=u.INITIAL_MEMORY||16777216;if(v)M=u.wasmMemory,L=u.buffer;else if(u.wasmMemory)M=u.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:Z/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),w&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");M&&(L=M.buffer),Z=L.byteLength,X(L);var Y,J=[],Q=[],ee=[],te=[],ne=0;function re(){return R||ne>0}function ae(){!v&&fe(Q)}var se,ie=0,oe=null,le=null;function ue(e){v?postMessage({cmd:"onAbort",arg:e}):u.onAbort&&u.onAbort(e),E(e="Aborted("+e+")"),O=!0,F=1,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function de(e){return e.startsWith("data:application/octet-stream;base64,")}function ce(e){return e.startsWith("file://")}function pe(e){try{if(e==se&&T)return new Uint8Array(T);if(p)return p(e);throw"both async and sync fetching of the wasm failed"}catch(e){ue(e)}}u.preloadedImages={},u.preloadedAudios={},de(se="tfjs-backend-wasm-threaded-simd.wasm")||(se=I(se));var he={};function fe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?ve(n)():ve(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(u)}}function me(e){var t=tt(),n=e();return nt(t),n}function ge(e){var t=Ae.pthreads[e];if(t){a()[e>>2]=0;var n=t.worker;Ae.returnWorkerToPool(n)}}function ye(e){!function(e){if(F=e,v)throw be(e),"unwind";re()||v||Ae.terminateAllThreads(),function(e){F=e,re()||(Ae.terminateAllThreads(),u.onExit&&u.onExit(e),O=!0),A(e,new st(e))}(e)}(e)}var Ae={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){v?Ae.initWorker():Ae.initMainThread()},initMainThread:function(){for(var e=0;e<8;++e)Ae.allocateUnusedWorker()},initWorker:function(){R=!1},pthreads:{},setExitStatus:function(e){F=e},terminateAllThreads:function(){for(var e in Ae.pthreads){var t=Ae.pthreads[e];t&&t.worker&&Ae.returnWorkerToPool(t.worker)}for(var n=0;n<Ae.unusedWorkers.length;++n)Ae.unusedWorkers[n].terminate();Ae.unusedWorkers=[]},returnWorkerToPool:function(e){Ae.runWithoutMainThreadQueuedCalls((function(){delete Ae.pthreads[e.pthread.threadInfoStruct],Ae.unusedWorkers.push(e),Ae.runningWorkers.splice(Ae.runningWorkers.indexOf(e),1),Qe(e.pthread.threadInfoStruct),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){a()[at>>2]=0;try{e()}finally{a()[at>>2]=1}},receiveObjectTransfer:function(e){},threadInit:function(){for(var e in Ae.tlsInitFunctions)Ae.tlsInitFunctions[e]()},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var r=n.data,s=r.cmd;if(e.pthread&&(Ae.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=qe()){var i=Ae.pthreads[r.targetThread];return i?i.worker.postMessage(r,r.transferList):E('Internal error! Worker sent a message "'+s+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Ae.currentProxiedOperationCallerThread=void 0)}"processQueuedMainThreadWork"===s?Ke():"spawnThread"===s?ke(r):"cleanupThread"===s?ge(r.thread):"killThread"===s?function(e){a()[e>>2]=0;var t=Ae.pthreads[e];delete Ae.pthreads[e],t.worker.terminate(),Qe(e),Ae.runningWorkers.splice(Ae.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread):"cancelThread"===s?function(e){Ae.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread):"loaded"===s?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===s?C("Thread "+r.threadId+": "+r.text):"printErr"===s?E("Thread "+r.threadId+": "+r.text):"alert"===s?alert("Thread "+r.threadId+": "+r.text):"setimmediate"===r.target?e.postMessage(r):"onAbort"===s?u.onAbort&&u.onAbort(r.arg):E("worker sent an unknown command "+s),Ae.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},w&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||r,wasmMemory:M,wasmModule:$})},allocateUnusedWorker:function(){var e=I("tfjs-backend-wasm-threaded-simd.worker.js");Ae.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Ae.unusedWorkers.length&&(Ae.allocateUnusedWorker(),Ae.loadWasmModuleToWorker(Ae.unusedWorkers[0])),Ae.unusedWorkers.pop()}};function be(e){if(v)return Ie(1,0,e);try{ye(e)}catch(e){!function(e){if(e instanceof st||"unwind"==e)return F;A(1,e)}(e)}}u.establishStackSpace=function(){var e=qe(),t=a()[e+44>>2],n=a()[e+48>>2];et(t,t-n),nt(t)};var xe,we=[];function ve(e){var t=we[e];return t||(e>=we.length&&(we.length=e+1),we[e]=t=Y.get(e)),t}function ke(e){var t=Ae.getNewWorker();if(!t)return 6;Ae.runningWorkers.push(t);var n=Ae.pthreads[e.pthread_ptr]={worker:t,threadInfoStruct:e.pthread_ptr};t.pthread=n;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function Ie(e,t){var n=arguments.length-2,r=arguments;return me((function(){for(var a=n,i=rt(8*a),o=i>>3,l=0;l<n;l++){var u=r[2+l];s()[o+l]=u}return Ye(e,a,i,t)}))}u.invokeEntryPoint=function(e,t){return ve(e)(t)},xe=w?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:v?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var Se=[];function Ne(e){try{return M.grow(e-L.byteLength+65535>>>16),X(M.buffer),1}catch(e){}}var Te={inEventHandler:0,removeAllEventListeners:function(){for(var e=Te.eventHandlers.length-1;e>=0;--e)Te._removeHandler(e);Te.eventHandlers=[],Te.deferredCalls=[]},registerRemoveEventListeners:function(){Te.removeEventListenersRegistered||(ee.push(Te.removeAllEventListeners),Te.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in Te.deferredCalls){var s=Te.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}Te.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),Te.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<Te.deferredCalls.length;++t)Te.deferredCalls[t].targetFunction==e&&(Te.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Te.inEventHandler&&Te.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Te.canPerformEventHandlerRequests())for(var e=0;e<Te.deferredCalls.length;++e){var t=Te.deferredCalls[e];Te.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<Te.eventHandlers.length;++n)Te.eventHandlers[n].target==e&&(!t||t==Te.eventHandlers[n].eventTypeString)&&Te._removeHandler(n--)},_removeHandler:function(e){var t=Te.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Te.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++Te.inEventHandler,Te.currentEventHandler=e,Te.runDeferredCalls(),e.handlerFunc(t),Te.runDeferredCalls(),--Te.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),Te.eventHandlers.push(e),Te.registerRemoveEventListeners();else for(var n=0;n<Te.eventHandlers.length;++n)Te.eventHandlers[n].target==e.target&&Te.eventHandlers[n].eventTypeString==e.eventTypeString&&Te._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,s){me((function(){var i=rt(12);a()[i>>2]=n,a()[i+4>>2]=r,a()[i+8>>2]=s,Je(e,637534208,t,r,i)}))},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Ae.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var Ce=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Ee(e){return function(e){return e=function(e){return e>2?H(e):e}(e),Ce[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}(e)}function _e(e,t,n){var r=Ee(e);if(!r)return-4;if(r.canvasSharedPtr&&(a()[r.canvasSharedPtr>>2]=t,a()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){!function(e,t,n,r){me((function(){var s=rt(12),i=0;t&&(i=function(e){var t=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(e)+1,n=Ge(t);return q(e,n,t),n}(t)),a()[s>>2]=i,a()[s+4>>2]=n,a()[s+8>>2]=r,Je(e,657457152,0,i,s)}))}(e,t=t?H(t):"",n,r)}(a()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var s=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);s=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,s&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Re(e,t,n){return v?Ie(2,1,e,t,n):_e(e,t,n)}var Me={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(e){Me.lastError||(Me.lastError=e)},getNewId:function(e){for(var t=Me.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var s="",i=0;i<t;++i){var o=r?a()[r+4*i>>2]:-1;s+=H(a()[n+4*i>>2],o<0?void 0:o)}return s},createContext:function(e,t){e.getContextSafariWebGL2Fixed||(e.getContextSafariWebGL2Fixed=e.getContext,e.getContext=function(t,n){var r=e.getContextSafariWebGL2Fixed(t,n);return"webgl"==t==r instanceof WebGLRenderingContext?r:null});var n=e.getContext("webgl",t);return n?Me.registerContext(n,t):0},registerContext:function(e,t){var n=Ge(8);a()[n+4>>2]=qe();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Me.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Me.initExtensions(r),n},makeContextCurrent:function(e){return Me.currentContext=Me.contexts[e],u.ctx=Pe=Me.currentContext&&Me.currentContext.GLctx,!(e&&!Pe)},getContext:function(e){return Me.contexts[e]},deleteContext:function(e){Me.currentContext===Me.contexts[e]&&(Me.currentContext=null),"object"==typeof Te&&Te.removeAllHandlersOnTarget(Me.contexts[e].GLctx.canvas),Me.contexts[e]&&Me.contexts[e].GLctx.canvas&&(Me.contexts[e].GLctx.canvas.GLctxObject=void 0),je(Me.contexts[e].handle),Me.contexts[e]=null},initExtensions:function(e){if(e||(e=Me.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;(function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})})(t),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),function(e){e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw")}(t),(t.getSupportedExtensions()||[]).forEach((function(e){!e.includes("lose_context")&&!e.includes("debug")&&t.getExtension(e)}))}}},$e=["default","low-power","high-performance"],Fe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Fe.buffers[e];0===t||10===t?((1===e?C:E)(j(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Fe.varargs+=4,a()[Fe.varargs-4>>2]},getStr:function(e){return H(e)},get64:function(e,t){return e}};function Oe(e){return v?Ie(3,1,e):0}function ze(e,t,n,r,a){if(v)return Ie(4,1,e,t,n,r,a)}function De(e,n,r,s){if(v)return Ie(5,1,e,n,r,s);for(var i=0,o=0;o<r;o++){var l=a()[n>>2],u=a()[n+4>>2];n+=8;for(var d=0;d<u;d++)Fe.printChar(e,t()[l+d]);i+=u}return a()[s>>2]=i,0}Ae.init();var Pe,Le,We,Be,Ue=[null,be,Re,Oe,ze,De],Ve={__clock_gettime:function(e,t){return function(e,t){var n;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return a()[He()>>2]=28,-1;n=xe()}return a()[t>>2]=n/1e3|0,a()[t+4>>2]=n%1e3*1e3*1e3|0,0}(e,t)},__emscripten_init_main_thread_js:function(e){Xe(e,!x,1,!b),Ae.threadInit()},__emscripten_thread_cleanup:function(e){v?postMessage({cmd:"cleanupThread",thread:e}):ge(e)},__pthread_create_js:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];if(v&&0===a.length)return Ze(687865856,e,t,n,r);var s={startRoutine:n,pthread_ptr:e,arg:r,transferList:a};return v?(s.cmd="spawnThread",postMessage(s,a),0):ke(s)},_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_notify_thread_queue:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(v)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Ae.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},abort:function(){ue("")},emscripten_check_blocking_allowed:function(){w||x||_("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_get_heap_max:function(){return 2147483648},emscripten_get_now:xe,emscripten_memcpy_big:function(e,n,r){t().copyWithin(e,n,n+r)},emscripten_num_logical_cores:function(){return w?Sl().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Se.length=t;for(var r=n>>3,a=0;a<t;a++)Se[a]=s()[r+a];return(e<0?he[-e-1]:Ue[e]).apply(null,Se)},emscripten_resize_heap:function(e){var n=t().length;if((e>>>=0)<=n)return!1;var r=2147483648;if(e>r)return!1;for(var a=1;a<=4;a*=2){var s=n*(1+.2/a);if(s=Math.min(s,e+100663296),Ne(Math.min(r,K(Math.max(e,s),65536))))return!0}return!1},emscripten_set_canvas_element_size:function(e,t,n){return Ee(e)?_e(e,t,n):Re(e,t,n)},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},emscripten_webgl_create_context:function(e,t){return function(e,t){var n=t>>2,r=a()[n+6],s={alpha:!!a()[n+0],depth:!!a()[n+1],stencil:!!a()[n+2],antialias:!!a()[n+3],premultipliedAlpha:!!a()[n+4],preserveDrawingBuffer:!!a()[n+5],powerPreference:$e[r],failIfMajorPerformanceCaveat:!!a()[n+7],majorVersion:a()[n+8],minorVersion:a()[n+9],enableExtensionsByDefault:a()[n+10],explicitSwapControl:a()[n+11],proxyContextToMainThread:a()[n+12],renderViaOffscreenBackBuffer:a()[n+13]},i=Ee(e);return!i||s.explicitSwapControl?0:Me.createContext(i,s)}(e,t)},exit:ye,fd_close:Oe,fd_seek:ze,fd_write:De,memory:M||u.wasmMemory,setTempRet0:function(e){}},Ge=(function(){var e={env:Ve,wasi_snapshot_preview1:Ve};function t(e,t){var n=e.exports;if(u.asm=n,function(e){Ae.tlsInitFunctions.push(e)}(u.asm.emscripten_tls_init),Y=u.asm.__indirect_function_table,function(e){Q.unshift(e)}(u.asm.__wasm_call_ctors),$=t,!v){var r=Ae.unusedWorkers.length;Ae.unusedWorkers.forEach((function(e){Ae.loadWasmModuleToWorker(e,(function(){--r||function(){if(ie--,u.monitorRunDependencies&&u.monitorRunDependencies(ie),0==ie&&(null!==oe&&(clearInterval(oe),oe=null),le)){var e=le;le=null,e()}}()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!T&&(b||x)){if("function"==typeof fetch&&!ce(se))return fetch(se,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+se+"'";return e.arrayBuffer()})).catch((function(){return pe(se)}));if(c)return new Promise((function(e,t){c(se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe(se)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),ue(e)}))}if(v||(ie++,u.monitorRunDependencies&&u.monitorRunDependencies(ie)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}(T||"function"!=typeof WebAssembly.instantiateStreaming||de(se)||ce(se)||"function"!=typeof fetch?r(n):fetch(se,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(Ge=u._malloc=u.asm.malloc).apply(null,arguments)}),je=u._free=function(){return(je=u._free=u.asm.free).apply(null,arguments)},He=(u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.emscripten_tls_init).apply(null,arguments)},u.___errno_location=function(){return(He=u.___errno_location=u.asm.__errno_location).apply(null,arguments)}),qe=u._pthread_self=function(){return(qe=u._pthread_self=u.asm.pthread_self).apply(null,arguments)},Ke=u._emscripten_main_thread_process_queued_calls=function(){return(Ke=u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},Xe=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u.__emscripten_thread_init=function(){return(Xe=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),Ze=(u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_2=function(){return(u._emscripten_sync_run_in_main_thread_2=u.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},u._emscripten_sync_run_in_main_thread_4=function(){return(Ze=u._emscripten_sync_run_in_main_thread_4=u.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)}),Ye=u._emscripten_run_in_main_runtime_thread_js=function(){return(Ye=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},Je=u._emscripten_dispatch_to_thread_=function(){return(Je=u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},Qe=u.__emscripten_thread_free_data=function(){return(Qe=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},et=(u.__emscripten_thread_exit=function(){return(u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},u._memalign=function(){return(u._memalign=u.asm.memalign).apply(null,arguments)},u._emscripten_stack_set_limits=function(){return(et=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)}),tt=u.stackSave=function(){return(tt=u.stackSave=u.asm.stackSave).apply(null,arguments)},nt=u.stackRestore=function(){return(nt=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},rt=u.stackAlloc=function(){return(rt=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)},at=(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.__emscripten_allow_main_runtime_queued_calls=21456);function st(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function it(e){if(e=e||y,!(ie>0)){if(v)return i(u),ae(),void postMessage({cmd:"loaded"});(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),J.unshift(e);var e;fe(J)})(),ie>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){Le||(Le=!0,u.calledRun=!0,!O&&(ae(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!v){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),te.unshift(e);fe(te)}var e}()))}}if(u.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?z(e):function(){return D(e,t,n,arguments)}},u.keepRuntimeAlive=re,u.PThread=Ae,u.PThread=Ae,u.wasmMemory=M,u.ExitStatus=st,le=function e(){Le||it(),Le||(le=e)},u.run=it,u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(it(),l&&(We={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Be=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Be=e}if(We){var ot=Be._dispose;Be._dispose=function(){ot(),We.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),We.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)}}),Tl=sl({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||Lo,function(e){var t,n,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,r){t=e,n=r})),"undefined"!=typeof process&&process.listeners&&(a={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,d,c,p=Object.assign({},s),h=[],f="object"==typeof window,m="function"==typeof importScripts,g="";"object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node?(g=m?vl().dirname(g)+"/":"//",c=()=>{d||(u=wl(),d=vl())},i=function(e,t){return c(),e=d.normalize(e),u.readFileSync(e,t?void 0:"utf8")},l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{c(),e=d.normalize(e),u.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof re))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(f||m)&&(m?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),r&&(g=r),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var y,A=s.print||console.log.bind(console),b=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&(h=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(y=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&B("no native wasm support detected");var x,w=!1;function v(e){return s["_"+e]}var k,I,S,N,T="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function C(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&T)return T.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function E(e,t){return e?C(S,e,t):""}function _(e,t){return e%t>0&&(e+=t-e%t),e}function R(e){k=e,s.HEAP8=I=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=N=new Int32Array(e),s.HEAPU8=S=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le"),s.INITIAL_MEMORY;var M,$,F,O=[],z=[],D=[],P=0,L=null,W=null;function B(e){s.onAbort&&s.onAbort(e),b(e="Aborted("+e+")"),w=!0,e+=". Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw n(t),t}function U(e){return e.startsWith("data:application/octet-stream;base64,")}function V(e){return e.startsWith("file://")}function G(e){try{if(e==$&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){B(e)}}function j(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?q(n)():q(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}s.preloadedImages={},s.preloadedAudios={},U($="tfjs-backend-wasm.wasm")||(F=$,$=s.locateFile?s.locateFile(F,g):g+F);var H=[];function q(e){var t=H[e];return t||(e>=H.length&&(H.length=e+1),H[e]=t=M.get(e)),t}function K(e){try{return x.grow(e-k.byteLength+65535>>>16),R(x.buffer),1}catch(e){}}var X,Z,Y,J={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=J.buffers[e];0===t||10===t?((1===e?A:b)(C(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return J.varargs+=4,N[J.varargs-4>>2]},getStr:function(e){return E(e)},get64:function(e,t){return e}},Q={abort:function(){B("")},emscripten_memcpy_big:function(e,t,n){S.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t=S.length,n=2147483648;if((e>>>=0)>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),K(Math.min(n,_(Math.max(e,a),65536))))return!0}return!1},fd_close:function(e){return 0},fd_seek:function(e,t,n,r,a){},fd_write:function(e,t,n,r){for(var a=0,s=0;s<n;s++){var i=N[t>>2],o=N[t+4>>2];t+=8;for(var l=0;l<o;l++)J.printChar(e,S[i+l]);a+=o}return N[r>>2]=a,0},setTempRet0:function(e){}},ee=(function(){var e={env:Q,wasi_snapshot_preview1:Q};function t(e,t){var n=e.exports;s.asm=n,R((x=s.asm.memory).buffer),M=s.asm.__indirect_function_table,function(e){z.unshift(e)}(s.asm.__wasm_call_ctors),function(){if(P--,s.monitorRunDependencies&&s.monitorRunDependencies(P),0==P&&(null!==L&&(clearInterval(L),L=null),W)){var e=W;W=null,e()}}()}function r(e){t(e.instance)}function a(t){return function(){if(!y&&(f||m)){if("function"==typeof fetch&&!V($))return fetch($,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+$+"'";return e.arrayBuffer()})).catch((function(){return G($)}));if(o)return new Promise((function(e,t){o($,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return G($)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){b("failed to asynchronously prepare wasm: "+e),B(e)}))}if(P++,s.monitorRunDependencies&&s.monitorRunDependencies(P),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return b("Module.instantiateWasm callback failed with error: "+e),!1}(y||"function"!=typeof WebAssembly.instantiateStreaming||U($)||V($)||"function"!=typeof fetch?a(r):fetch($,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(r,(function(e){return b("wasm streaming compile failed: "+e),b("falling back to ArrayBuffer instantiation"),a(r)}))}))).catch(n)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s._emscripten_main_thread_process_queued_calls=function(){return(s._emscripten_main_thread_process_queued_calls=s.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},s.stackSave=function(){return(ee=s.stackSave=s.asm.stackSave).apply(null,arguments)}),te=s.stackRestore=function(){return(te=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},ne=s.stackAlloc=function(){return(ne=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function re(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ae(e){function n(){X||(X=!0,s.calledRun=!0,!w&&(j(z),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),D.unshift(e);var e;j(D)}()))}e=e||h,P>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),O.unshift(e);var e;j(O)}(),P>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?v(e):function(){return function(e,t,n,r){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,S,t,n)}(e,t=ne(n),n)}return t},array:function(e){var t=ne(e.length);return function(e,t){I.set(e,t)}(e,t),t}},s=v(e),i=[],o=0;if(r)for(var l=0;l<r.length;l++){var u=a[n[l]];u?(0===o&&(o=ee()),i[l]=u(r[l])):i[l]=r[l]}var d,c=s.apply(null,i);return d=c,0!==o&&te(o),c=function(e){return"string"===t?E(e):"boolean"===t?Boolean(e):e}(d),c}(e,t,n,arguments)}},W=function e(){X||ae(),X||(W=e)},s.run=ae,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(ae(),a&&(Z={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!a.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!a.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Y=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Y=WasmBackendModuleThreadedSimd}if(Z){var se=Y._dispose;Y._dispose=function(){se(),Z.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Z.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&n.amdO?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModule=a)}}),Cl=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},El=class{refCount(e){return _l("refCount")}incRef(e){return _l("incRef")}timerAvailable(){return!0}time(e){return _l("time")}read(e){return _l("read")}readSync(e){return _l("readSync")}readToGPU(e,t){return _l("readToGPU")}numDataIds(){return _l("numDataIds")}disposeData(e,t){return _l("disposeData")}write(e,t,n){return _l("write")}move(e,t,n,r,a){return _l("move")}memory(){return _l("memory")}floatPrecision(){return _l("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return _l("dispose")}};function _l(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Rl(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Ol(e,t,n)}function Ml(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Ol(e,n,r),Ol(t,n,r)}function $l(e,t,n){return Math.max(e,Math.min(t,n))}function Fl(e){return e%2==0?e:e+1}function Ol(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function zl(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Dl(e,t){let n=Math.random();return t*n+(1-n)*e}function Pl(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function Ll(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Wl(e,t,n=""){Ll(jl(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Bl(e){Ll(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Ul(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||iu(e)&&!n)for(let r=0;r<e.length;++r)Ul(e[r],t,n);else t.push(e);return t}function Vl(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function Gl(e){return 0===e.length}function jl(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Hl(e){return e%1==0}function ql(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function Kl(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Xl(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Rl(t),t}function Zl(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Yl(e,t=e=>0,n){return new Promise(((r,a)=>{let s=0,i=()=>{if(e())return void r();s++;let o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function Jl(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function Ql(e,t){let n=t.length;return Ll((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Ll(e.every((e=>Hl(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function eu(e,t){let n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:Ql(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function tu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function nu(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ru(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function au(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function su(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function iu(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function ou(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function lu(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function uu(e){return"string"==typeof e||e instanceof String}function du(e){return"boolean"==typeof e}function cu(e){return"number"==typeof e}function pu(e){return Array.isArray(e)?pu(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":cu(e)?"float32":uu(e)?"string":du(e)?"bool":"float32"}function hu(e){return!!(e&&e.constructor&&e.call&&e.apply)}function fu(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function mu(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function gu(e,t,n,r=!1){let a=new Array;if(1===t.length){let s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=gu(e+t*o,i,n,r)}return a}function yu(e,t,n=!1){if(0===e.length)return t[0];let r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return gu(0,e,t,n)}function Au(e,t){let n=bu(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function bu(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function xu(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return yu(e,new Float32Array(n));if("int32"===t)return yu(e,new Int32Array(n));if("bool"===t)return yu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function wu(e){e.forEach((t=>{Ll(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function vu(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ku(e,t,n){if(0===t)return[];if(1===t)return[e];let r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Iu(e){return e&&e.then&&"function"==typeof e.then}var Su="tfjsflags",Nu=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Tu,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Cu().getBool("IS_TEST")||Cu().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Cu().getBool("IS_TEST")||Cu().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Iu(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Su in e&&e[Su].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}};function Tu(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Cu(){return _u}var Eu,_u=null;function Ru(){if(null==Eu){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Eu=e}return Eu}function Mu(e,t){let n=function(){let e=Ru();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var $u="Abs",Fu="Acos",Ou="Acosh",zu="Add",Du="AddN",Pu="All",Lu="Any",Wu="ArgMax",Bu="ArgMin",Uu="Asin",Vu="Asinh",Gu="Atan",ju="Atanh",Hu="Atan2",qu="AvgPool",Ku="AvgPoolGrad",Xu="AvgPool3D",Zu="AvgPool3DGrad",Yu="BatchMatMul",Ju="BatchToSpaceND",Qu="Bincount",ed="BroadcastTo",td="BroadcastArgs",nd="Cast",rd="Ceil",ad="ClipByValue",sd="Complex",id="ComplexAbs",od="Concat",ld="Conv2D",ud="Conv2DBackpropFilter",dd="Conv2DBackpropInput",cd="Conv3D",pd="Conv3DBackpropFilterV2",hd="Conv3DBackpropInputV2",fd="Cos",md="Cosh",gd="Cumprod",yd="Cumsum",Ad="CropAndResize",bd="DenseBincount",xd="DepthToSpace",wd="DepthwiseConv2dNative",vd="DepthwiseConv2dNativeBackpropFilter",kd="DepthwiseConv2dNativeBackpropInput",Id="Diag",Sd="Dilation2D",Nd="Dilation2DBackpropInput",Td="Dilation2DBackpropFilter",Cd="RealDiv",Ed="Einsum",_d="Elu",Rd="EluGrad",Md="Erf",$d="Equal",Fd="Exp",Od="ExpandDims",zd="Expm1",Dd="FFT",Pd="Fill",Ld="FlipLeftRight",Wd="Floor",Bd="FloorDiv",Ud="FusedBatchNorm",Vd="GatherV2",Gd="GatherNd",jd="Greater",Hd="GreaterEqual",qd="Identity",Kd="IFFT",Xd="Imag",Zd="IsFinite",Yd="IsInf",Jd="IsNan",Qd="LeakyRelu",ec="Less",tc="LessEqual",nc="LinSpace",rc="Log",ac="Log1p",sc="LogicalAnd",ic="LogicalNot",oc="LogicalOr",lc="LogSoftmax",uc="LRN",dc="LRNGrad",cc="Max",pc="Maximum",hc="MaxPool",fc="MaxPoolGrad",mc="MaxPool3D",gc="MaxPool3DGrad",yc="MaxPoolWithArgmax",Ac="Mean",bc="Min",xc="Minimum",wc="MirrorPad",vc="Mod",kc="Multinomial",Ic="Multiply",Sc="Neg",Nc="NotEqual",Tc="NonMaxSuppressionV3",Cc="NonMaxSuppressionV4",Ec="NonMaxSuppressionV5",_c="OnesLike",Rc="OneHot",Mc="Pack",$c="PadV2",Fc="Pool",Oc="Pow",zc="Prelu",Dc="Prod",Pc="Range",Lc="Real",Wc="Reciprocal",Bc="Relu",Uc="Reshape",Vc="ResizeNearestNeighbor",Gc="ResizeNearestNeighborGrad",jc="ResizeBilinear",Hc="ResizeBilinearGrad",qc="Relu6",Kc="Reverse",Xc="Round",Zc="Rsqrt",Yc="ScatterNd",Jc="Select",Qc="Selu",ep="Slice",tp="Sin",np="Sinh",rp="Sign",ap="Sigmoid",sp="Softplus",ip="Sqrt",op="Sum",lp="SpaceToBatchND",up="SplitV",dp="Softmax",cp="SparseFillEmptyRows",pp="SparseReshape",hp="SparseSegmentMean",fp="SparseSegmentSum",mp="SparseToDense",gp="SquaredDifference",yp="Square",Ap="StridedSlice",bp="StringNGrams",xp="StringSplit",wp="StringToHashBucketFast",vp="Sub",kp="Tan",Ip="Tanh",Sp="Tile",Np="TopK",Tp="Transform",Cp="Transpose",Ep="Unique",_p="Unpack",Rp="UnsortedSegmentSum",Mp="ZerosLike",$p="Step",Fp="FromPixels",Op="RotateWithOffset",zp="_FusedMatMul",Dp="FusedConv2D",Pp="FusedDepthwiseConv2D";function Lp(...e){Cu().getBool("IS_TEST")||Cu().getBool("PROD")||console.warn(...e)}function Wp(...e){Cu().getBool("IS_TEST")||Cu().getBool("PROD")||console.log(...e)}var Bp=Mu("kernelRegistry",(()=>new Map)),Up=Mu("gradRegistry",(()=>new Map));function Vp(e,t){let n=Yp(e,t);return Bp.get(n)}function Gp(e){return Up.get(e)}function jp(e){let t=Bp.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Hp(e){let{kernelName:t,backendName:n}=e,r=Yp(t,n);Bp.has(r)&&Lp(`The kernel '${t}' for backend '${n}' is already registered`),Bp.set(r,e)}function qp(e){let{kernelName:t}=e;Up.has(t)&&Cu().getBool("DEBUG")&&Lp(`Overriding the gradient for '${t}'`),Up.set(t,e)}function Kp(e,t){let n=Yp(e,t);if(!Bp.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Bp.delete(n)}function Xp(e){if(!Up.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Up.delete(e)}function Zp(e,t){jp(e).forEach((e=>{Hp(Object.assign({},e,{backendName:t}))}))}function Yp(e,t){return`${t}_${e}`}var Jp={};il(Jp,{arraysEqual:()=>jl,assert:()=>Ll,assertNonNegativeIntegerDimensions:()=>wu,assertNonNull:()=>Bl,assertShapesMatch:()=>Wl,bytesFromStringArray:()=>lu,bytesPerElement:()=>ou,checkConversionForErrors:()=>ru,clamp:()=>$l,computeStrides:()=>mu,createScalarValue:()=>hh,createShuffledIndices:()=>Xl,decodeString:()=>Ah,distSquared:()=>Pl,encodeString:()=>yh,fetch:()=>gh,fingerPrint64:()=>ph,flatten:()=>Ul,getArrayFromDType:()=>nu,getTypedArrayFromDType:()=>tu,hasEncodingLoss:()=>su,hexToLong:()=>th,indexToLoc:()=>ku,inferDtype:()=>pu,inferFromImplicitShape:()=>Jl,isBoolean:()=>du,isFunction:()=>hu,isInt:()=>Hl,isNumber:()=>cu,isPromise:()=>Iu,isScalarShape:()=>Gl,isString:()=>uu,isTypedArray:()=>iu,isValidDtype:()=>au,locToIndex:()=>vu,makeOnesTypedArray:()=>Au,makeZerosNestedTypedArray:()=>xu,makeZerosTypedArray:()=>bu,nearestDivisor:()=>fu,nearestLargerEven:()=>Fl,now:()=>mh,parseAxisParam:()=>Ql,randUniform:()=>Dl,repeatedTry:()=>Yl,rightPad:()=>Zl,shuffle:()=>Rl,shuffleCombo:()=>Ml,sizeFromShape:()=>Vl,sizeToSquarishShape:()=>Kl,squeezeShape:()=>eu,sum:()=>zl,swap:()=>Ol,tanh:()=>ql,toNestedArray:()=>yu,toTypedArray:()=>fh});var Qp=ol(ll()),eh=Qp.default||Qp;function th(e){return eh.fromString(e,!0,16)}var nh=th("c3a5c85c97cb3127"),rh=th("b492b66fbe98f273"),ah=th("9ae16a3b2f90404f");function sh(e){return e.xor(e.shru(47))}function ih(e,t,n){let r=e.slice(t,t+n);return eh.fromBytes(Array.from(r),!0,!0)}function oh(e,t){return ih(e,t,8)}function lh(e,t){return ih(e,t,4)}function uh(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function dh(e,t,n=th("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function ch(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=uh(s.add(a).add(r),21);let i=a;return a=(a=a.add(t)).add(n),s=s.add(uh(a,44)),[a.add(r),s.add(i)]}(oh(e,t),oh(e,t+8),oh(e,t+16),oh(e,t+24),n,r)}function ph(e,t=e.length){let n=eh.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let n=ah.add(2*t),r=oh(e,0).add(ah),a=oh(e,t-8);return dh(uh(a,37).mul(n).add(r),uh(r,25).add(a).mul(n),n)}if(t>=4){let n=ah.add(2*t);return dh(lh(e,0).shl(3).add(t),lh(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return sh(ah.mul(n).xor(nh.mul(r))).mul(ah)}return ah}(e,t):function(e,t=e.length){let n=ah.add(2*t),r=oh(e,0).mul(rh),a=oh(e,8),s=oh(e,t-8).mul(n),i=oh(e,t-16).mul(ah);return dh(uh(r.add(a),43).add(uh(s,30)).add(i),r.add(uh(a.add(ah),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){let n=ah.add(2*t),r=oh(e,0).mul(ah),a=oh(e,8),s=oh(e,t-8).mul(n),i=oh(e,t-16).mul(ah),o=uh(r.add(a),43).add(uh(s,30)).add(i),l=dh(o,r.add(uh(a.add(ah),18)).add(s),n),u=oh(e,16).mul(n),d=oh(e,24),c=o.add(oh(e,t-32)).mul(n),p=l.add(oh(e,t-24)).mul(n);return dh(uh(u.add(d),43).add(uh(c,30)).add(p),u.add(uh(d.add(r),18)).add(c),n)}(e,t);let r=n,a=n.mul(rh).add(113),s=sh(a.mul(ah).add(113)).mul(ah),i=[eh.UZERO,eh.UZERO],o=[eh.UZERO,eh.UZERO];r=r.mul(ah).add(oh(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{r=uh(r.add(a).add(i[0]).add(oh(e,l+8)),37).mul(rh),a=uh(a.add(i[1]).add(oh(e,l+48)),42).mul(rh),r=r.xor(o[1]),a=a.add(i[0]).add(oh(e,l+40)),s=uh(s.add(o[0]),33).mul(rh),i=ch(e,l,i[1].mul(rh),r.add(o[0])),o=ch(e,l+32,s.add(o[1]),a.add(oh(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);let c=rh.add(s.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=uh(r.add(a).add(i[0]).add(oh(e,l+8)),37).mul(c),a=uh(a.add(i[1]).add(oh(e,l+48)),42).mul(c),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(oh(e,l+40))),s=uh(s.add(o[0]),33).mul(c),i=ch(e,l,i[1].mul(c),r.add(o[0])),o=ch(e,l+32,s.add(o[1]),a.add(oh(e,l+16))),[s,r]=[r,s],dh(dh(i[0],o[0],c).add(sh(a).mul(nh)).add(s),dh(i[1],o[1],c).add(r),c)}function hh(e,t){return"string"===t?yh(e):fh([e],t)}function fh(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Ul(e)),Cu().getBool("DEBUG")&&ru(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function mh(){return Cu().platform.now()}function gh(e,t){return Cu().platform.fetch(e,t)}function yh(e,t="utf-8"){return t=t||"utf-8",Cu().platform.encode(e,t)}function Ah(e,t="utf-8"){return t=t||"utf-8",Cu().platform.decode(e,t)}var bh=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new wh)}profileKernel(e,t,n){let r,a,s=()=>{r=n()},i=mh();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(let e of r)e.dataSync();a=Promise.resolve({kernelMs:mh()-i})}if(Cu().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){let n=r[t];n.data().then((t=>{xh(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}};function xh(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var wh=class{logKernelProfile(e,t,n,r,a,s){let i="number"==typeof r?Zl(`${r}ms`,9):r.error,o=Zl(e,25),l=t.rank,u=t.size,d=Zl(t.shape.toString(),14),c="";for(let e in a){let n=a[e];if(null!=n){let r=n.shape||t.shape,a=r.length;c+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${d}\t%c${u}\t%c${c}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function vh(e,t,n,r){let a=mu(t),s=function(e,t,n,r){let a=Vl(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?Nh(e):e;if(o>1)for(let e=0;e<a/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],kh(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Sh(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function kh(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:uu(e)?`'${e}'`:"bool"===n?Ih(e):parseFloat(e.toFixed(7)).toString(),Zl(r,t)}function Ih(e){return 0===e?"false":"true"}function Sh(e,t,n,r,a,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[kh(Nh(e)[0],0,n)]:"bool"===n?[Ih(e[0])]:[e[0].toString()];if(1===l){if(o>20){let t=3*i,r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Nh(r),s=Nh(s)),["["+r.map(((e,t)=>kh(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>kh(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Nh(e):Array.from(e)).map(((e,t)=>kh(e,a[t],n))).join(", ")+"]"]}let u=t.slice(1),d=r.slice(1),c=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){let r=t*c,s=r+c;p.push(...Sh(e.slice(r,s),u,n,d,a,!1))}p.push("...");for(let t=o-3;t<o;t++){let r=t*c,s=r+c;p.push(...Sh(e.slice(r,s),u,n,d,a,t===o-1))}}else for(let t=0;t<o;t++){let r=t*c,s=r+c;p.push(...Sh(e.slice(r,s),u,n,d,a,t===o-1))}let h=2===l?",":"";p[0]="["+p[0]+h;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+h;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Nh(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Th=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Vl(e),null!=n){let e=n.length;Ll(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||nu(t,this.size),this.strides=mu(e)}set(e,...t){0===t.length&&(t=[0]),Ll(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ch().makeTensor(this.values,this.shape,this.dtype)}},Ch=null,Eh=null,_h=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Vl(e),this.strides=mu(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Eh.buffer(this.shape,this.dtype,e)}bufferSync(){return Eh.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return yu(this.shape,e,"complex64"===this.dtype)}arraySync(){return yu(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Ch().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Ah(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ch().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Ch().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Ah(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Ch().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ch().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Eh.print(this,e)}clone(){return this.throwIfDisposed(),Eh.clone(this)}toString(e=!1){return vh(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Eh.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ch().makeVariable(this,e,t,n)}};Object.defineProperty(_h,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Mu("Tensor",(()=>_h));var Rh=class extends _h{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!jl(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ch().disposeTensor(this),this.dataId=e.dataId,Ch().incRef(this,null)}dispose(){Ch().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Rh,Symbol.hasInstance,{value:e=>e instanceof _h&&null!=e.assign&&e.assign instanceof Function});var Mh={};il(Mh,{assertTypesMatch:()=>Vh,getTensorsInContainer:()=>jh,isTensorInList:()=>Gh,makeTypesMatch:()=>Uh});var $h,Fh=(($h=Fh||{}).R0="R0",$h.R1="R1",$h.R2="R2",$h.R3="R3",$h.R4="R4",$h.R5="R5",$h.R6="R6",$h),Oh=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(Oh||{}),zh=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(zh||{}),Dh=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Dh||{}),Ph=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Ph||{}),Lh={float32:Dh,int32:Oh,bool:zh,complex64:Ph};function Wh(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Lh[e][t]}function Bh(e){return Wh(e,"int32")}function Uh(e,t){if(e.dtype===t.dtype)return[e,t];let n=Wh(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Vh(e,t){Ll(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function Gh(e,t){return t.some((t=>t.id===e.id))}function jh(e){let t=[];return Hh(e,t,new Set),t}function Hh(e,t,n){if(null==e)return;if(e instanceof _h)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let r=e;for(let e in r){let a=r[e];n.has(a)||(n.add(a),Hh(a,t,n))}}function qh(e){return null!=e.kernelName}var Kh=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Xh=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kh}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Lp(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new bh(this.backendInstance),!0}setupRegisteredKernels(){jp(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){jp(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof El||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Lp(`Initialization of backend ${e} failed`),Lp(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Lp(`Initialization of backend ${e} failed`),Lp(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Xh.nextTensorId++}nextVariableId(){return Xh.nextVariableId++}clone(e){let t=Jh.runKernel(qd,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e};return Jh.runKernel(nd,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Vp(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,r=[],a=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=qh(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(qh(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=Vp(t,this.backendName);Ll(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>{if(null!=e.rank)return e;let{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(a){let e=this.getTensorsForGradient(t,s,u);r=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!a||(r=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:c}=e,p=qh(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),a&&this.addTapeNode(l,d,t,p,r,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let r=Gp(e);if(null!=r){let e,a=r.inputsToSave||[],s=r.outputsToSave||[];r.saveAllInputs?(Ll(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=a.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&uu(e[0])&&(a=e.map((e=>yh(e))));let s=r.write(a,t,n),i=new _h(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){let e=this.state.tensorInfo.get(s),t=lu(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){let a=new _h(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));let a=new Rh(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ou(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Rh||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*ou(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Gp(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],r=bu(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=jh(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===r.id&&this.track(e)}))}gradients(e,t,n,r=!1){if(Ll(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Ll(a instanceof _h,(()=>"The result y returned by f() must be a tensor."));let s=function(e,t,n){let r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in r)s[r[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(a[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let a=n.inputs[t];r[a.id]&&(e[t]=a)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[a.id]=null==n?function(e){let t=Au(Vl(e),"float32");return Jh.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let i=s.inputs[t];if(!jl(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{let t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Qh);let r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return Ll(hu(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{Ll(t.every((e=>e instanceof _h)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),Ll(n.value instanceof _h,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Ll(hu(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{let a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];Ll(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Ll(s.every((e=>e instanceof _h)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=mh(),n=await this.backend.time(e);return n.wallMs=mh()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kh;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},Zh=Xh;function Yh(){let e=Ru();if(null==e._tfengine){let t=new Nu(e);e._tfengine=new Zh(t)}return function(e){_u=e}(e._tfengine.ENV),function(e){Ch=e}((()=>e._tfengine)),e._tfengine}Zh.nextTensorId=0,Zh.nextVariableId=0;var Jh=Yh();function Qh(e,t){let n={a:e,b:t};return Jh.runKernel(zu,n)}var ef,tf={};function nf(e){ef=e}function rf(e){if(void 0!==ef)return ef;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function af(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}il(tf,{isBrowser:()=>af,isMobile:()=>rf,mockIsMobile:()=>nf});var sf=Cu();function of(e,t){let n=e;if(iu(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||iu(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Cu().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&lf(e,r,[]),r}function lf(e,t,n){if(n=n||[],!Array.isArray(e)&&!iu(e))return void Ll(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Ll(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Ll(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let r=t.slice(1);for(let t=0;t<e.length;++t)lf(e[t],r,n.concat(t))}function uf(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function df(e,t,n,r="numeric"){if(e instanceof _h)return uf(r,e.dtype,t,n),e;let a=pu(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),uf(r,a,t,n),null==e||!iu(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let s=of(e,a);!iu(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==a?fh(e,a):Ul(e,[],!0);return Jh.makeTensor(i,s,a)}function cf(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>df(e,`${t}[${a}]`,n,r)))}sf.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),sf.registerFlag("IS_BROWSER",(()=>af())),sf.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),sf.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),sf.registerFlag("PROD",(()=>!1)),sf.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>sf.getBool("DEBUG"))),sf.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),sf.registerFlag("IS_TEST",(()=>!1)),sf.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),sf.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),sf.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var pf="__op";function hf(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=pf;let a=(...e)=>{Jh.startScope(n);try{let t=r(...e);return Iu(t)&&console.error("Cannot return a Promise inside of tidy."),Jh.endScope(t),t}catch(e){throw Jh.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}var ff=hf({complex_:function(e,t){let n=df(e,"real","complex"),r=df(t,"imag","complex");Wl(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return Jh.runKernel(sd,a)}});function mf(e,t,n,r){if(null==r&&(r=pu(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!iu(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){wu(t);let e=Vl(t),r=Vl(n);Ll(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){let r=n[e],a=e!==n.length-1||r!==Vl(t.slice(e));Ll(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!iu(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==r?fh(e,r):Ul(e,[],!0),Jh.makeTensor(e,t,r)}function gf(e,t,n){return mf(e,t,of(e,n),n)}var yf={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Af(e,t){let n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n),a=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:xf(await Promise.all(r)),specs:n}}function bf(e,t){let n,r={},a=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=Vl(l);if("quantization"in s){let r=s.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${s.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}let l=yf[r.dtype],d=e.slice(a,a+u*l),c="uint8"===r.dtype?new Uint8Array(d):new Uint16Array(d);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(c.length);for(let e=0;e<c.length;e++){let n=c[e];t[e]=n*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===n&&(n=Cf()),t=n(c)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(c.length);for(let e=0;e<c.length;e++){let n=c[e];t[e]=Math.round(n*r.scale+r.min)}}a+=u*l}else if("string"===o){let n=Vl(s.shape);t=[];for(let r=0;r<n;r++){let n=new Uint32Array(e.slice(a,a+4))[0];a+=4;let r=new Uint8Array(e.slice(a,a+n));t.push(r),a+=n}}else{let n=yf[o],s=e.slice(a,a+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],n[r]=t[2*r+1];let a=gf(e,l,"float32"),o=gf(n,l,"float32");r[i]=ff(a,o),a.dispose(),o.dispose()}}a+=u*n}"complex64"!==o&&(r[i]=gf(t,l,o))}return r}function xf(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let r=new Uint8Array(t),a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var wf="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function vf(e){return wf?Buffer.byteLength(e):new Blob([e]).size}function kf(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function If(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Sf(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Nf(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){let[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Tf(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:vf(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:vf(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Cf(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){let i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}var Ef=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ef.instance&&(Ef.instance=new Ef),Ef.instance}static registerSaveRouter(e){Ef.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ef.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ef.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ef.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return("load"===t?Ef.getInstance().loadRouters:Ef.getInstance().saveRouters).forEach((t=>{let a=t(e,n);null!==a&&r.push(a)})),r}},_f=e=>Ef.registerSaveRouter(e),Rf=e=>Ef.registerLoadRouter(e),Mf=e=>Ef.getSaveHandlers(e),$f=(e,t)=>Ef.getLoadHandlers(e,t),Ff="tensorflowjs",Of="models_store",zf="model_info_store";function Df(){if(!Cu().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Pf(e){let t=e.result;t.createObjectStore(Of,{keyPath:"modelPath"}),t.createObjectStore(zf,{keyPath:"modelPath"})}var Lf=class{constructor(e){if(this.indexedDB=Df(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let r=this.indexedDB.open(Ff,1);r.onupgradeneeded=()=>Pf(r),r.onsuccess=()=>{let a=r.result;if(null==t){let t=a.transaction(Of,"readonly"),r=t.objectStore(Of).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{let r,s=Tf(t),i=a.transaction(zf,"readwrite"),o=i.objectStore(zf),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{r=a.transaction(Of,"readwrite");let l=r.objectStore(Of).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(zf);let t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},l.onerror=e=>(a.close(),n(l.error)),i.oncomplete=()=>{null==r?a.close():r.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}};Lf.URL_SCHEME="indexeddb://";var Wf=e=>Cu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Lf.URL_SCHEME)?function(e){return new Lf(e)}(e.slice(Lf.URL_SCHEME.length)):null;Ef.registerSaveRouter(Wf),Ef.registerLoadRouter(Wf);var Bf="/",Uf="tensorflowjs_models",Vf="info",Gf="model_topology",jf="weight_specs",Hf="weight_data",qf="model_metadata";function Kf(e){return{info:[Uf,e,Vf].join(Bf),topology:[Uf,e,Gf].join(Bf),weightSpecs:[Uf,e,jf].join(Bf),weightData:[Uf,e,Hf].join(Bf),modelMetadata:[Uf,e,qf].join(Bf)}}function Xf(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function Zf(e){let t=e.split(Bf);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Bf)}var Yf=class{constructor(e){if(!Cu().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Kf(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Tf(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(wf)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Xf(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(wf){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}};Yf.URL_SCHEME="localstorage://";var Jf=e=>Cu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Yf.URL_SCHEME)?function(e){return new Yf(e)}(e.slice(Yf.URL_SCHEME.length)):null;Ef.registerSaveRouter(Jf),Ef.registerLoadRouter(Jf);var Qf="://",em=class{constructor(){this.managers={}}static getInstance(){return null==em.instance&&(em.instance=new em),em.instance}static registerManager(e,t){Ll(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Qf)&&(e=e.slice(0,e.indexOf(Qf))),Ll(e.length>0,(()=>"scheme must not be an empty string."));let n=em.getInstance();Ll(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function tm(e){if(-1===e.indexOf(Qf))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${em.getSchemes().join(",")}`);return{scheme:e.split(Qf)[0],path:e.split(Qf)[1]}}async function nm(e,t,n=!1){Ll(e!==t,(()=>`Old path and new path are the same: '${e}'`));let r=Ef.getLoadHandlers(e);Ll(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Ll(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));let a=r[0],s=Ef.getSaveHandlers(t);Ll(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Ll(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));let i=s[0],o=tm(e).scheme,l=tm(e).path,u=o===tm(e).scheme,d=await a.load();n&&u&&await em.getManager(o).removeModel(l);let c=await i.save(d);return n&&!u&&await em.getManager(o).removeModel(l),c.modelArtifactsInfo}async function rm(){let e=em.getSchemes(),t={};for(let n of e){let e=await em.getManager(n).listModels();for(let r in e)t[n+Qf+r]=e[r]}return t}async function am(e){let t=tm(e);return em.getManager(t.scheme).removeModel(t.path)}async function sm(e,t){return nm(e,t,!1)}async function im(e,t){return nm(e,t,!0)}if(Cu().get("IS_BROWSER")){Cu().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{em.registerManager(Yf.URL_SCHEME,new class{constructor(){Ll(Cu().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Ll("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=Uf+Bf,n=Bf+Vf;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[Zf(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){let t=Kf(e=function(e){return e.startsWith(Yf.URL_SCHEME)?e.slice(Yf.URL_SCHEME.length):e}(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Xf(t),n}})}catch($h){}try{em.registerManager(Lf.URL_SCHEME,new class{constructor(){this.indexedDB=Df()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(Ff,1);n.onupgradeneeded=()=>Pf(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(zf,"readonly"),s=a.objectStore(zf).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=function(e){return e.startsWith(Lf.URL_SCHEME)?e.slice(Lf.URL_SCHEME.length):e}(e),new Promise(((t,n)=>{let r=this.indexedDB.open(Ff,1);r.onupgradeneeded=()=>Pf(r),r.onsuccess=()=>{let a,s=r.result,i=s.transaction(zf,"readwrite"),o=i.objectStore(zf),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let r=o.delete(e),i=()=>{a=s.transaction(Of,"readwrite");let r=a.objectStore(Of).delete(e);r.onsuccess=()=>t(l.result.modelArtifactsInfo),r.onerror=e=>n(l.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}})}catch($h){}}var om;function lm(e,t="float32",n){return t=t||"float32",wu(e),new Th(e,t,n)}Cu().get("IS_NODE")&&!Cu().get("IS_BROWSER")&&Cu().setPlatform("node",new class{constructor(){this.util=dl(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Cu().global.fetch?Cu().global.fetch(e,t):(null==om&&(om=ul()),om(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var um=hf({cast_:function(e,t){let n=df(e,"x","cast");if(!au(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return Jh.runKernel(nd,r,a)}}),dm=hf({clone_:function(e){let t={x:df(e,"x","clone","string_or_numeric")};return Jh.runKernel(qd,t)}});function cm(e,t=!1){console.log(e.toString(t))}Yh(),function(e){Eh=e}({buffer:lm,cast:um,clone:dm,print:cm});var pm={};function hm(e){return new Promise((e=>setTimeout(e))).then(e)}il(pm,{browserFiles:()=>ym,browserHTTPRequest:()=>Nm,concatenateArrayBuffers:()=>kf,copyModel:()=>sm,decodeWeights:()=>bf,encodeWeights:()=>Af,fromMemory:()=>Em,getLoadHandlers:()=>$f,getModelArtifactsForJSON:()=>Nf,getModelArtifactsInfoForJSON:()=>Tf,getSaveHandlers:()=>Mf,http:()=>Sm,isHTTPScheme:()=>km,listModels:()=>rm,loadWeights:()=>xm,moveModel:()=>im,registerLoadRouter:()=>Rf,registerSaveRouter:()=>_f,removeModel:()=>am,weightsLoaderFactory:()=>wm,withSaveHandler:()=>_m});var fm=class{constructor(e){if(!Cu().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(fm.URL_SCHEME)&&(e=e.slice(fm.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=Sf(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await hm((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await hm((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Tf(e)}}}},mm=fm;mm.URL_SCHEME="downloads://";var gm=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});let s=Nf(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let r of e)t.push(...r.weights),n.push(...r.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,kf(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{let a=new FileReader;a.onload=e=>{let t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>If(e.name))),r={};for(let a of e)a.paths.forEach((e=>{let a=If(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}};function ym(e){return new gm(e)}function Am(e,t,n,r){var a;Ll(null!=(a=e)&&Array.isArray(a)&&a.length>0,(()=>"promises must be a none empty array")),function(e,t){Ll(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Ll(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Ll(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{let i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function bm(e,t){null==t&&(t={});let n=null==t.fetchFunc?Cu().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Am(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Am(a,t.onProgress,.5,1)}async function xm(e,t="",n,r){return wm((e=>bm(e,{requestInit:r})))(e,t,n)}function wm(e){return async(t,n="",r)=>{let a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=yf[l]*Vl(e.shape),d=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(d(),i[n]=!0)})):d(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let d=await e(u),c={},p=0;return l.forEach((e=>{let n=t[e].paths.length,r=0;for(let e=0;e<n;e++)r+=d[p+e].byteLength;let a=new ArrayBuffer(r),i=new Uint8Array(a),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(d[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=bf(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)c[e]=t[e]})),p+=n})),c}}Ef.registerSaveRouter((e=>Cu().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(mm.URL_SCHEME)?function(e="model"){return new mm(e)}(e.slice(mm.URL_SCHEME.length)):null));var vm=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Ll("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Cu().platform.fetch,Ll(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Ll(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Sf(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Tf(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Nf(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(let t of e)s.push(...t.weights);let i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,kf(await bm(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function km(e){return null!=e.match(vm.URL_SCHEME_REGEX)}vm.URL_SCHEME_REGEX=/^https?:\/\//;var Im=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>km(e))):km(e),n)return Sm(e,t)}return null};function Sm(e,t){return new vm(e,t)}function Nm(e,t){return Sm(e,t)}Ef.registerSaveRouter(Im),Ef.registerLoadRouter(Im);var Tm=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}},Cm=class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}};function Em(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Tm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Tm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Tm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function _m(e){return new Cm(e)}var Rm={};il(Rm,{confusionMatrix:()=>Om});var Mm=hf({matMul_:function(e,t,n=!1,r=!1){let a=df(e,"a","matMul"),s=df(t,"b","matMul");[a,s]=Uh(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return Jh.runKernel(Yu,i,o)}}),$m=hf({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:df(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Jh.runKernel(Rc,a,s)}}),Fm=hf({transpose_:function(e,t){let n=df(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),Ll(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{Ll(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();let r={x:n},a={perm:t};return Jh.runKernel(Cp,r,a)}}),Om=hf({confusionMatrix_:function(e,t,n){let r=df(e,"labels","confusionMatrix"),a=df(t,"predictions","confusionMatrix");Ll(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),Ll(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),Ll(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),Ll(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),Ll(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=$m(um(r,"int32"),n),i=$m(um(a,"int32"),n),o=Fm(s),l=Mm(o,i);return um(l,"int32")}}),zm={};function Dm(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Pm(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Lm(e,t){let n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}il(zm,{assertAndGetBroadcastShape:()=>Lm,getBroadcastDims:()=>Dm,getReductionAxes:()=>Pm});var Wm,Bm={};function Um(e,t,n){if(Bl(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let r=of(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mf(e,t,r,n)}function Vm(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=Vp(Fp,Jh.backendName)){let n={pixels:e},r={numChannels:t};return Jh.runKernel(Fp,n,r)}let l,u,[d,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,d,c).data;else if(r||n)l=e.data;else if(s||a||o){if(null==Wm)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Wm=new OffscreenCanvas(1,1).getContext("2d")}else Wm=document.createElement("canvas").getContext("2d");Wm.canvas.width=d,Wm.canvas.height=c,Wm.drawImage(e,0,0,d,c),l=Wm.getImageData(0,0,d,c).data}if(4===t)u=new Int32Array(l);else{let e=d*c;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Um(u,[c,d,t],"int32")}async function Gm(e,t=3){let n=null;if(Cu().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Vm(n,t)}async function jm(e,t){let n=df(e,"img","toPixels");if(!(e instanceof _h)){let e=n;n=um(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){let t=[0,0,0,255];for(let r=0;r<s;r++){let a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}let r=4*e;l[r+0]=Math.round(t[0]),l[r+1]=Math.round(t[1]),l[r+2]=Math.round(t[2]),l[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;let e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}il(Bm,{fromPixels:()=>Hm,fromPixelsAsync:()=>Gm,toPixels:()=>jm});var Hm=hf({fromPixels_:Vm}),qm={};function Km(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Vl(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let e=0;e<a.length-1;++e)i*=a[e];let o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let d=[...mu(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,d]}il(qm,{prepareAndValidate:()=>Km});var Xm={};function Zm(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Ym(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Zm(n,t,e)}function Jm(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let e=a;e<s;++e)i*=n[e];let o=a<1?1:a;return{sliceRank:a,numUpdates:Vl(t.shape)/o,sliceSize:i,strides:[...mu(n.slice(0,a)),1],outputSize:Vl(n)}}il(Xm,{calculateShapes:()=>Jm,validateInput:()=>Ym,validateUpdateShape:()=>Zm});var Qm={};il(Qm,{assertParamsValid:()=>ng,computeFlatOffset:()=>mg,computeOutShape:()=>ag,getNormalizedAxes:()=>lg,isSliceContinous:()=>fg,maskToAxes:()=>rg,parseSliceParams:()=>gg,sliceInfo:()=>yg,startForAxis:()=>pg,startIndicesWithElidedDims:()=>ug,stopForAxis:()=>hg,stopIndicesWithElidedDims:()=>dg,stridesForAxis:()=>cg,stridesWithElidedDims:()=>sg});var eg=-2,tg=-1;function ng(e,t,n){let r=e.shape.length;Ll(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Ll(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)Ll(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function rg(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ag(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function sg(e,t,n,r){let a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ig(e,t,n){return n<=e?n:n-(t-1)}function og(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function lg(e,t,n,r,a,s,i,o,l){let u=e.length,d=new Array(u),c=new Array(u),p=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=ug(i,l,u,r,e),c=dg(o,l,u,a,e),p=sg(s,l,u,e)}else for(let t=0;t<u;t++)d[t]=pg(i,r,s,e,t,l),c[t]=hg(o,a,s,e,t,l),p[t]=cg(s,t,l);return{begin:d,end:c,strides:p}}function ug(e,t,n,r,a){let s=[...a],i=og(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let i=ig(t,n,a),o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function dg(e,t,n,r,a){let s=[...a],i=og(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let i=ig(t,n,a),o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){let t=a[e];s[e]<0&&(s[e]+=t),s[e]=$l(0,s[e],a[e])}return s}function cg(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function pg(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=$l(0,i,l-1),i}function hg(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=r[a];return i<0&&(i+=l),i=o>0?$l(0,i,l):$l(-1,i,l-1),i}function fg(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function mg(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function gg(e,t,n){let r,a,s=e.shape.length;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Ll(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Ll(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function yg(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,c={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<c.dims;e++)d&&!!(1<<e&o)&&c.numAddAxisAfterEllipsis++,1<<e&i&&(d=!0);d||(c.ellipsisMask|=1<<c.dims,c.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(eg),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(tg),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(c,p);let h=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}let a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];let i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){let e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Ag(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=Ag(p.end[t],1,p.strides[t],r,a,s);let e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;h=h&&e,f=f&&(0===t&&1===p.strides[t]||e)}else h=h&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){let t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===eg&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==eg)),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Ag(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var bg={};il(bg,{Serializable:()=>xg,SerializationMap:()=>wg,registerClass:()=>vg});var xg=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},wg=class{constructor(){this.classNameMap={}}static getMap(){return null==wg.instance&&(wg.instance=new wg),wg.instance}static register(e){wg.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function vg(e){Ll(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Ll("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Ll(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),wg.register(e)}var kg={};il(kg,{TEST_EPSILON_FLOAT16:()=>Sg,encodeStrings:()=>Og,expectArrayBuffersEqual:()=>Fg,expectArraysClose:()=>Ng,expectArraysEqual:()=>_g,expectNumbersClose:()=>Rg,expectPromiseToFail:()=>Eg,expectValuesInRange:()=>$g,testEpsilon:()=>Tg});var Ig=.001,Sg=.1;function Ng(e,t,n){return null==n&&(n=Tg()),Cg(e,t,((e,t)=>Mg(e,t,n)))}function Tg(){return 32===Jh.backend.floatPrecision()?Ig:Sg}function Cg(e,t,n){let r=!0;if((iu(e)||iu(t))&&(r=!1),iu(e)&&iu(t)&&(r=!0),r){let n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=of(e),r=of(t);if(!jl(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}let a=iu(e)?e:Ul(e),s=iu(t)?t:Ul(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Eg(e,t){e().then((()=>t.fail()),(()=>t()))}function _g(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return uu(e)||uu(e[0])||uu(t)||uu(t[0])?Cg(e,n,((e,t)=>e==t)):Cg(e,t,((e,t)=>Mg(e,t,0)))}function Rg(e,t,n){if(null==n&&(n=Tg()),!Mg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Mg(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function $g(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Fg(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Og(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?Og(n):e[t]=yh(n)}return e}var zg="0.0.0";function Dg(){Cu().set("PROD",!0)}function Pg(){Cu().set("DEBUG",!0)}function Lg(){Cu().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Wg(e){Cu().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Bg(){Jh.disposeVariables()}function Ug(){return Jh}function Vg(){return Jh.memory()}function Gg(e){return Jh.profile(e)}function jg(e,t){return Jh.tidy(e,t)}function Hg(e){jh(e).forEach((e=>e.dispose()))}function qg(e){return Jh.keep(e)}function Kg(e){return Jh.time(e)}function Xg(e){return Jh.setBackend(e)}function Zg(){return Jh.ready()}function Yg(){return Jh.backendName}function Jg(e){Jh.removeBackend(e)}function Qg(e){return Jh.findBackend(e)}function ey(e){return Jh.findBackendFactory(e)}function ty(e,t,n=1){return Jh.registerBackend(e,t,n)}function ny(){return Jh.backend}function ry(e,t){Cu().setPlatform(e,t)}var ay=hf({add_:function(e,t){let n=df(e,"a","add"),r=df(t,"b","add");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(zu,a)}}),sy=hf({floorDiv_:function(e,t){let n=df(e,"a","floorDiv"),r=df(t,"b","floorDiv");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(Bd,a)}}),iy=hf({div_:function(e,t){let n=df(e,"a","div"),r=df(t,"b","div");if([n,r]=Uh(n,r),"int32"===n.dtype&&"int32"===r.dtype)return sy(n,r);let a={a:n,b:r};return Jh.runKernel(Cd,a,{})}}),oy=hf({mul_:function(e,t){let n=df(e,"a","mul"),r=df(t,"b","mul");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(Ic,a)}}),ly=hf({abs_:function(e){let t=df(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Jh.runKernel(id,e)}{let e={x:t};return Jh.runKernel($u,e)}}}),uy=hf({acos_:function(e){let t={x:df(e,"x","acos")};return Jh.runKernel(Fu,t)}}),dy=hf({acosh_:function(e){let t={x:df(e,"x","acosh")};return Jh.runKernel(Ou,t)}}),cy=hf({addN_:function(e){Ll(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Ll(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>df(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!jl(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let r=t;return Jh.runKernel(Du,r)}}),py=hf({all_:function(e,t=null,n=!1){let r={x:df(e,"x","all","bool")},a={axis:t,keepDims:n};return Jh.runKernel(Pu,r,a)}}),hy=hf({any_:function(e,t=null,n=!1){let r={x:df(e,"x","any","bool")},a={axis:t,keepDims:n};return Jh.runKernel(Lu,r,a)}}),fy=hf({argMax_:function(e,t=0){let n={x:df(e,"x","argMax")},r={axis:t};return Jh.runKernel(Wu,n,r)}}),my=hf({argMin_:function(e,t=0){let n={x:df(e,"x","argMin")},r={axis:t};return Jh.runKernel(Bu,n,r)}}),gy=hf({asin_:function(e){let t={x:df(e,"x","asin")};return Jh.runKernel(Uu,t)}}),yy=hf({asinh_:function(e){let t={x:df(e,"x","asinh")};return Jh.runKernel(Vu,t)}}),Ay=hf({atan_:function(e){let t={x:df(e,"x","atan")};return Jh.runKernel(Gu,t)}}),by=hf({atan2_:function(e,t){let n=df(e,"a","atan2"),r=df(t,"b","atan2");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(Hu,a)}}),xy=hf({atanh_:function(e){let t={x:df(e,"x","atanh")};return Jh.runKernel(ju,t)}});function wy(e,t,n,r,a="NHWC",s){return Iy(e,[...t,e[3]],n,s,r,null,null,$y(a))}function vy(e,t,n,r,a,s,i="channelsLast"){let o,[l,u]=Ty(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Iy(e,o,n,r,a,s,!1,i)}function ky(e,t,n,r,a,s,i="NDHWC"){let o,l,[u,d,c]=Cy(t);if("NDHWC"===i)l="channelsLast",o=[u,d,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,d,c,e[1],e[1]]}return Sy(e,o,n,r,a,!1,l,s)}function Iy(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,d,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,c]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,d]=e}let p,[h,f,,m]=t,[g,y]=Ty(n),[A,b]=Ty(r),x=Ey(h,A),w=Ey(f,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,l){let u,d,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let a=function(e,t,n,r,a){null==r&&(r=Ny(e,t,n));let s=e[1];return[_y((e[0]-t+2*r)/n+1,a),_y((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],c=a[1]}else if("same"===e){d=Math.ceil(t/r),c=Math.ceil(n/a);let e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(c-1)*a+i-n),l=Math.floor(e/2),p=e-l,h=Math.floor(o/2);u={top:l,bottom:p,left:h,right:o-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),c=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let p="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},d=_y((t-s+p+h)/r+1,o),c=_y((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:d,outWidth:c}}(a,u,d,g,y,x,w,s,o),S=i?m*c:m;return"channelsFirst"===o?p=[l,S,k,I]:"channelsLast"===o&&(p=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:c,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:g,strideWidth:y,filterHeight:h,filterWidth:f,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:A,dilationWidth:b,inShape:e,outShape:p,filterShape:t}}function Sy(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,d,c,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,d,c,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,d,c]=e}let h,[f,m,g,,y]=t,[A,b,x]=Cy(n),[w,v,k]=Cy(r),I=Ey(f,w),S=Ey(m,v),N=Ey(g,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:_}=function(e,t,n,r,a,s,i,o,l,u,d){let c,p,h,f;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=function(e,t,n,r,a,s){null==a&&(a=Ny(e,t,r));let i=e[1],o=e[2];return[_y((e[0]-t+2*a)/r+1,s),_y((i-t+2*a)/r+1,s),_y((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,d);p=s[0],h=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/s),f=Math.ceil(r/i);let e=(p-1)*a+o-t,d=(h-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,A=Math.floor(d/2),b=d-A,x=Math.floor(m/2);c={top:A,bottom:b,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),h=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:c,outDepth:p,outHeight:h,outWidth:f}}(a,u,d,c,A,b,x,I,S,N,o),R=s?y*p:y;return"channelsFirst"===i?h=[l,R,C,E,_]:"channelsLast"===i&&(h=[l,C,E,_,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:d,inWidth:c,inChannels:p,outDepth:C,outHeight:E,outWidth:_,outChannels:R,padInfo:T,strideDepth:A,strideHeight:b,strideWidth:x,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:h,filterShape:t}}function Ny(e,t,n,r=1){let a=Ey(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ty(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Cy(e){return"number"==typeof e?[e,e,e]:e}function Ey(e,t){return t<=1?e:e+(e-1)*(t-1)}function _y(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ry(e){let[t,n,r]=Ty(e);return 1===t&&1===n&&1===r}function My(e,t){return Ry(e)||Ry(t)}function $y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Fy(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Ll(Hl(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Ll(Hl(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var Oy=hf({reshape_:function(e,t){let n={x:df(e,"x","reshape","string_or_numeric")},r={shape:t};return Jh.runKernel(Uc,n,r)}}),zy=hf({avgPool_:function(e,t,n,r,a){let s=df(e,"x","avgPool","float32");Ll(My(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Oy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Ll(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Fy("avgPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=Jh.runKernel(qu,l,u);return d=um(d,s.dtype),o?Oy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Dy=hf({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=df(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=Oy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Ll(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Ll("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Fy("avgPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},c=Jh.runKernel(Xu,u,d);return c=um(c,o.dtype),l?Oy(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Py=hf({concat_:function(e,t=0){Ll(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=cf(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return dm(n[0]);let r=n,a={axis:t};return Jh.runKernel(od,r,a)}}),Ly=hf({sigmoid_:function(e){let t={x:df(e,"x","sigmoid","float32")};return Jh.runKernel(ap,t)}}),Wy=hf({slice_:function(e,t,n){let r=df(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return Jh.runKernel(ep,a,s)}}),By=hf({tanh_:function(e){let t={x:df(e,"x","tanh","float32")};return Jh.runKernel(Ip,t)}}),Uy=hf({basicLSTMCell_:function(e,t,n,r,a,s){let i=df(e,"forgetBias","basicLSTMCell"),o=df(t,"lstmKernel","basicLSTMCell"),l=df(n,"lstmBias","basicLSTMCell"),u=df(r,"data","basicLSTMCell"),d=df(a,"c","basicLSTMCell"),c=df(s,"h","basicLSTMCell"),p=Py([u,c],1),h=Mm(p,o),f=ay(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=Wy(f,[0,0],y),b=Wy(f,[0,g],y),x=Wy(f,[0,2*g],y),w=Wy(f,[0,3*g],y),v=ay(oy(Ly(A),By(b)),oy(d,Ly(ay(i,x))));return[v,oy(By(v),Ly(w))]}}),Vy=hf({batchToSpaceND_:function(e,t,n){let r=df(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));Ll(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Ll(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Ll(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));let s={x:r},i={blockShape:t,crops:n};return Jh.runKernel(Ju,s,i)}});function Gy(e){let t;return t=0===e.rank||1===e.rank?Oy(e,[1,1,1,e.size]):2===e.rank?Oy(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Oy(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var jy=hf({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);let i,o,l=df(e,"x","batchNorm"),u=df(t,"mean","batchNorm"),d=df(n,"variance","batchNorm");null!=a&&(i=df(a,"scale","batchNorm")),null!=r&&(o=df(r,"offset","batchNorm")),Ll(u.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Ll(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Ll(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let c={x:Gy(l),scale:i,offset:o,mean:u,variance:d},p={varianceEpsilon:s},h=Jh.runKernel(Ud,c,p);return Oy(h,l.shape)}}),Hy=hf({batchNorm2d_:function(e,t,n,r,a,s){let i,o,l=df(e,"x","batchNorm"),u=df(t,"mean","batchNorm"),d=df(n,"variance","batchNorm");return null!=a&&(i=df(a,"scale","batchNorm")),null!=r&&(o=df(r,"offset","batchNorm")),Ll(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),Ll(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),Ll(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`)),null!=i&&Ll(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&Ll(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),jy(l,u,d,o,i,s)}}),qy=hf({batchNorm3d_:function(e,t,n,r,a,s){let i,o,l=df(e,"x","batchNorm"),u=df(t,"mean","batchNorm"),d=df(n,"variance","batchNorm");return null!=a&&(i=df(a,"scale","batchNorm")),null!=r&&(o=df(r,"offset","batchNorm")),Ll(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),Ll(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),Ll(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`)),null!=i&&Ll(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&Ll(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),jy(l,u,d,o,i,s)}}),Ky=hf({batchNorm4d_:function(e,t,n,r,a,s){let i,o,l=df(e,"x","batchNorm"),u=df(t,"mean","batchNorm"),d=df(n,"variance","batchNorm");return null!=a&&(i=df(a,"scale","batchNorm")),null!=r&&(o=df(r,"offset","batchNorm")),Ll(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),Ll(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),Ll(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`)),null!=i&&Ll(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&Ll(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),jy(l,u,d,o,i,s)}}),Xy=hf({bincount_:function(e,t,n){let r=df(e,"x","bincount"),a=df(t,"weights","bincount");Ll("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Ll(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Ll(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));let s={x:r,weights:a},i={size:n};return Jh.runKernel(Qu,s,i)}}),Zy=hf({broadcastArgs_:function(e,t){let n=df(e,"s0","broadcastArgs","int32"),r=df(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return Jh.runKernel(td,a)}}),Yy=hf({broadcastTo_:function(e,t){let n=df(e,"broadcastTo","x"),r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Oy(n,e)}let a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return dm(n);let i={x:n},o={reps:s};return Jh.runKernel(Sp,i,o)}}),Jy=hf({ceil_:function(e){let t={x:df(e,"x","ceil","float32")};return Jh.runKernel(rd,t)}}),Qy=hf({clipByValue_:function(e,t,n){let r=df(e,"x","clipByValue");Ll(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));let a={x:r},s={clipValueMin:t,clipValueMax:n};return Jh.runKernel(ad,a,s)}}),eA=hf({concat1d_:function(e){return Py(e,0)}}),tA=hf({concat2d_:function(e,t){return Py(e,t)}}),nA=hf({concat3d_:function(e,t){return Py(e,t)}}),rA=hf({concat4d_:function(e,t){return Py(e,t)}}),aA=hf({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=df(e,"x","conv2d","float32"),l=df(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Oy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Ll(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Ll(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Fy("conv2d",r,i);let c="NHWC"===a?u.shape[3]:u.shape[1];Ll(c===l.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`)),Ll(My(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let p={x:u,filter:l},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Jh.runKernel(ld,p,h);return d?Oy(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),sA=hf({conv1d_:function(e,t,n,r,a="NWC",s=1,i){let o=df(e,"x","conv1d"),l=df(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=Oy(o,[1,o.shape[0],o.shape[1]])),Ll(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Ll(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Fy("conv1d",r,i),Ll(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Ll(My(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),Ll("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));let c=Oy(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Oy(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=aA(p,c,[1,n],r,"NHWC",[1,s],i);return Oy(h,d?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),iA=hf({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){Ll(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Oy(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Ll(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Ll(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Ll(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let d="NHWC"===s?o[3]:o[1],c="NHWC"===s?l.shape[3]:l.shape[1];Ll(d===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`)),Ll(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),Fy("conv2dDerInput",a,i);let p={dy:l,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Jh.runKernel(dd,p,h);return u?Oy(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),oA=hf({conv2dTranspose_:function(e,t,n,r,a,s){let i=df(e,"x","conv2dTranspose"),o=df(t,"filter","conv2dTranspose");return iA(n,i,o,r,a,"NHWC",s)}}),lA=hf({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=df(e,"x","conv3d"),o=df(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=Oy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Ll(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Ll(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Ll(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Ll(My(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Ll("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));let d={x:l,filter:o},c={strides:n,pad:r,dataFormat:a,dilations:s},p=Jh.runKernel(cd,d,c);return u?Oy(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),uA=hf({conv3DBackpropInput_:function(e,t,n,r,a){Ll(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Oy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];Ll(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),Ll(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Ll(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Ll(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Ll(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let d={dy:i,filter:n},c={pad:a,strides:r,inputShape:s},p=Jh.runKernel(hd,d,c);return o?Oy(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),dA=hf({conv3dTranspose_:function(e,t,n,r,a){let s=df(e,"x","conv3dTranspose"),i=df(t,"filter","conv3dTranspose");return uA(n,s,i,r,a)}}),cA=hf({cos_:function(e){let t={x:df(e,"x","cos","float32")};return Jh.runKernel(fd,t)}}),pA=hf({cosh_:function(e){let t={x:df(e,"x","cosh","float32")};return Jh.runKernel(md,t)}}),hA=hf({cumprod_:function(e,t=0,n=!1,r=!1){let a={x:df(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Jh.runKernel(gd,a,s)}}),fA=hf({cumsum_:function(e,t=0,n=!1,r=!1){let a={x:df(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Jh.runKernel(yd,a,s)}}),mA=hf({denseBincount_:function(e,t,n,r=!1){let a=df(e,"x","denseBincount"),s=df(t,"weights","denseBincount");Ll("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),Ll(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),Ll(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Ll(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));let i={x:a,weights:s},o={size:n,binaryOutput:r};return Jh.runKernel(bd,i,o)}}),gA=hf({depthToSpace_:function(e,t,n="NHWC"){let r=df(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Ll(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Ll(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Ll(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Ll(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));let o={x:r},l={blockSize:t,dataFormat:n};return Jh.runKernel(xd,o,l)}}),yA=hf({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){let o=df(e,"x","depthwiseConv2d","float32"),l=df(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Oy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Ll(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Ll(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),Ll(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Fy("depthwiseConv2d",r,i);let c={x:u,filter:l},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},h=Jh.runKernel(wd,c,p);return d?Oy(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),AA=hf({diag_:function(e){let t={x:df(e,"x","diag")};return Jh.runKernel(Id,t)}}),bA=hf({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){let i=df(e,"x","dilation2d"),o=df(t,"filter","dilation2d");Ll(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Ll(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Ll("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Oy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let d={x:l,filter:o},c={strides:n,pad:r,dilations:a},p=Jh.runKernel(Sd,d,c);return u?Oy(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),xA=hf({equal_:function(e,t){let n=df(e,"a","equal","string_or_numeric"),r=df(t,"b","equal","string_or_numeric");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel($d,a)}}),wA=hf({where_:function(e,t,n){let r=df(t,"a","where"),a=df(n,"b","where"),s=df(e,"condition","where","bool"),i=Lm(Lm(s.shape,r.shape),a.shape),o={condition:Yy(s,i),t:Yy(r,i),e:Yy(a,i)};return Jh.runKernel(Jc,o)}}),vA=hf({zerosLike_:function(e){let t={x:df(e,"x","zerosLike")};return Jh.runKernel(Mp,t)}}),kA=hf({divNoNan_:function(e,t){let n=df(e,"a","div"),r=df(t,"b","div");[n,r]=Uh(n,r);let a=iy(n,r),s=vA(a),i=xA(r,s);return wA(i,s,a)}}),IA=hf({dot_:function(e,t){let n=df(e,"t1","dot"),r=df(t,"t2","dot");Ll(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));let a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(Ll(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){let e=Oy(n,[1,-1]),t=Oy(r,[-1,1]),a=Mm(e,t);return Oy(a,[])}if(1===n.rank&&2===r.rank){let e=Oy(n,[1,-1]),t=Oy(r,[r.shape[0],r.shape[1]]),a=Mm(e,t);return Oy(a,[a.size])}if(2===n.rank&&1===r.rank){let e=Oy(r,[-1,1]),t=Mm(n,e);return Oy(t,[t.size])}{let e=Oy(r,[r.shape[0],r.shape[1]]);return Mm(n,e)}}}),SA=hf({einsum_:function(e,...t){let n=t.map(((e,t)=>df(e,`tensors${t}`,"einsum"))),r={equation:e};return Jh.runKernel(Ed,n,r)}}),NA=hf({elu_:function(e){let t={x:df(e,"x","elu","float32")};return Jh.runKernel(_d,t)}}),TA=hf({erf_:function(e){let t=df(e,"x","erf");Ll("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=um(t,"float32"));let n={x:t};return Jh.runKernel(Md,n)}}),CA=hf({exp_:function(e){let t={x:df(e,"x","exp")};return Jh.runKernel(Fd,t)}}),EA=hf({expandDims_:function(e,t=0){let n=df(e,"x","expandDims","string_or_numeric");Ll(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let r={input:n},a={dim:t};return Jh.runKernel(Od,r,a)}}),_A=hf({expm1_:function(e){let t={x:df(e,"x","expm1")};return Jh.runKernel(zd,t)}}),RA=hf({tile_:function(e,t){let n=df(e,"x","tile","string_or_numeric");Ll(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let r={x:n},a={reps:t};return Jh.runKernel(Sp,r,a)}}),MA=hf({eye_:function(e,t,n,r="float32"){null==t&&(t=e);let a=lm([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);let i=Oy(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return RA(EA(i,0),[n[0],1,1]);if(2===n.length)return RA(EA(EA(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return RA(EA(EA(EA(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function $A(e,t,n){let r={shape:e,value:t,dtype:n};return Jh.runKernel(Pd,{},r)}var FA=hf({floor_:function(e){let t={x:df(e,"x","floor","float32")};return Jh.runKernel(Wd,t)}}),OA=hf({gather_:function(e,t,n=0,r=0){let a={x:df(e,"x","gather"),indices:df(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Jh.runKernel(Vd,a,s)}}),zA=hf({greater_:function(e,t){let n=df(e,"a","greater","string_or_numeric"),r=df(t,"b","greater","string_or_numeric");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(jd,a)}}),DA=hf({greaterEqual_:function(e,t){let n=df(e,"a","greaterEqual","string_or_numeric"),r=df(t,"b","greaterEqual","string_or_numeric");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(Hd,a)}}),PA=hf({imag_:function(e){let t={input:df(e,"input","imag")};return Jh.runKernel(Xd,t)}}),LA=hf({isFinite_:function(e){let t={x:df(e,"x","isFinite")};return Jh.runKernel(Zd,t)}}),WA=hf({isInf_:function(e){let t={x:df(e,"x","isInf")};return Jh.runKernel(Yd,t)}}),BA=hf({isNaN_:function(e){let t={x:df(e,"x","isNaN")};return Jh.runKernel(Jd,t)}}),UA=hf({leakyRelu_:function(e,t=.2){let n={x:df(e,"x","leakyRelu")},r={alpha:t};return Jh.runKernel(Qd,n,r)}}),VA=hf({less_:function(e,t){let n=df(e,"a","less","string_or_numeric"),r=df(t,"b","less","string_or_numeric");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(ec,a)}}),GA=hf({lessEqual_:function(e,t){let n=df(e,"a","lessEqual","string_or_numeric"),r=df(t,"b","lessEqual","string_or_numeric");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(tc,a)}});function jA(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return Jh.runKernel(nc,{},r)}var HA=hf({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){let s=df(e,"x","localResponseNormalization");Ll(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),Ll(Hl(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Oy(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},d=Jh.runKernel(uc,l,u);return o?Oy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),qA=hf({log_:function(e){let t={x:df(e,"x","log","float32")};return Jh.runKernel(rc,t)}}),KA=hf({log1p_:function(e){let t={x:df(e,"x","log1p")};return Jh.runKernel(ac,t)}});function XA(e){return Ll(hu(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let r=df(t,"x","tf.grad","string_or_numeric"),a=null!=n?df(n,"dy","tf.grad"):null;return Jh.tidy((()=>{let{value:t,grads:n}=Jh.gradients((()=>e(r)),[r],a);return null!=a&&Wl(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),tb(n),n[0]}))}}function ZA(e){return Ll(hu(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{Ll(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let r=cf(t,"args","tf.grads","string_or_numeric"),a=null!=n?df(n,"dy","tf.grads"):null;return Jh.tidy((()=>{let{value:t,grads:n}=Jh.gradients((()=>e(...r)),r,a);return null!=a&&Wl(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),tb(n),n}))}}function YA(e){return Ll(hu(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{Ll(t instanceof _h,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),Ll(null==n||n instanceof _h,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:r,value:a}=Jh.gradients((()=>e(t)),[t],n);return tb(r),{grad:r[0],value:a}}}function JA(e){return Ll(hu(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{Ll(Array.isArray(t)&&t.every((e=>e instanceof _h)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),Ll(null==n||n instanceof _h,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let r=Jh.gradients((()=>e(...t)),t,n);return null!=n&&Wl(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),tb(r.grads),r}}function QA(e,t){Ll(hu(e),(()=>"The f passed in variableGrads(f) must be a function")),Ll(null==t||Array.isArray(t)&&t.every((e=>e instanceof Rh)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in Jh.registeredVariables)t.push(Jh.registeredVariables[e])}let r=n?t.filter((e=>!e.trainable)):null,a=t.length;Ll((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));let{value:s,grads:i}=Jh.gradients(e,t,null,!0);Ll(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Ll(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function eb(e){return Jh.customGrad(e)}function tb(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var nb=hf({neg_:function(e){let t={x:df(e,"x","neg")};return Jh.runKernel(Sc,t)}}),rb=hf({softplus_:function(e){let t={x:df(e,"x","softplus")};return Jh.runKernel(sp,t)}}),ab=hf({logSigmoid_:function(e){let t=df(e,"x","logSigmoid");return eb((e=>({value:nb(rb(nb(e))),gradFunc:t=>oy(t,Ly(nb(e)))})))(t)}}),sb=hf({max_:function(e,t=null,n=!1){let r={x:df(e,"x","max")},a={reductionIndices:t,keepDims:n};return Jh.runKernel(cc,r,a)}}),ib=hf({sub_:function(e,t){let n=df(e,"a","sub"),r=df(t,"b","sub");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(vp,a)}}),ob=hf({sum_:function(e,t=null,n=!1){let r=df(e,"x","sum");"bool"===r.dtype&&(r=um(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Jh.runKernel(op,a,s)}}),lb=hf({logSoftmax_:function(e,t=-1){let n=df(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return eb(((e,n)=>{let r=sb(e,t,!0),a=ib(e,r),s=ib(um(a,"float32"),qA(ob(CA(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[r]=n,a=CA(r);return ib(e,oy(ob(e,t,!0),a))}}}))(n)}});function ub(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function db(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function cb(e,t){let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function pb(e,t){return db(e,t.map((e=>1)),t)}function hb(e,t,n){Ll(ub(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function fb(e,t){if(ub(e,t))return null;let n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function mb(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function gb(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}var yb=hf({logSumExp_:function(e,t=null,n=!1){let r=df(e,"x","logSumExp"),a=Ql(t,r.shape),s=sb(r,a,!0),i=ib(r,s),o=CA(i),l=ob(o,a),u=qA(l),d=ay(Oy(s,u.shape),u);if(n){let e=pb(d.shape,a);return Oy(d,e)}return d}}),Ab=hf({logicalAnd_:function(e,t){let n=df(e,"a","logicalAnd","bool"),r=df(t,"b","logicalAnd","bool");Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(sc,a)}}),bb=hf({logicalNot_:function(e){let t={x:df(e,"x","logicalNot","bool")};return Jh.runKernel(ic,t)}}),xb=hf({logicalOr_:function(e,t){let n=df(e,"a","logicalOr","bool"),r=df(t,"b","logicalOr","bool");Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(oc,a)}}),wb=hf({logicalXor_:function(e,t){let n=df(e,"a","logicalXor","bool"),r=df(t,"b","logicalXor","bool");return Lm(n.shape,r.shape),Ab(xb(e,t),bb(Ab(e,t)))}}),vb=hf({maxPool_:function(e,t,n,r,a){let s=df(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=Oy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Ll(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Ll(My(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Fy("maxPool",r,a);let l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=Jh.runKernel(hc,l,u);return o?Oy(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),kb=hf({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=df(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=Oy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Ll(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Ll("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Fy("maxPool3d",r,a);let u={x:o},d={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},c=Jh.runKernel(mc,u,d);return l?Oy(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Ib=hf({maxPoolWithArgmax_:function(e,t,n,r,a=!1){let s={x:df(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Jh.runKernel(yc,s,i);return{result:o[0],indexes:o[1]}}}),Sb=hf({maximum_:function(e,t){let n=df(e,"a","maximum"),r=df(t,"b","maximum");[n,r]=Uh(n,r),"bool"===n.dtype&&(n=um(n,"int32"),r=um(r,"int32")),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(pc,a)}}),Nb=hf({mean_:function(e,t=null,n=!1){let r={x:df(e,"x","mean")},a={axis:t,keepDims:n};return Jh.runKernel(Ac,r,a)}});function Tb(e,t="float32"){if("complex64"===t){let t=Tb(e,"float32"),n=Tb(e,"float32");return ff(t,n)}let n=bu(Vl(e),t);return Jh.makeTensor(n,e,t)}function Cb(e,t="float32"){if("complex64"===t){let t=Cb(e,"float32"),n=Tb(e,"float32");return ff(t,n)}let n=Au(Vl(e),t);return Jh.makeTensor(n,e,t)}function Eb(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=df(e,"x","meshgrid",e instanceof _h?e.dtype:"float32");if(void 0===t)return[r];let a=df(t,"y","meshgrid",t instanceof _h?t.dtype:"float32"),s=Vl(r.shape),i=Vl(a.shape);return"xy"===n?(r=Oy(r,[1,-1]),a=Oy(a,[-1,1]),[Mm(Cb([i,1],r.dtype),r),Mm(a,Cb([1,s],a.dtype))]):(r=Oy(r,[-1,1]),a=Oy(a,[1,-1]),[Mm(r,Cb([1,i],r.dtype)),Mm(Cb([s,1],a.dtype),a)])}var _b=hf({min_:function(e,t=null,n=!1){let r={x:df(e,"x","min")},a={axis:t,keepDims:n};return Jh.runKernel(bc,r,a)}}),Rb=hf({minimum_:function(e,t){let n=df(e,"a","minimum"),r=df(t,"b","minimum");[n,r]=Uh(n,r),"bool"===n.dtype&&(n=um(n,"int32"),r=um(r,"int32")),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(xc,a)}}),Mb=hf({mirrorPad_:function(e,t,n){Ll("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let r=df(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Ll(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));let a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Ll(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ll(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));let s={paddings:t,mode:n},i={x:r};return Jh.runKernel(wc,i,s)}}),$b=hf({mod_:function(e,t){let n=df(e,"a","mod"),r=df(t,"b","mod");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(vc,a)}}),Fb=hf({square_:function(e){let t=df(e,"x","square");return Jh.runKernel("Square",{x:t},{})}}),Ob=hf({moments_:function(e,t=null,n=!1){let r=Ql(t,(e=df(e,"x","moments")).shape),a=Nb(e,r,n),s=a.shape;n||(s=pb(a.shape,r));let i=Fb(ib(um(e,"float32"),Oy(a,s)));return{mean:a,variance:Nb(i,r,n)}}}),zb=hf({multiRNNCell_:function(e,t,n,r){let a=df(t,"data","multiRNNCell"),s=cf(n,"c","multiRNNCell"),i=cf(r,"h","multiRNNCell"),o=a,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],d=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),d.push(l[e+1]);return[u,d]}}),Db=hf({multinomial_:function(e,t,n,r=!1){let a=df(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?Oy(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Jh.runKernel(kc,o,l);return 1===i?Oy(u,[u.size]):u}}),Pb=hf({notEqual_:function(e,t){let n=df(e,"a","notEqual","string_or_numeric"),r=df(t,"b","notEqual","string_or_numeric");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(Nc,a)}}),Lb=hf({onesLike_:function(e){let t={x:df(e,"x","onesLike")};return Jh.runKernel(_c,t)}}),Wb=hf({outerProduct_:function(e,t){let n=df(e,"v1","outerProduct"),r=df(t,"v2","outerProduct");Ll(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));let a=Oy(n,[-1,1]),s=Oy(r,[1,-1]);return Mm(a,s)}}),Bb=hf({pad_:function(e,t,n=0){let r=df(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return Jh.runKernel($c,s,a)}}),Ub=hf({pad1d_:function(e,t,n=0){return Ll(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Bb(e,[t],n)}}),Vb=hf({pad2d_:function(e,t,n=0){return Ll(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Bb(e,t,n)}}),Gb=hf({pad3d_:function(e,t,n=0){return Ll(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Bb(e,t,n)}}),jb=hf({pad4d_:function(e,t,n=0){return Ll(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Bb(e,t,n)}}),Hb=hf({spaceToBatchND_:function(e,t,n){let r=df(e,"x","spaceToBatchND");Ll(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Ll(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Ll(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let a={x:r},s={blockShape:t,paddings:n};return Jh.runKernel(lp,a,s)}}),qb=hf({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=df(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Oy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Ll(My(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));let d,c=vy(l.shape,t,s,a,r),p=[c.dilationHeight,c.dilationWidth];d="same"===r?function(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],p):[[0,0],[0,0]];let h=1===p[0]&&1===p[1],[f,m]=function(e,t,n){let r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],p,d),g=h?r:"valid",y=h?l:Hb(l,p,f),A=("avg"===n?()=>zy(y,t,s,g,i):()=>vb(y,t,s,g,i))(),b=h?A:Vy(A,p,m);return u?Oy(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),Kb=hf({pow_:function(e,t){let n=df(e,"base","pow"),r=df(t,"exp","pow");[n,r]=Uh(n,r);let a={a:n,b:r};return Jh.runKernel(Oc,a)}}),Xb=hf({prelu_:function(e,t){let n={x:df(e,"x","prelu"),alpha:df(t,"alpha","prelu")};return Jh.runKernel(zc,n)}}),Zb=hf({prod_:function(e,t=null,n=!1){let r=df(e,"x","prod");"bool"===r.dtype&&(r=um(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return Jh.runKernel(Dc,a,s)}}),Yb=hf({rand_:function(e,t,n){let r=Vl(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Jh.makeTensor(a,e,n)}}),Jb=ol(bl()),Qb=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=a||Math.random();this.random=Jb.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},ex=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Jb.alea(a.toString()),this.randn=new Qb(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},tx=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Jb.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}},nx=hf({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);let s=new ex(t,n,r,a),i=lm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),rx=hf({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);let s=new Qb(t,n,r,!1,a),i=lm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ax=hf({randomUniform_:function(e,t=0,n=1,r="float32",a){let s=lm(e,r),i=new tx(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function sx(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return Jh.runKernel(Pc,{},a)}var ix=hf({real_:function(e){let t={input:df(e,"input","real")};return Jh.runKernel(Lc,t)}}),ox=hf({reciprocal_:function(e){let t={x:df(e,"x","reciprocal")};return Jh.runKernel(Wc,t)}}),lx=hf({relu_:function(e){let t={x:df(e,"x","relu")};return Jh.runKernel(Bc,t)}}),ux=hf({relu6_:function(e){let t={x:df(e,"x","relu6")};return Jh.runKernel(qc,t)}}),dx=hf({reverse_:function(e,t){let n={x:df(e,"x","reverse")},r={dims:t};return Jh.runKernel(Kc,n,r)}}),cx=hf({reverse1d_:function(e){let t=df(e,"x","reverse");return Ll(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),dx(t,0)}}),px=hf({reverse2d_:function(e,t){let n=df(e,"x","reverse");return Ll(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),dx(n,t)}}),hx=hf({reverse3d_:function(e,t){let n=df(e,"x","reverse");return Ll(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),dx(n,t)}}),fx=hf({reverse4d_:function(e,t){let n=df(e,"x","reverse");return Ll(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),dx(n,t)}}),mx=hf({round_:function(e){let t={x:df(e,"x","round")};return Jh.runKernel(Xc,t)}}),gx=hf({rsqrt_:function(e){let t={x:df(e,"x","rsqrt","float32")};return Jh.runKernel(Zc,t)}});function yx(e,t){if((iu(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&iu(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return mf(e,[],[],t)}var Ax=hf({selu_:function(e){let t={x:df(e,"x","selu")};return Jh.runKernel(Qc,t)}}),bx=hf({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){let o=df(e,"x","separableConv2d"),l=df(t,"depthwiseFilter","separableConv2d"),u=df(n,"pointwiseFilter","separableConv2d"),d=o,c=!1;if(3===o.rank&&(c=!0,d=Oy(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Ll(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),Ll(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Ll(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Ll(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Ll(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let p=l.shape[2],h=l.shape[3];Ll(u.shape[2]===p*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${u.shape[2]}.`));let f=yA(d,l,r,a,i,s),m=aA(f,u,1,"valid",i);return c?Oy(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),xx=async function(e,t){let n=df(e,"x","setdiff1d"),r=df(t,"y","setdiff1d");Ll(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Ll(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Ll(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;let l=new Th([o],n.dtype),u=new Th([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},wx=hf({sign_:function(e){let t={x:df(e,"x","sign")};return Jh.runKernel(rp,t)}}),vx=hf({sin_:function(e){let t={x:df(e,"x","sin","float32")};return Jh.runKernel(tp,t)}}),kx=hf({sinh_:function(e){let t={x:df(e,"x","sinh")};return Jh.runKernel(np,t)}}),Ix=hf({slice1d_:function(e,t,n){let r=df(e,"x","slice1d");return Ll(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Wy(r,[t],[n])}}),Sx=hf({slice2d_:function(e,t,n){let r=df(e,"x","slice2d");return Ll(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Wy(r,t,n)}}),Nx=hf({slice3d_:function(e,t,n){let r=df(e,"x","slice3d");return Ll(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Wy(r,t,n)}}),Tx=hf({slice4d_:function(e,t,n){let r=df(e,"x","slice4d");return Ll(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Wy(r,t,n)}}),Cx=hf({softmax_:function(e,t=-1){let n=df(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return Jh.runKernel(dp,r,a)}}),Ex=hf({fft_:function(e){Ll("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Jh.runKernel(Dd,t)}}),_x=hf({ifft_:function(e){Ll("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return Jh.runKernel(Kd,t)}}),Rx=hf({irfft_:function(e){let t,n=e.shape[e.shape.length-1],r=e.size/n;if(n<=2){let a=Oy(e,[r,n]);t=_x(a)}else{let a=[r,2*(n-1)],s=Oy(ix(e),[r,n]),i=Oy(PA(e),[r,n]),o=dx(Wy(s,[0,1],[r,n-2]),1),l=oy(dx(Wy(i,[0,1],[r,n-2]),1),yx(-1)),u=Py([s,o],1),d=Py([i,l],1),c=Oy(ff(u,d),[a[0],a[1]]);t=_x(c)}if(t=ix(t),3===e.rank&&0!==e.shape[0]){let n=t,r=e.shape[0];t=Oy(t,[r,t.shape[0]/r,t.shape[1]]),n.dispose()}return t}}),Mx=hf({split_:function(e,t,n=0){let r={x:df(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Jh.runKernel(up,r,a)}}),$x=hf({rfft_:function(e,t){Ll("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){let a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=Wy(e,a,s),r=t}else if(null!=t&&t>r){let a=e.shape.map((e=>e));a[e.shape.length-1]=t-r,n=Py([e,Tb(a)],e.shape.length-1),r=t}else n=e;let s=vA(n),i=Oy(ff(n,s),[a,r]),o=Ex(i),l=Math.floor(r/2)+1,u=ix(o),d=PA(o),c=Mx(u,[l,r-l],u.shape.length-1),p=Mx(d,[l,r-l],d.shape.length-1),h=n.shape.slice();return h[n.shape.length-1]=l,Oy(ff(c[0],p[0]),h)}}),Fx=hf({sqrt_:function(e){let t={x:df(e,"x","sqrt","float32")};return Jh.runKernel(ip,t)}}),Ox=hf({squaredDifference_:function(e,t){let n=df(e,"a","squaredDifference"),r=df(t,"b","squaredDifference");[n,r]=Uh(n,r),Lm(n.shape,r.shape);let a={a:n,b:r};return Jh.runKernel(gp,a,{})}}),zx=hf({squeeze_:function(e,t){let n=df(e,"x","squeeze");return Oy(n,eu(n.shape,t).newShape)}}),Dx=hf({stack_:function(e,t=0){let n=cf(e,"tensors","stack","string_or_numeric");Ll(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Ll(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let r=n,a={axis:t};return Jh.runKernel(Mc,r,a)}}),Px=hf({step_:function(e,t=0){let n={x:df(e,"x","step")},r={alpha:t};return Jh.runKernel($p,n,r)}}),Lx=hf({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){let u={x:df(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Jh.runKernel(Ap,u,d)}}),Wx=hf({tan_:function(e){let t={x:df(e,"x","tan","float32")};return Jh.runKernel(kp,t)}});function Bx(e,t){Bl(e);let n=of(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return mf(e,null,n,t)}function Ux(e,t,n){if(Bl(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let r=of(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mf(e,t,r,n)}function Vx(e,t,n){if(Bl(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let r=of(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return mf(e,t,r,n)}function Gx(e,t,n){if(Bl(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let r=of(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return mf(e,t,r,n)}function jx(e,t,n){if(Bl(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let r=of(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return mf(e,t=t||r,r,n)}var Hx=hf({topk_:function(e,t=1,n=!0){let r=df(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,l]=Jh.runKernel(Np,s,i);return{values:o,indices:l}}}),qx=hf({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");let s=new Qb(t,n,r,!0,a),i=lm(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Kx=hf({unique_:function(e,t=0){let n=df(e,"x","unique","string_or_numeric");Ll(n.rank>0,(()=>"The input tensor must be at least 1D"));let r={x:n},a={axis:t},[s,i]=Jh.runKernel(Ep,r,a);return{values:s,indices:i}}}),Xx=hf({unsortedSegmentSum_:function(e,t,n){let r=df(e,"x","unsortedSegmentSum"),a=df(t,"segmentIds","unsortedSegmentSum","int32");Ll(Hl(n),(()=>"numSegments must be of dtype int"));let s={x:r,segmentIds:a},i={numSegments:n};return Jh.runKernel(Rp,s,i)}}),Zx=hf({unstack_:function(e,t=0){let n=df(e,"x","unstack","string_or_numeric");Ll(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let r={value:n},a={axis:t};return Jh.runKernel(_p,r,a)}});function Yx(e,t=!0,n,r){return Jh.makeVariable(e,t,n,r)}function Jx(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let r=lm(e,"int32"),a=lm([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}var Qx=async function(e){let t=df(e,"condition","whereAsync","bool"),n=await t.data(),r=Jx(t.shape,n);return e!==t&&t.dispose(),r},ew=async function(e,t,n){let r=df(e,"tensor","boolMask"),a=df(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;Ll(i>0,(()=>"mask cannot be scalar")),Wl(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),d=Oy(r,u),c=Oy(a,[-1]),p=await Qx(c),h=zx(p,[1]),f=OA(d,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),d.dispose(),c.dispose(),p.dispose(),f};function tw(e,t,n=null){if(0===e.rank)return ly(e);if(1!==e.rank&&null===n)return tw(Oy(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ob(ly(e),n);if(t===1/0)return sb(ly(e),n);if(t===-1/0)return _b(ly(e),n);if("euclidean"===t||2===t)return Fx(ob(Kb(ly(e),yx(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return sb(ob(ly(e),n[0]),n[1]-1);if(t===1/0)return sb(ob(ly(e),n[1]),n[0]);if(t===-1/0)return _b(ob(ly(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Fx(ob(Fb(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var nw=hf({norm_:function(e,t="euclidean",n=null,r=!1){let a=tw(e=df(e,"x","norm"),t,n),s=a.shape;if(r){let t=Ql(n,e.shape);s=pb(a.shape,t)}return Oy(a,s)}}),rw=hf({movingAverage_:function(e,t,n,r,a=!0){let s=df(e,"v","movingAverage"),i=df(t,"x","movingAverage"),o=df(n,"decay","movingAverage");Vh(s,i),Ll(jl(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=yx(1),u=ib(l,o),d=oy(ib(i,s),u);if(a){Ll(null!=r,(()=>"When using zeroDebias: true, step is required."));let e=df(r,"step","movingAverage");d=iy(d,ib(l,Kb(o,e)))}return ay(s,d)}}),aw=hf({scatterND_:function(e,t,n){let r=df(e,"indices","scatterND","int32"),a=df(t,"updates","scatterND");Ym(a,r,n);let s={indices:r,updates:a},i={shape:n};return Jh.runKernel(Yc,s,i)}}),sw=hf({sparseToDense_:function(e,t,n,r=0){let a=df(e,"sparseIndices","sparseToDense","int32"),s=df(t,"sparseValues","sparseToDense"),i=df(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Jh.runKernel(mp,o,l)}}),iw=hf({gatherND_:function(e,t){let n=df(t,"indices","gatherND","int32"),r={params:df(e,"x","gatherND","string_or_numeric"),indices:n};return Jh.runKernel(Gd,r)}}),ow=hf({dropout_:function(e,t,n,r){let a=df(e,"x","dropout");if(Ll("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),Ll(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof _h?a.clone():a;let s=function(e,t){if(null==t)return e.shape.slice();if(jl(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=iy(FA(ay(ax(s,0,1,"float32",r),i)),i);return oy(a,o)}});function lw(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function uw(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Bx(a,"float32")}var dw=async function(e,t,n=1){let r=df(e,"predictions","inTopK"),a=df(t,"targets","inTopK");Ll(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Ll(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Wl(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];Ll(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await r.data(),o=await a.data(),[l,u]=[i.length/s,s],d=tu("bool",l);for(let e=0;e<l;e++){let t=e*u,r=i.subarray(t,t+u),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),d[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){d[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),gf(d,a.shape,"bool")},cw={};il(cw,{conv2d:()=>yw,depthwiseConv2d:()=>xw,matMul:()=>ww});var pw=hf({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Oy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Oy(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Ll(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Ll(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Ll(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],d="NHWC"===s?l.shape[3]:l.shape[1];Ll(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Ll(d===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`)),Fy("conv2dDerFilter",a,i);let c={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Jh.runKernel(ud,c,p)}});function hw(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return oy(e,Px(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function fw(e,t){let n=t,r=Pm(e.shape,t.shape);return r.length>0&&(n=ob(n,r)),Oy(n,e.shape)}function mw(e,t,n,r){if("linear"===t)return e;if("relu"===t)return lx(e);if("elu"===t)return NA(e);if("relu6"===t)return ux(e);if("prelu"===t)return Xb(e,n);if("leakyrelu"===t)return UA(e,r);if("sigmoid"===t)return Ly(e);throw new Error(`Unknown fused activation ${t}.`)}var gw=(e,t)=>!(e>0)||"linear"===t,yw=hf({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",!1===gw(Jh.state.gradientDepth,l)){let c=aA(e,t,n,r,a,s,i);return null!=o&&(c=ay(c,o)),mw(c,l,u,d)}let c=df(e,"x","conv2d","float32"),p=df(t,"filter","conv2d","float32"),h=c,f=!1;3===c.rank&&(f=!0,h=Oy(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Ll(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),Ll(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Fy("fused conv2d",r,i),Ll(h.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),Ll(My(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Ll("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));let m,g,y=Iy(h.shape,p.shape,n,s,r,i);null!=o&&(m=df(o,"bias","fused conv2d"),[m]=Uh(m,c),Lm(y.outShape,m.shape)),null!=u&&(g=df(u,"prelu weights","fused conv2d"));let A=(e,t)=>{let[a,i,o,u]=t,d=hw(e,o,l);Ll(Ry(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let c=[iA(i.shape,d,a,n,r),pw(i,d,a.shape,n,r)];if(null!=u){let e=fw(u,d);c.push(e)}return c},b={x:h,filter:p,bias:m,preluActivationWeights:g},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return null==o?eb(((e,t,n)=>{let r=Jh.runKernel(Dp,b,x);return n([t,e,r]),f&&(r=Oy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:A}}))(h,p):eb(((e,t,n,r)=>{let a=Jh.runKernel(Dp,b,x);return r([t,e,a,n]),f&&(a=Oy(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:A}}))(h,p,m)}}),Aw=hf({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Oy(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Oy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Jh.runKernel(vd,u,d)}}),bw=hf({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Oy(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},c=Jh.runKernel(kd,u,d);return l?Oy(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xw=hf({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(!1===gw(Jh.state.gradientDepth,l)){let c=yA(e,t,n,r,a,s,i);return null!=o&&(c=ay(c,o)),mw(c,l,u,d)}let c=df(e,"x","depthwiseConv2d","float32"),p=df(t,"filter","depthwiseConv2d","float32"),h=c,f=!1;3===c.rank&&(f=!0,h=Oy(c,[1,c.shape[0],c.shape[1],c.shape[2]])),Ll(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),Ll(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),Ll(h.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),Ll(My(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Fy("fused depthwiseConv2d",r,i);let m,g,y=Iy(h.shape,p.shape,n,s,r,i,!0);null!=o&&(m=df(o,"bias","fused conv2d"),[m]=Uh(m,c),Lm(y.outShape,m.shape)),null!=u&&(g=df(u,"prelu weights","fused depthwiseConv2d"));let A=(e,t)=>{Ll(Ry(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[a,o,u,d]=t,c=hw(e,u,l),p=bw(o.shape,c,a,n,r,s,i),h=Aw(o,c,a.shape,n,r,s,i);return null!=d?[p,h,fw(m,c)]:[p,h]},b={x:h,filter:p,bias:m,preluActivationWeights:g},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:d};return null==o?eb(((e,t,n)=>{let r=Jh.runKernel(Pp,b,x);return n([t,e,r]),f&&(r=Oy(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:A}}))(h,p):eb(((e,t,n,r)=>{let a=Jh.runKernel(Pp,b,x);return r([t,e,a,n]),f&&(a=Oy(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:A}}))(h,p,m)}}),ww=hf({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===gw(Jh.state.gradientDepth,s)){let l=Mm(e,t,n,r);return null!=a&&(l=ay(l,a)),mw(l,s,i,o)}let l=df(e,"a","fused matMul"),u=df(t,"b","fused matMul");[l,u]=Uh(l,u);let d=n?l.shape[l.rank-2]:l.shape[l.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Vl(f),y=Vl(m);Ll(d===c,(()=>`Error in fused matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));let A,b,x=Lm(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,h]),w=Oy(l,n?[g,d,p]:[g,p,d]),v=Oy(u,r?[y,h,c]:[y,c,h]);null!=a&&(A=df(a,"bias","fused matMul"),[A]=Uh(A,l),Lm(x,A.shape)),null!=i&&(b=df(i,"prelu weights","fused matMul"));let k=(e,t)=>{let i,o,[l,u,d,c]=t,p=hw(Oy(e,d.shape),d,s);return n||r?!n&&r?(i=Mm(p,u,!1,!1),o=Mm(p,l,!0,!1)):n&&!r?(i=Mm(u,p,!1,!0),o=Mm(l,p,!1,!1)):(i=Mm(u,p,!0,!0),o=Mm(p,l,!0,!0)):(i=Mm(p,u,!1,!0),o=Mm(l,p,!0,!1)),null!=a?[i,o,fw(c,p)]:[i,o]},I={a:w,b:v,bias:A,preluActivationWeights:b},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return null==a?eb(((e,t,n)=>{let r=Jh.runKernel(zp,I,S);return n([e,t,r]),{value:Oy(r,x),gradFunc:k}}))(w,v):eb(((e,t,n,r)=>{let a=Jh.runKernel(zp,I,S);return r([e,t,a,n]),{value:Oy(a,x),gradFunc:k}}))(w,v,A)}}),vw=hf({hammingWindow_:function(e){return uw(e,.54,.46)}}),kw=hf({hannWindow_:function(e){return uw(e,.5,.5)}}),Iw=hf({frame_:function(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Wy(e,s,t)),s+=n;if(r)for(;s<e.size;){let r=s+t-e.size,o=Py([Wy(e,s,t-r),$A([r],a)]);i.push(o),s+=n}return 0===i.length?Ux([],[0,t]):Oy(Py(i),[i.length,t])}}),Sw=hf({stft_:function(e,t,n,r,a=kw){null==r&&(r=lw(t));let s=Iw(e,t,n),i=oy(s,a(t));return $x(i,r)}}),Nw=hf({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){let i=df(e,"image","cropAndResize"),o=df(t,"boxes","cropAndResize","float32"),l=df(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Ll(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Ll(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Ll(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Ll(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Ll(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Ll("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));let d={image:i,boxes:o,boxInd:l},c={method:a,extrapolationValue:s,cropSize:r};return Jh.runKernel(Ad,d,c)}}),Tw=hf({flipLeftRight_:function(e){let t=df(e,"image","flipLeftRight","float32");Ll(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return Jh.runKernel(Ld,n,{})}}),Cw=hf({grayscaleToRGB_:function(e){let t=df(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Ll(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Ll(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,RA(t,a)}}),Ew=hf({rotateWithOffset_:function(e,t,n=0,r=.5){let a=df(e,"image","rotateWithOffset","float32");Ll(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));let s={image:a},i={radians:t,fillValue:n,center:r};return Jh.runKernel(Op,s,i)}});function _w(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),Ll(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Ll(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Ll(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Ll(1===t.rank,(()=>"scores must be a 1D tensor")),Ll(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Ll(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Rw=hf({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=df(e,"boxes","nonMaxSuppression","float32"),i=df(t,"scores","nonMaxSuppression","float32"),o=_w(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Jh.runKernel(Tc,{boxes:s,scores:i},l)}});function Mw(e,t,n){let r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||$w)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function $w(e,t){return e>t?1:e<t?-1:0}function Fw(e,t,n,r,a){return Dw(e,t,n,r,a,0)}function Ow(e,t,n,r,a,s){return Dw(e,t,n,r,a,0,!1,s,!0)}function zw(e,t,n,r,a,s){return Dw(e,t,n,r,a,s,!0)}function Dw(e,t,n,r,a,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Ww);let d=s>0?-.5/s:0,c=[],p=[];for(;c.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=c.length-1;n>=i;--n){let i=Pw(e,s,c[n]);if(i>=r){o=!0;break}if(t.score=t.score*Lw(r,d,i),t.score<=a)break}t.suppressBeginIndex=c.length,o||(t.score===n?(c.push(s),p.push(t.score)):t.score>a&&Mw(u,t,Ww))}let h=c.length,f=n-h;o&&f>0&&(c.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));let m={selectedIndices:c};return i&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function Pw(e,t,n){let r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),c=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(o-s)*(l-i),f=(c-u)*(p-d);if(h<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,d),y=Math.min(o,c),A=Math.min(l,p),b=Math.max(y-m,0)*Math.max(A-g,0);return b/(h+f-b)}function Lw(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Ww(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Bw=hf({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=df(e,"boxes","nonMaxSuppression"),o=df(t,"scores","nonMaxSuppression"),l=_w(i,o,n,r,a,s),u={boxes:i,scores:o},d={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},c=Jh.runKernel(Ec,u,d);return{selectedIndices:c[0],selectedScores:c[1]}}}),Uw=hf({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=df(e,"boxes","nonMaxSuppression"),o=df(t,"scores","nonMaxSuppression"),l=_w(i,o,n,r,a,null),u={boxes:i,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},c=Jh.runKernel(Cc,u,d);return{selectedIndices:c[0],validOutputs:c[1]}}}),Vw=hf({resizeBilinear_:function(e,t,n=!1,r=!1){let a=df(e,"images","resizeBilinear");Ll(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),Ll(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Ll(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Oy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Jh.runKernel(jc,o,l);return i?Oy(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Gw=hf({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){let a=df(e,"images","resizeNearestNeighbor");Ll(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),Ll(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Ll("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Ll(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Oy(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Jh.runKernel(Vc,o,l);return i?Oy(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),jw=hf({threshold_:function(e,t="binary",n=!1,r=.5){let a,s,i,o,l=df(e,"image","threshold"),u=l.shape[0]*l.shape[1],d=oy(Bx([r]),255);if(Ll(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),Ll(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),Ll("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),Ll("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[a,s,i]=Mx(l,[1,1,1],-1);let e=oy(a,.2989),t=oy(s,.587),n=oy(i,.114);o=ay(ay(e,t),n)}else o=e;"otsu"===t&&(d=function(e,t){let n,r,a,s,i,o,l=Bx([-1]),u=Bx([0]),d=Bx([0]);for(let c=0;c<e.size-1;c++){n=Wy(e,0,c+1),r=Wy(e,c+1),i=iy(ob(n),t),o=iy(ob(r),t);let p=ob(oy(n,sx(0,n.size)));a=iy(p,ob(n));let h=$A(r.shape,n.size),f=ay(sx(0,r.size),h),m=oy(r,f);s=iy(ob(m),ob(r));let g=ib(a,s),y=ib(a,s),A=oy(i,o);d=oy(oy(A,g),y);let b=zA(d,u);u=wA(b,d,u),l=wA(b,Bx([c]),l)}return l}(Xy(um(mx(o),"int32"),gf([]),256),u));let c=n?GA(o,d):zA(o,d);return um(oy(c,255),"int32")}}),Hw=hf({transform_:function(e,t,n="nearest",r="constant",a=0,s){let i=df(e,"image","transform","float32"),o=df(t,"transforms","transform","float32");Ll(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Ll(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Ll(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Jh.runKernel(Tp,l,u)}}),qw=hf({bandPart_:function(e,t,n){Ll(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Ll(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let r=df(e,"a","bandPart");Ll(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));let a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=Oy(sx(0,s,1,"int32"),[-1,1]),l=sx(0,i,1,"int32"),u=ib(o,l),d=Ab(GA(u,yx(+t,"int32")),DA(u,yx(-n,"int32"))),c=Tb([s,i],r.dtype);return Oy(Dx(Zx(Oy(r,[-1,s,i])).map((e=>wA(d,e,c)))),a)}}),Kw=hf({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Ll(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)Ll(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Mx(e,e.shape[0],0).map((e=>zx(e,[0])));Ll(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],r=e;for(let t=0;t<e.length;++t)n.push(Jh.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){let t=oy(ob(oy(n[r],e)),n[r]);e=ib(e,t)}return iy(e,nw(e,"euclidean"))})));return t?Dx(n,0):n}});function Xw(e,t=!1){return Jh.tidy((()=>{Ll(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],r=e.shape[1],a=MA(n),s=dm(e),i=Ux([[1]],[1,1]),o=dm(i),l=n>=r?r:n;for(let e=0;e<l;++e){let t=s,l=o,u=a;[o,s,a]=Jh.tidy((()=>{let t=Wy(s,[e,e],[n-e,1]),l=nw(t),u=Wy(s,[e,e],[1,1]),d=wA(zA(u,0),Ux([[-1]]),Ux([[1]])),c=ib(u,oy(d,l)),p=iy(t,c);o=1===p.shape[0]?dm(i):Py([i,Wy(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);let h=nb(iy(Mm(d,c),l)),f=Wy(s,[e,0],[n-e,r]),m=oy(h,o),g=Fm(o);if(0===e)s=ib(f,Mm(m,Mm(g,f)));else{let t=ib(f,Mm(m,Mm(g,f)));s=Py([Wy(s,[0,0],[e,r]),t],0)}let y=Fm(m),A=Wy(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=ib(A,Mm(Mm(A,o),y));else{let t=ib(A,Mm(Mm(A,o),y));a=Py([Wy(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Hg([t,l,u])}return!t&&n>r&&(a=Wy(a,[0,0],[n,r]),s=Wy(s,[0,0],[r,r])),[a,s]}))}var Zw=hf({qr_:function(e,t=!1){if(Ll(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Xw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Zx(Oy(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{let[n,r]=Xw(e,t);a.push(n),s.push(r)})),[Oy(Dx(a,0),e.shape),Oy(Dx(s,0),e.shape)]}}}),Yw=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(Yw||{}),Jw=hf({computeWeightedLoss_:function(e,t,n=3){let r=df(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=df(t,"weights","computeWeightedLoss"));let s=null==a?r:oy(r,a);if(0===n)return s;if(2===n)return ob(s);if(1===n){if(null==a)return Nb(s);{let e=r.size/a.size,t=iy(ob(s),ob(a));return e>1?iy(t,yx(e)):t}}if(3===n){if(null==a)return iy(ob(s),yx(r.size));{let e=oy(a,Cb(r.shape)),t=um(ob(Pb(e,yx(0))),"float32");return iy(ob(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),Qw=hf({absoluteDifference_:function(e,t,n,r=3){let a=df(e,"labels","absoluteDifference"),s=df(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=df(n,"weights","absoluteDifference")),Wl(a.shape,s.shape,"Error in absoluteDifference: ");let o=ly(ib(a,s));return Jw(o,i,r)}}),ev=hf({cosineDistance_:function(e,t,n,r,a=3){let s=df(e,"labels","cosineDistance"),i=df(t,"predictions","cosineDistance"),o=null;null!=r&&(o=df(r,"weights","cosineDistance")),Wl(s.shape,i.shape,"Error in cosineDistance: ");let l=yx(1),u=ib(l,ob(oy(s,i),n,!0));return Jw(u,o,a)}}),tv=hf({hingeLoss_:function(e,t,n,r=3){let a=df(e,"labels","hingeLoss"),s=df(t,"predictions","hingeLoss"),i=null;null!=n&&(i=df(n,"weights","hingeLoss")),Wl(a.shape,s.shape,"Error in hingeLoss: ");let o=yx(1);a=ib(oy(yx(2),a),o);let l=lx(ib(o,oy(a,s)));return Jw(l,i,r)}}),nv=hf({huberLoss_:function(e,t,n,r=1,a=3){let s=df(e,"labels","huberLoss"),i=df(t,"predictions","huberLoss"),o=null;null!=n&&(o=df(n,"weights","huberLoss")),Wl(s.shape,i.shape,"Error in huberLoss: ");let l=yx(r),u=ly(ib(i,s)),d=Rb(u,l),c=ib(u,d),p=ay(oy(yx(.5),Fb(d)),oy(l,c));return Jw(p,o,a)}}),rv=hf({logLoss_:function(e,t,n,r=1e-7,a=3){let s=df(e,"labels","logLoss"),i=df(t,"predictions","logLoss"),o=null;null!=n&&(o=df(n,"weights","logLoss")),Wl(s.shape,i.shape,"Error in logLoss: ");let l=yx(1),u=yx(r),d=nb(oy(s,qA(ay(i,u)))),c=oy(ib(l,s),qA(ay(ib(l,i),u))),p=ib(d,c);return Jw(p,o,a)}}),av=hf({meanSquaredError_:function(e,t,n,r=3){let a=df(e,"labels","meanSquaredError"),s=df(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=df(n,"weights","meanSquaredError")),Wl(a.shape,s.shape,"Error in meanSquaredError: ");let o=Ox(a,s);return Jw(o,i,r)}}),sv=hf({sigmoidCrossEntropy_:function(e,t,n,r=0,a=3){let s=df(e,"multiClassLabels","sigmoidCrossEntropy"),i=df(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=df(n,"weights","sigmoidCrossEntropy")),Wl(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let e=yx(r),t=yx(1),n=yx(.5);s=ay(oy(s,ib(t,e)),oy(n,e))}let l=function(e,t){let n=df(e,"labels","sigmoidCrossEntropyWithLogits"),r=df(t,"logits","sigmoidCrossEntropyWithLogits");Wl(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=lx(r),s=oy(r,n),i=KA(CA(nb(ly(r))));return ay(ib(a,s),i)}(s,i);return Jw(l,o,a)}}),iv=hf({softmaxCrossEntropy_:function(e,t,n,r=0,a=3){let s=df(e,"onehotLabels","softmaxCrossEntropy"),i=df(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=df(n,"weights","softmaxCrossEntropy")),Wl(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let e=yx(r),t=yx(1),n=yx(s.shape[1]);s=ay(oy(s,ib(t,e)),iy(e,n))}let l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return eb(((e,t,r)=>{let a=yb(t,[n],!0),s=ib(um(t,"float32"),a);r([e,s]);let i=nb(oy(s,e));return{value:ob(i,[n]),gradFunc:(e,t)=>{let[r,a]=t,s=pb(e.shape,[n]);return[oy(Oy(e,s),ib(um(r,"float32"),CA(a))),oy(Oy(e,s),ib(CA(a),um(r,"float32")))]}}}))(e,t)}(s,i);return Jw(l,o,a)}}),ov=hf({sparseFillEmptyRows_:function(e,t,n,r){let a=df(e,"indices","sparseFillEmptyRows","int32"),s=df(t,"values","sparseFillEmptyRows"),i=df(n,"denseShape","sparseFillEmptyRows","int32"),o=df(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:a,values:s,denseShape:i,defaultValue:o},u=Jh.runKernel(cp,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),lv=hf({sparseReshape_:function(e,t,n){let r=df(e,"inputIndices","sparseReshape","int32"),a=df(t,"inputShape","sparseReshape","int32"),s=df(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=Jh.runKernel(pp,i);return{outputIndices:o[0],outputShape:o[1]}}}),uv=hf({sparseSegmentMean_:function(e,t,n){let r=df(e,"data","sparseSegmentMean"),a=df(t,"indices","sparseSegmentMean","int32"),s=df(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Jh.runKernel(hp,i)}}),dv=hf({sparseSegmentSum_:function(e,t,n){let r=df(e,"data","sparseSegmentSum"),a=df(t,"indices","sparseSegmentSum","int32"),s=df(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return Jh.runKernel(fp,i)}}),cv=hf({stringNGrams_:function(e,t,n,r,a,s,i,o){let l=df(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=df(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},c={data:l,dataSplits:u},p=Jh.runKernel(bp,c,d);return{nGrams:p[0],nGramsSplits:p[1]}}}),pv=hf({stringSplit_:function(e,t,n=!0){let r=df(e,"input","stringSplit","string"),a=df(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=Jh.runKernel(xp,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),hv=hf({stringToHashBucketFast_:function(e,t){let n=df(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return Jh.runKernel(wp,a,r)}}),fv={fft:Ex,ifft:_x,rfft:$x,irfft:Rx},mv={hammingWindow:vw,hannWindow:kw,frame:Iw,stft:Sw},gv={flipLeftRight:Tw,grayscaleToRGB:Cw,resizeNearestNeighbor:Gw,resizeBilinear:Vw,rotateWithOffset:Ew,cropAndResize:Nw,nonMaxSuppression:Rw,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=df(e,"boxes","nonMaxSuppressionAsync"),i=df(t,"scores","nonMaxSuppressionAsync"),o=_w(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],d=l[1],{selectedIndices:c}=Fw(u,d,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Bx(c,"int32")},nonMaxSuppressionWithScore:Bw,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=df(e,"boxes","nonMaxSuppressionAsync"),o=df(t,"scores","nonMaxSuppressionAsync"),l=_w(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),d=u[0],c=u[1],{selectedIndices:p,selectedScores:h}=zw(d,c,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Bx(p,"int32"),selectedScores:Bx(h)}},nonMaxSuppressionPadded:Uw,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=df(e,"boxes","nonMaxSuppressionAsync"),o=df(t,"scores","nonMaxSuppressionAsync"),l=_w(i,o,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,c=l.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Ow(p,h,u,d,c,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Bx(f,"int32"),validOutputs:yx(m,"int32")}},threshold:jw,transform:Hw},yv={bandPart:qw,gramSchmidt:Kw,qr:Zw},Av={absoluteDifference:Qw,computeWeightedLoss:Jw,cosineDistance:ev,hingeLoss:tv,huberLoss:nv,logLoss:rv,meanSquaredError:av,sigmoidCrossEntropy:sv,softmaxCrossEntropy:iv},bv={sparseFillEmptyRows:ov,sparseReshape:lv,sparseSegmentMean:uv,sparseSegmentSum:dv},xv={stringNGrams:cv,stringSplit:pv,stringToHashBucketFast:hv},wv=class extends xg{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Hg(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return QA(e,t)}dispose(){null!=this.iterations_&&Hg(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:yx(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(wv,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var vv=class extends wv{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Jh.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Jh.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:jg((()=>vA(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:jg((()=>vA(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;jg((()=>{let e=ay(oy(i,this.rho),oy(Fb(s),1-this.rho)),t=oy(iy(Fx(ay(o,this.epsilon)),Fx(ay(i,this.epsilon))),s),n=ay(oy(o,this.rho),oy(Fb(t),1-this.rho));i.assign(e),o.assign(n);let a=ay(oy(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Hg(this.accumulatedGrads.map((e=>e.variable))),Hg(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};vv.className="Adadelta",vg(vv);var kv=class extends wv{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Jh.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:jg((()=>$A(r.shape,this.initialAccumulatorValue).variable(!1)))});let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let s=this.accumulatedGrads[n].variable;jg((()=>{let e=ay(s,Fb(a));s.assign(e);let t=ay(oy(iy(a,Fx(ay(e,Jh.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Hg(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};kv.className="Adagrad",vg(kv);var Iv=class extends wv{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],jg((()=>{this.accBeta1=yx(t).variable(),this.accBeta2=yx(n).variable()})),null==r&&(this.epsilon=Jh.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);jg((()=>{let n=ib(1,this.accBeta1),r=ib(1,this.accBeta2);t.forEach(((t,a)=>{let s=Jh.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:jg((()=>vA(s).variable(i)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:jg((()=>vA(s).variable(i)))});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,d=ay(oy(l,this.beta1),oy(o,1-this.beta1)),c=ay(oy(u,this.beta2),oy(Fb(o),1-this.beta2)),p=iy(d,n),h=iy(c,r);l.assign(d),u.assign(c);let f=ay(oy(iy(p,ay(Fx(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(oy(this.accBeta1,this.beta1)),this.accBeta2.assign(oy(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Hg(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Hg(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),jg((()=>{this.accBeta1.assign(Kb(this.beta1,this.iterations_+1)),this.accBeta2.assign(Kb(this.beta2,this.iterations_+1))}));let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};Iv.className="Adam",vg(Iv);var Sv=class extends wv{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],jg((()=>{this.iteration=yx(0).variable(),this.accBeta1=yx(t).variable()})),null==r&&(this.epsilon=Jh.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);jg((()=>{let n=ib(1,this.accBeta1),r=iy(-this.learningRate,ay(oy(this.iteration,this.decay),1));t.forEach(((t,a)=>{let s=Jh.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:vA(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:vA(s).variable(i)});let o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,d=ay(oy(l,this.beta1),oy(o,1-this.beta1)),c=oy(u,this.beta2),p=ly(o),h=Sb(c,p);l.assign(d),u.assign(h);let f=ay(oy(iy(r,n),iy(d,ay(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign(ay(this.iteration,1)),this.accBeta1.assign(oy(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Hg(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Hg(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};Sv.className="Adamax",vg(Sv);var Nv=class extends wv{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let a=Jh.registeredVariables[t];jg((()=>{let e=ay(oy(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=qg(yx(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Nv.className="SGD",vg(Nv);var Tv=class extends Nv{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=yx(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Jh.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:jg((()=>vA(r).variable(!1)))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&jg((()=>{let e,t=ay(oy(this.m,a),s);e=this.useNesterov?ay(oy(this.c,ay(s,oy(t,this.m))),r):ay(oy(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Hg(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Tv.className="Momentum",vg(Tv);var Cv=class extends wv{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Jh.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let r=Jh.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:jg((()=>vA(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:jg((()=>vA(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:jg((()=>vA(r).variable(a)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;jg((()=>{let e=ay(oy(i,this.decay),oy(Fb(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,a=ay(oy(t,this.decay),oy(s,1-this.decay)),l=iy(oy(s,this.learningRate),Fx(ib(e,ay(Fb(a),this.epsilon)))),u=ay(oy(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);let d=ib(r,u);r.assign(d)}else{let e=ay(oy(i,this.decay),oy(Fb(s),1-this.decay)),t=ay(oy(o,this.momentum),iy(oy(s,this.learningRate),Fx(ay(e,this.epsilon))));i.assign(e),o.assign(t);let n=ib(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Hg(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Hg(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Hg(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Cv.className="RMSProp",vg(Cv);var Ev=class{static sgd(e){return new Nv(e)}static momentum(e,t,n=!1){return new Tv(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Cv(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Iv(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new vv(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Sv(e,t,n,r,a)}static adagrad(e,t=.1){return new kv(e,t)}},_v={sgd:Ev.sgd,momentum:Ev.momentum,adadelta:Ev.adadelta,adagrad:Ev.adagrad,rmsprop:Ev.rmsprop,adamax:Ev.adamax,adam:Ev.adam},Rv="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Mv(){return new Promise((e=>Rv((()=>e()))))}var $v={};function Fv(e,t){let n=e[0].length;e.forEach(((e,t)=>{Ll(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Ll(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)Ll(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Ov(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}il($v,{ERF_A1:()=>qv,ERF_A2:()=>Kv,ERF_A3:()=>Xv,ERF_A4:()=>Zv,ERF_A5:()=>Yv,ERF_P:()=>Hv,PARALLELIZE_THRESHOLD:()=>zv,SELU_SCALE:()=>jv,SELU_SCALEALPHA:()=>Gv,applyActivation:()=>mw,assertAndGetBroadcastShape:()=>Lm,assertAxesAreInnerMostDims:()=>hb,assertParamsConsistent:()=>Fv,assignToTypedArray:()=>rk,axesAreInnerMostDims:()=>ub,calculateShapes:()=>Jm,checkEinsumDimSizes:()=>pk,checkPadOnDimRoundingMode:()=>Fy,combineLocations:()=>db,complexWithEvenIndex:()=>ek,complexWithOddIndex:()=>tk,computeConv2DInfo:()=>Iy,computeConv3DInfo:()=>Sy,computeDefaultPad:()=>Ny,computeDilation2DInfo:()=>wy,computeOptimalWindowSize:()=>Dv,computeOutAndReduceShapes:()=>cb,computeOutShape:()=>Ov,computePool2DInfo:()=>vy,computePool3DInfo:()=>ky,convertConv2DDataFormat:()=>$y,decodeEinsumEquation:()=>dk,eitherStridesOrDilationsAreOne:()=>My,expandShapeToKeepDim:()=>pb,exponent:()=>sk,exponents:()=>ak,fromStringArrayToUint8:()=>Fk,fromUint8ToStringArray:()=>$k,getAxesPermutation:()=>fb,getBroadcastDims:()=>Dm,getComplexWithIndex:()=>nk,getEinsumComputePath:()=>hk,getEinsumPermutation:()=>ck,getFusedBiasGradient:()=>fw,getFusedDyActivation:()=>hw,getImageCenter:()=>Pv,getInnerMostAxes:()=>gb,getPermuted:()=>Wv,getReductionAxes:()=>Pm,getReshaped:()=>Lv,getReshapedPermuted:()=>Bv,getSliceBeginCoords:()=>Uv,getSliceSize:()=>Vv,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>yk,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ak,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>bk,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>vk,getSparseReshapeInputOutputMismatchErrorMessage:()=>Ik,getSparseReshapeInputOutputMultipleErrorMessage:()=>kk,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>xk,getSparseReshapeNegativeOutputDimErrorMessage:()=>wk,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Ck,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Sk,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Nk,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Tk,getUndoAxesPermutation:()=>mb,isIdentityPermutation:()=>fk,log:()=>Wp,mergeRealAndImagArrays:()=>Jv,prepareAndValidate:()=>Km,prepareSplitSize:()=>gk,segment_util:()=>Ek,shouldFuse:()=>gw,slice_util:()=>Qm,splitRealAndImagArrays:()=>Qv,tupleValuesAreOne:()=>Ry,upcastType:()=>Wh,validateInput:()=>Ym,validateUpdateShape:()=>Zm,warn:()=>Lp});var zv=30;function Dv(e){return e<=zv?e:fu(e,Math.floor(Math.sqrt(e)))}function Pv(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Lv(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Wv(e,t,n=!0){let r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{let n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Bv(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Uv(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Vv(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Gv=1.7580993408473768,jv=1.0507009873554805,Hv=.3275911,qv=.254829592,Kv=-.284496736,Xv=1.421413741,Zv=-1.453152027,Yv=1.061405429;function Jv(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Qv(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ek(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function tk(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function nk(e,t){return{real:e[2*t],imag:e[2*t+1]}}function rk(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ak(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function sk(e,t,n){let r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var ik="->",ok=/->/g,lk=",",uk="...";function dk(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(ok,"").length)/ik.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${ik}").`);let[r,a]=e.split(ik);Ll(-1===r.indexOf(uk),(()=>`The ellipsis notation ("${uk}") is not supported yet.`));let s=r.split(lk),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){let t=r[e];-1===o.indexOf(t)&&t!==lk&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,d=[];for(let e=a.length;e<u;++e)d.push(e);return{allDims:o,summedDims:d,idDims:l}}function ck(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function pk(e,t,n){let r=new Array(e);for(let e=0;e<n.length;++e){let a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:Ll(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function hk(e,t){let n=e,r=[],a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);let s=[];for(let e=0;e<n.length;++e){let a=mk(t,n[e]);for(let t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function fk(e){return e.every(((e,t)=>e===t))}function mk(e,t){let n=[];for(let r=0;r<e.length;++r)(0===e[r].length||-1!==e[r].indexOf(t)||-1===t)&&n.push(r);return n}function gk(e,t,n=0){let r=[];if("number"==typeof t)Ll(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{Ll(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let a=t.indexOf(-1);if(-1!==a){let r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Ll(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function yk(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Ak(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bk(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function xk(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wk(e,t){return`size ${e} must be non-negative, not ${t}`}function vk(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function kk(e,t){return`Input to reshape is a SparseTensor with ${Vl(e)}\n  dense values, but the requested shape requires a multiple of ${Vl(t)}. inputShape=${e} outputShape= ${t}`}function Ik(e,t){return`Input to reshape is a tensor with ${Vl(e)} dense values, but the requested shape has ${Vl(t)}. inputShape=${e} outputShape=${t}`}function Sk(){return"segment ids must be >= 0"}function Nk(){return"segment ids are not increasing"}function Tk(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Ck(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Ek={};function _k(e,t){let n,r=!1;for(e<=zv?(n=e,r=!0):n=fu(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=fu(e,n+1);return n}function Rk(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Mk(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,d=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:i,outputShape:o}}function $k(e){try{return e.map((e=>Ah(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Fk(e){return e.map((e=>yh(e)))}il(Ek,{collectGatherOpShapeInfo:()=>Mk,computeOutShape:()=>Rk,segOpComputeOptimalWindowSize:()=>_k});var Ok={};il(Ok,{nonMaxSuppressionV3Impl:()=>Fw,nonMaxSuppressionV4Impl:()=>Ow,nonMaxSuppressionV5Impl:()=>zw,whereImpl:()=>Jx});var zk={kernelName:$u,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,Px(um(n,"float32"),-1))}}},Dk={kernelName:Fu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Fb(um(n,"float32")),r=Fx(ib(yx(1),t));return nb(iy(e,r))}}}},Pk={kernelName:Ou,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Fx(ib(Fb(um(n,"float32")),1));return iy(e,t)}}}},Lk={kernelName:zu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=e,r=Pm(n.shape,a);return r.length>0&&(t=ob(t,r)),Oy(t,n.shape)},b:()=>{let t=e,n=Pm(r.shape,a);return n.length>0&&(t=ob(t,n)),Oy(t,r.shape)}}}},Wk={kernelName:Du,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Bk={kernelName:Wu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>vA(n)}}},Uk={kernelName:Bu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>vA(n)}}},Vk={kernelName:Uu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,Fx(ib(yx(1),Fb(um(n,"float32")))))}}},Gk={kernelName:Vu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Fx(ay(yx(1),Fb(um(n,"float32"))));return iy(e,t)}}}},jk={kernelName:Hu,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=ay(Fb(n),Fb(r)),s=oy(e,iy(r,t)),i=Pm(n.shape,a);return i.length>0&&(s=ob(s,i)),Oy(s,n.shape)},b:()=>{let t=ay(Fb(n),Fb(r)),s=nb(oy(e,iy(n,t))),i=Pm(r.shape,a);return i.length>0&&(s=ob(s,i)),Oy(s,r.shape)}}}},Hk={kernelName:Gu,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,ay(Fb(um(n,"float32")),1))}}},qk={kernelName:ju,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,ib(yx(1),Fb(um(n,"float32"))))}}},Kk=hf({avgPool3dGrad_:function(e,t,n,r,a,s){let i=df(e,"dy","avgPool3dGrad"),o=df(t,"input","avgPool3dGrad"),l=i,u=o,d=!1;4===o.rank&&(d=!0,l=Oy(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Oy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Ll(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Ll(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Fy("avgPool3dGrad",a,s);let c={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},h=Jh.runKernel(Zu,c,p);return d?Oy(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Xk={kernelName:Xu,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Kk(e,r,a,s,i,o)}}},Zk=hf({avgPoolGrad_:function(e,t,n,r,a){let s=df(e,"dy","avgPoolGrad"),i=df(t,"input","avgPoolGrad");Ll(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Oy(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Oy(s,[1,s.shape[0],s.shape[1],s.shape[2]])),Ll(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Ll(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let d={dy:l,input:o},c={filterSize:n,strides:r,pad:a},p=Jh.runKernel(Ku,d,c);return u?Oy(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Yk={kernelName:qu,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Zk(e,r,a,s,i)}}},Jk={kernelName:Yu,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Mm(e,a,!1,!1),b:()=>Mm(e,r,!0,!1)}:s&&!i?{a:()=>Mm(a,e,!1,!0),b:()=>Mm(r,e,!1,!1)}:{a:()=>Mm(a,e,!0,!0),b:()=>Mm(e,r,!0,!0)}:{a:()=>Mm(e,a,!1,!0),b:()=>Mm(r,e,!0,!1)}}},Qk={kernelName:Ju,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Hb(e,r,a)}}},eI={kernelName:ed,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>ob(e,o,!0)}}},tI={kernelName:nd,gradFunc:e=>({x:()=>e.clone()})},nI={kernelName:rd,gradFunc:e=>({x:()=>vA(e)})},rI={kernelName:ad,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>wA(Ab(DA(r,a),GA(r,s)),e,vA(e))}}},aI={kernelName:id,inputsToSave:["x"],gradFunc:zk.gradFunc},sI={kernelName:od,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map((e=>e.shape)),{axis:a}=n,s=Ql(a,t[0].shape)[0],i=r.map((e=>e[s]));return Mx(e,i,s).map((e=>()=>e))}},iI={kernelName:ld,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return Ll(Ry(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>iA(r.shape,e,a,i,o,l),filter:()=>pw(r,e,a.shape,i,o,l)}}},oI={kernelName:dd,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>aA(e,a,s,i,o,1,l),filter:()=>pw(e,r,a.shape,s,i,o,l)}}},lI=hf({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Oy(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Oy(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Ll(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),Ll(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Ll(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Ll(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),Ll(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Jh.runKernel(pd,o,l)}}),uI={kernelName:cd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;Ll(Ry(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));let[i,o]=t;return{x:()=>uA(i.shape,e,o,a,s),filter:()=>lI(i,e,o.shape,a,s)}}},dI={kernelName:fd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(nb(vx(um(n,"float32"))),e)}}},cI={kernelName:md,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(kx(um(n,"float32")),e)}}},pI={kernelName:yd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let t=fb([a],r.rank),n=fA(e,a,s,!i);return null!=t&&(n=Fm(n,t)),n}}}},hI={kernelName:wd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Ll(Ry(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return Ll(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Ll(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Ll(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Ll(My(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Fy("depthwiseConv2d",s,i),{x:()=>bw(l.shape,e,u,a,s,o,i),filter:()=>Aw(l,e,u.shape,a,s,o,i)}}},fI={kernelName:Sd,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Jh.runKernel(Nd,s,n),filter:()=>Jh.runKernel(Td,i,n)}}},mI={kernelName:_d,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>Jh.runKernel(Rd,r)}}},gI={kernelName:Md,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=oy(CA(nb(Fb(n))),2/Math.sqrt(Math.PI));return{x:()=>oy(e,r)}}},yI={kernelName:Fd,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,n)}}},AI={kernelName:Od,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>Oy(e,n.shape)}}},bI={kernelName:zd,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,CA(n))}}},xI={kernelName:Wd,gradFunc:e=>({x:()=>vA(e)})},wI={kernelName:Bd,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=iy(e,um(r,"float32")),s=Pm(n.shape,a);return s.length>0?Oy(ob(t,s),n.shape):t},b:()=>{let t=oy(e,um(n,"float32")),s=Pm(r.shape,a);s.length>0&&(t=Oy(ob(t,s),r.shape));let i=Fb(r);return nb(iy(t,um(i,"float32")))}}}},vI={kernelName:Ud,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?yx(1):o,u=Pm(s.shape,a.shape),d=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)d.push(a.shape[e]);d.push(1)}let c=ib(a,s),p=oy(e,l),h=gx(ay(i,yx(r))),f=oy(oy(oy(h,h),h),yx(-.5));return{x:()=>1===s.rank?Oy(oy(oy(e,RA(Oy(h,[1,1,1,s.shape[0]]),d)),l),a.shape):Oy(oy(oy(e,h),l),a.shape),mean:()=>{let e=oy(oy(h,yx(-1)),p);return 1===s.rank&&(e=ob(e,u)),Oy(e,s.shape)},variance:()=>{let e=oy(oy(f,c),p);return 1===s.rank&&(e=ob(e,u)),Oy(e,s.shape)},scale:()=>{let t=oy(c,h),n=oy(e,t);return 1===s.rank&&(n=ob(n,u)),Oy(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=ob(t,u)),Oy(t,s.shape)}}}},kI={kernelName:Vd,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=Ql(s,r.shape)[0];return{x:()=>{let t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),d=u.length,c=II(0,l),p=II(l+1,l+1+d),h=SI([o,[n],u]),f=Oy(e,h),m=Oy(a,[n]),g=SI([[l],c,p]),y=Fm(f,g),A=Xx(y,m,r.shape[i]),b=mb(g);return A=Fm(A,b),A},indices:()=>a}}};function II(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function SI(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var NI={kernelName:Hd,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>vA(n),b:()=>vA(r)}}},TI={kernelName:qd,gradFunc:e=>({x:()=>um(e,"float32")})},CI={kernelName:Zd,gradFunc:e=>({x:()=>vA(e)})},EI={kernelName:Yd,gradFunc:e=>({x:()=>vA(e)})},_I={kernelName:Jd,gradFunc:e=>({x:()=>vA(e)})},RI={kernelName:Qd,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=zA(r,0);return{x:()=>wA(s,e,oy(e,a))}}},MI={kernelName:ac,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,ay(n,1))}}},$I={kernelName:rc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,um(n,"float32"))}}},FI={kernelName:lc,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let t=CA(r);return ib(e,oy(ob(e,a,!0),t))}}}},OI=hf({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Jh.runKernel(dc,o,l)}}),zI={kernelName:uc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>OI(r,a,e,s,i,o,l)}}};function DI(e,t,n,r){return t.rank<n.rank&&(t=Oy(t,pb(t.shape,r))),e.rank<n.rank&&(e=Oy(e,pb(e.shape,r))),{x:()=>oy(e,um(xA(n,t),e.dtype))}}var PI={kernelName:cc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=DI(e,t[1],s,Ql(a,s.shape));return{x:()=>i.x()}}},LI={kernelName:pc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>oy(e,um(DA(n,r),"float32")),b:()=>oy(e,um(VA(n,r),"float32"))}}},WI=hf({maxPool3dGrad_:function(e,t,n,r,a,s,i){let o=df(e,"dy","maxPool3dGrad"),l=df(t,"input","maxPool3dGrad"),u=df(n,"output","maxPool3dGrad"),d=o,c=l,p=u,h=!1;4===l.rank&&(h=!0,d=Oy(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=Oy(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Oy(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Ll(5===d.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`)),Ll(5===c.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),Ll(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Fy("maxPool3dGrad",s,i);let f={dy:d,input:c,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Jh.runKernel(gc,f,m);return h?Oy(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),BI={kernelName:mc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>WI(e,r,a,s,i,o,l)}}},UI=hf({maxPoolGrad_:function(e,t,n,r,a,s,i){let o=df(e,"dy","maxPoolGrad"),l=df(t,"input","maxPoolGrad"),u=df(n,"output","maxPoolGrad");Ll(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Ll(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Ll(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Fy("maxPoolGrad",s,i);let d={dy:o,input:l,output:u},c={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Jh.runKernel(fc,d,c)}}),VI={kernelName:hc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>UI(e,r,a,s,i,o)}}},GI={kernelName:Ac,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=Ql(a,r.shape),i=Vl(cb(r.shape,s)[1]);return{x:()=>{let t=r.shape.slice();s.forEach((e=>{t[e]=1}));let n=Oy(e,t);return iy(oy(n,Cb(r.shape,"float32")),i)}}}},jI={kernelName:bc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=DI(e,i,s,Ql(a,s.shape));return{x:()=>o.x()}}},HI={kernelName:xc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>oy(e,um(GA(n,r),"float32")),b:()=>oy(e,um(zA(n,r),"float32"))}}},qI={kernelName:wc,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Wy(e,s,r.shape)}}},KI={kernelName:vc,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=Pm(n.shape,a);return t.length>0?Oy(ob(e,t),n.shape):e},b:()=>{let t=oy(e,nb(FA(iy(n,r)))),s=Pm(r.shape,a);return s.length>0?Oy(ob(t,s),r.shape):t}}}},XI={kernelName:Ic,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=oy(e,um(r,"float32")),s=Pm(n.shape,a);return s.length>0?Oy(ob(t,s),n.shape):t},b:()=>{let t=oy(e,um(n,"float32")),s=Pm(r.shape,a);return s.length>0?Oy(ob(t,s),r.shape):t}}}},ZI={kernelName:Sc,gradFunc:e=>({x:()=>nb(e)})},YI={kernelName:_c,gradFunc:e=>({x:()=>vA(e)})},JI={kernelName:Mc,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Zx(e,r).map((e=>()=>e))}},QI={kernelName:$c,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Wy(e,s,r.shape)}}},eS={kernelName:Oc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=Lm(s.shape,i.shape);return{a:()=>{let t=um(i,"float32"),n=oy(e,oy(t,Kb(s,ib(t,yx(1))))),r=Pm(s.shape,o);return r.length>0&&(n=ob(n,r)),Oy(n,s.shape)},b:()=>{let t=zA(s,0),n=wA(t,qA(s),vA(s)),r=oy(e,oy(a,n)),l=Pm(i.shape,o);return l.length>0&&(r=ob(r,l)),Oy(r,i.shape)}}}},tS={kernelName:zc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=zA(n,0);return{x:()=>wA(a,e,oy(e,r)),alpha:()=>{let t=wA(a,vA(e),oy(e,n)),s=Pm(r.shape,e.shape);return s.length>0&&(t=ob(t,s)),Oy(t,r.shape)}}}},nS={kernelName:Cd,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=iy(e,um(r,"float32")),s=Pm(n.shape,a);return s.length>0?Oy(ob(t,s),n.shape):t},b:()=>{let t=oy(e,um(n,"float32")),s=Pm(r.shape,a);s.length>0&&(t=Oy(ob(t,s),r.shape));let i=Fb(r);return nb(iy(t,um(i,"float32")))}}}},rS={kernelName:Wc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,nb(Fb(n)))}}},aS={kernelName:qc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=oy(GA(n,6),Px(n));return{x:()=>oy(e,um(r,"float32"))}}},sS={kernelName:Bc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,um(Px(n),"float32"))}}},iS={kernelName:Uc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Oy(e,n.shape)}}},oS={kernelName:jc,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Jh.runKernel(Hc,a,n)}}},lS={kernelName:Vc,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>Jh.runKernel(Gc,a,n)}}},uS={kernelName:Kc,gradFunc:(e,t,n)=>{let{dims:r}=n,a=Ql(r,e.shape);return{x:()=>dx(e,a)}}},dS={kernelName:Xc,gradFunc:e=>({x:()=>vA(e)})},cS={kernelName:Zc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>nb(iy(e,oy(Kb(n,1.5),2)))}}},pS={kernelName:Jc,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>um(vA(n),"float32"),t:()=>oy(e,um(n,e.dtype)),e:()=>oy(e,um(bb(n),e.dtype))}}},hS={kernelName:Qc,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=zA(n,yx(0)),r=yx(Gv),a=yx(jv),s=oy(e,a),i=oy(oy(e,r),CA(um(n,"float32")));return wA(t,s,i)}}}},fS={kernelName:ap,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,oy(n,ib(yx(1),n)))}}},mS={kernelName:rp,gradFunc:e=>({x:()=>vA(e)})},gS={kernelName:tp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(cA(um(n,"float32")),e)}}},yS={kernelName:np,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(pA(um(n,"float32")),e)}}},AS={kernelName:ep,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=gg(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Bb(e,u)}}},bS={kernelName:dp,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=oy(e,r);return{logits:()=>ib(s,oy(ob(s,[a],!0),r))}}},xS={kernelName:sp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,Ly(n))}}},wS={kernelName:lp,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>Vy(e,r,a)}}},vS={kernelName:up,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>Py(e,r)}}},kS={kernelName:ip,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,oy(Fx(um(n,"float32")),2))}}},IS={kernelName:yp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(e,oy(um(n,"float32"),2))}}},SS={kernelName:gp,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=yx(2);return{a:()=>oy(e,oy(a,ib(n,r))),b:()=>oy(e,oy(a,ib(r,n)))}}},NS={kernelName:$p,gradFunc:e=>({x:()=>vA(e)})},TS={kernelName:vp,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=Lm(n.shape,r.shape);return{a:()=>{let t=e,r=Pm(n.shape,a);return r.length>0&&(t=ob(t,r)),Oy(t,n.shape)},b:()=>{let t=e,n=Pm(r.shape,a);return n.length>0&&(t=ob(t,n)),Oy(nb(t),r.shape)}}}},CS={kernelName:op,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;Ql(s,r.shape).forEach((e=>{a[e]=1}));let i=Oy(e,a),o=oy(i,Cb(r.shape,"float32"));return{x:()=>o}}},ES={kernelName:kp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iy(e,Fb(cA(n)))}}},_S={kernelName:Ip,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>oy(ib(yx(1),Fb(n)),e)}}},RS={kernelName:Sp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let t=vA(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=ay(t,Wy(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=ay(t,Wy(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=ay(t,Wy(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=ay(t,Wy(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},MS={kernelName:Cp,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=mb(a);return{x:()=>Fm(e,s)}}},$S={kernelName:_p,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Dx(e,a)}}},FS={kernelName:Rp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>function(e,t){let n=Sb(t,vA(t)),r=OA(e,n),a=DA(t,yx(0,"int32")),s=r.rank-a.rank;for(let e=0;e<s;++e)a=EA(a,e+1);a=Ab(a,Cb(r.shape,"bool"));let i=vA(r);return wA(a,r,i)}(e,n)}}},OS={kernelName:Mp,gradFunc:e=>({x:()=>vA(e)})},zS=[zk,Dk,Pk,Lk,Wk,Bk,Uk,Vk,Gk,jk,Hk,qk,Xk,Yk,Jk,Qk,eI,tI,nI,rI,aI,sI,oI,iI,uI,dI,cI,pI,hI,fI,nS,mI,gI,yI,AI,bI,wI,xI,vI,kI,NI,TI,CI,EI,_I,RI,MI,$I,FI,zI,PI,PI,LI,BI,VI,GI,jI,HI,qI,KI,XI,ZI,{kernelName:Rc,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Tb(n.shape,"float32")}}},YI,JI,QI,QI,eS,tS,rS,aS,sS,iS,oS,lS,uS,dS,cS,pS,hS,fS,mS,gS,yS,AS,bS,xS,wS,wS,vS,vS,kS,SS,IS,NS,TS,CS,ES,_S,RS,MS,$S,FS,OS];for(let e of zS)qp(e);var DS,PS={};function LS(){return null==DS&&(DS=ny().epsilon()),DS}il(PS,{maxNorm:()=>xN,minMaxNorm:()=>kN,nonNeg:()=>vN,unitNorm:()=>wN});var WS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,WS.prototype)}},BS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,BS.prototype)}},US=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,US.prototype)}},VS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,VS.prototype)}},GS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,GS.prototype)}};function jS(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function HS(e,t){if(!e)throw new GS(t)}function qS(e,t){let n=0;for(let r of e)r===t&&n++;return n}function KS(e){return 1===e.length?e[0]:e}function XS(e){return Array.isArray(e)?e:[e]}function ZS(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function YS(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var JS={};function QS(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function eN(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>eN(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?eN(t):e[n]=t.value)}}}function tN(e,t={},n={},r="object",a=!1){if("string"==typeof e){let a,s=e;if(s in n)a=n[s];else if(s in JS)a=JS[s];else if(a=t[s],null==a)throw new US(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s=e;if(null==s.className||null==s.config)throw new US(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in JS?[i,o]=JS.className:l in t&&([i,o]=t[l]),null==i)throw new US(`Unknown ${r}: ${l}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(JS))e[t]=JS[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t={...JS};for(let e of Object.keys(n))JS[e]=n[e];eN(s.config);let r=o(i,s.config,n,a);return JS={...t},r}{let e={...JS};for(let e of Object.keys(n))JS[e]=n[e];let t=new i(s.config);return JS={...e},t}}}function nN(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function rN(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function aN(e){if(null==e)throw new US(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function sN(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new US(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function iN(e,t,n=0,r=1/0){return HS(n>=0),HS(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function oN(e,t){Array.isArray(e)?(Jp.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>oN(e,`element ${n+1} of ${t}`)))):Jp.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${lN(e)}.`))}function lN(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>lN(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function uN(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function dN(e,t){return jg((()=>Fx(ob(oy(e,e),t,!0))))}var cN=class extends bg.Serializable{getConfig(){return{}}},pN=class extends cN{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return jg((()=>{let t=dN(e,this.axis),n=Qy(t,0,this.maxValue);return oy(e,iy(n,ay(LS(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};pN.className="MaxNorm",bg.registerClass(pN);var hN=class extends cN{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return jg((()=>iy(e,ay(LS(),dN(e,this.axis)))))}getConfig(){return{axis:this.axis}}};hN.className="UnitNorm",bg.registerClass(hN);var fN=class extends cN{apply(e){return lx(e)}};fN.className="NonNeg",bg.registerClass(fN);var mN=class extends cN{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return jg((()=>{let t=dN(e,this.axis),n=ay(oy(this.rate,Qy(t,this.minValue,this.maxValue)),oy(1-this.rate,t));return oy(e,iy(n,ay(LS(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};mN.className="MinMaxNorm",bg.registerClass(mN);var gN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function yN(e){return QS(e)}function AN(e,t={}){return tN(e,bg.SerializationMap.getMap().classNameMap,t,"constraint")}function bN(e){return null==e?null:"string"==typeof e?AN({className:e in gN?gN[e]:e,config:{}}):e instanceof cN?e:AN(e)}function xN(e){return new pN(e)}function wN(e){return new hN(e)}function vN(){return new fN}function kN(e){return new mN(e)}var IN={};il(IN,{constant:()=>RT,glorotNormal:()=>PT,glorotUniform:()=>DT,heNormal:()=>LT,heUniform:()=>WT,identity:()=>OT,leCunNormal:()=>BT,leCunUniform:()=>UT,ones:()=>_T,orthogonal:()=>VT,randomNormal:()=>$T,randomUniform:()=>MT,truncatedNormal:()=>FT,varianceScaling:()=>zT,zeros:()=>ET});var SN=["channelsFirst","channelsLast"],NN=["nearest","bilinear"],TN=["valid","same","causal"],CN=["max","avg"],EN=["sum","mul","concat","ave"],_N=new Map;function RN(e){sN(SN,"DataFormat",e)}function MN(e){sN(TN,"PaddingMode",e)}function $N(e){sN(CN,"PoolMode",e)}var FN=[];function ON(e,t){FN.push(e);try{let e=t();return FN.pop(),e}catch(e){throw FN.pop(),e}}function zN(e){if(!LN(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===FN.length?"":FN.join("/")+"/")+e}function DN(e){if(!LN(e))throw new Error("Not a valid tensor name: '"+e+"'");_N.has(e)||_N.set(e,0);let t=_N.get(e);if(_N.set(e,_N.get(e)+1),t>0){let n=`${e}_${t}`;return _N.set(n,1),n}return e}var PN=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function LN(e){return!!e.match(PN)}function WN(e){return e===parseInt(e.toString(),10)}function BN(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function UN(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function VN(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function GN(e,t){if(t<e)throw new US(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}function jN(e,t){return um(e,t)}function HN(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Oy(e,n)}function qN(e,t,n){return jg((()=>{switch(e.rank){case 1:return Ix(e,t,n);case 2:return Sx(e,[t,0],[n,e.shape[1]]);case 3:return Nx(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Tx(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Wy(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Wy(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new US(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function KN(e,t,n){return jg((()=>{switch(e.rank){case 1:return Ix(e,t,n);case 2:return Sx(e,[0,t],[e.shape[0],n]);case 3:return Nx(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Tx(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new US(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function XN(e,t,n,r){return jg((()=>{switch(e.rank){case 1:return Ix(e,t,n);case 2:switch(r){case 1:return qN(e,t,n);case 2:return KN(e,t,n);default:throw new US(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return qN(e,t,n);case 2:return Nx(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return KN(e,t,n);default:throw new US(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return qN(e,t,n);case 2:return Tx(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Tx(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return KN(e,t,n);default:throw new US(`The axis is not within the rank of the tensor ${r}`)}default:throw new US(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ZN(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Py(e,t)}function YN(e,t){switch(e.rank){case 1:return eA([e,t]);case 2:return tA([e,t],0);case 3:return nA([e,t],0);case 4:return rA([e,t],0);default:throw new US(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function JN(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new US(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return RA(e,t)}function QN(e,t=0,n=1,r,a){return rx(e,t,n,r,a)}function eT(e,t,n,r){if(e.rank<2||t.rank<2)throw new VS(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new VS(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return cw.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?rT(e.rank,r,"channelsLast"):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=Oy(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Oy(Fm(t,d),[l,-1]);let c=[...a,...u],p=!1,h=!1;return Oy(cw.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:r?rT(e.rank,r,"channelsLast"):null,activation:n}),c)}}function tT(e,t,n){return jg((()=>(t=Array.isArray(t)?Bx(t,"int32"):um(t,"int32"),OA(e,t,n))))}function nT(e){return oy(e,e)}function rT(e,t,n){let r=t.shape;if(1!==t.rank&&t.rank!==e)throw new US(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Oy(t,[1,r[0],1,1,1]):Oy(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Oy(t,[1,1,1,1,r[0]]):Oy(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Oy(t,[1,r[0],1,1]):Oy(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Oy(t,[1,1,1,r[0]]):Oy(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Oy(t,[1,r[0],1]):Oy(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Oy(t,[1,1,r[0]]):Oy(t,[1].concat(r))}else if(e<3)return t;throw new US(`Unsupported input rank by biasAdd: ${t.rank}`)}function aT(e,t,n){return jg((()=>(null==n&&(n="channelsLast"),RN(n),ay(e,rT(e.rank,t,n)))))}function sT(e,t,n,r){return jg((()=>ow(e,t,n,r)))}function iT(e,t,n=!1){return n?e():t()}var oT=["fanIn","fanOut","fanAvg"],lT=["normal","uniform","truncatedNormal"],uT=class extends bg.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},dT=class extends uT{apply(e,t){return Tb(e,t)}};dT.className="Zeros",bg.registerClass(dT);var cT=class extends uT{apply(e,t){return Cb(e,t)}};cT.className="Ones",bg.registerClass(cT);var pT=class extends uT{constructor(e){if(super(),"object"!=typeof e)throw new US(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new US(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return jg((()=>oy(yx(this.value),Cb(e,t))))}getConfig(){return{value:this.value}}};pT.className="Constant",bg.registerClass(pT);var hT=class extends uT{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ax(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};hT.className="RandomUniform",bg.registerClass(hT);var fT=class extends uT{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new VS(`randomNormal does not support dType ${t}.`);return QN(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};fT.className="RandomNormal",bg.registerClass(fT);var mT=class extends uT{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new VS(`truncatedNormal does not support dType ${t}.`);return qx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};mT.className="TruncatedNormal",bg.registerClass(mT);var gT=class extends uT{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return jg((()=>{if(2!==e.length||e[0]!==e[1])throw new US("Identity matrix initializer can only be used for 2D square matrices.");return oy(this.gain,MA(e[0]))}))}getConfig(){return{gain:this.gain}}};gT.className="Identity",bg.registerClass(gT);var yT=class extends uT{constructor(e){if(super(),e.scale<0)throw new US(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,function(e){sN(oT,"FanMode",e)}(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){sN(lT,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){let n=function(e,t="channelsLast"){let n,r;if(RN(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=BN(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){let t=BN(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{let t=BN(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new VS(`${this.getClassName()} does not support dType ${t}.`);return qx(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return ax(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};yT.className="VarianceScaling",bg.registerClass(yT);var AT=class extends yT{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return yT.className}};AT.className="GlorotUniform",bg.registerClass(AT);var bT=class extends yT{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return yT.className}};bT.className="GlorotNormal",bg.registerClass(bT);var xT=class extends yT{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return yT.className}};xT.className="HeNormal",bg.registerClass(xT);var wT=class extends yT{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return yT.className}};wT.className="HeUniform",bg.registerClass(wT);var vT=class extends yT{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return yT.className}};vT.className="LeCunNormal",bg.registerClass(vT);var kT=class extends yT{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return yT.className}};kT.className="LeCunNormal",bg.registerClass(kT);var IT=class extends uT{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new VS("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return jg((()=>{if(e.length<2)throw new VS("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=QN(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=yv.gramSchmidt(t);return e[0]>e[1]&&(n=Fm(n)),oy(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};IT.className="Orthogonal",bg.registerClass(IT);var ST={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function NT(e,t={}){return tN(e,bg.SerializationMap.getMap().classNameMap,t,"initializer")}function TT(e){return QS(e)}function CT(e){if("string"==typeof e){let t=e in ST?ST[e]:e;if("GlorotNormal"===t)return new bT;if("GlorotUniform"===t)return new AT;if("HeNormal"===t)return new xT;if("HeUniform"===t)return new wT;if("LeCunNormal"===t)return new vT;if("LeCunUniform"===t)return new kT;{let e={};return e.className=t,e.config={},NT(e)}}return e instanceof uT?e:NT(e)}function ET(){return new dT}function _T(){return new cT}function RT(e){return new pT(e)}function MT(e){return new hT(e)}function $T(e){return new fT(e)}function FT(e){return new mT(e)}function OT(e){return new gT(e)}function zT(e){return new yT(e)}function DT(e){return new AT(e)}function PT(e){return new bT(e)}function LT(e){return new xT(e)}function WT(e){return new wT(e)}function BT(e){return new vT(e)}function UT(e){return new kT(e)}function VT(e){return new IT(e)}var GT={};il(GT,{Layer:()=>uC,RNN:()=>D_,RNNCell:()=>P_,activation:()=>aM,add:()=>hM,alphaDropout:()=>r$,average:()=>fM,averagePooling1d:()=>kM,averagePooling2d:()=>NM,averagePooling3d:()=>EM,avgPool1d:()=>IM,avgPool2d:()=>TM,avgPool3d:()=>_M,avgPooling1d:()=>SM,avgPooling2d:()=>CM,avgPooling3d:()=>RM,batchNormalization:()=>xM,bidirectional:()=>XM,concatenate:()=>mM,conv1d:()=>XR,conv2d:()=>ZR,conv2dTranspose:()=>YR,conv3d:()=>JR,conv3dTranspose:()=>QR,convLstm2d:()=>jM,convLstm2dCell:()=>HM,cropping2D:()=>tM,dense:()=>sM,depthwiseConv2d:()=>rM,dot:()=>bM,dropout:()=>iM,elu:()=>VR,embedding:()=>pM,flatten:()=>lM,gaussianDropout:()=>n$,gaussianNoise:()=>t$,globalAveragePooling1d:()=>MM,globalAveragePooling2d:()=>$M,globalMaxPool1d:()=>YM,globalMaxPool2d:()=>JM,globalMaxPooling1d:()=>FM,globalMaxPooling2d:()=>OM,gru:()=>LM,gruCell:()=>WM,input:()=>FE,inputLayer:()=>UR,layerNormalization:()=>wM,leakyReLU:()=>jR,lstm:()=>BM,lstmCell:()=>UM,masking:()=>a$,maxPool1d:()=>QM,maxPool2d:()=>e$,maxPooling1d:()=>zM,maxPooling2d:()=>DM,maxPooling3d:()=>PM,maximum:()=>gM,minimum:()=>yM,multiply:()=>AM,permute:()=>cM,prelu:()=>HR,reLU:()=>GR,repeatVector:()=>uM,reshape:()=>dM,rnn:()=>qM,separableConv2d:()=>eM,simpleRNN:()=>VM,simpleRNNCell:()=>GM,softmax:()=>qR,spatialDropout1d:()=>oM,stackedRNNCells:()=>KM,thresholdedReLU:()=>KR,timeDistributed:()=>ZM,upSampling2d:()=>nM,zeroPadding2d:()=>vM});var jT=0;function HT(){return jT++}var qT={};function KT(e=""){return e in qT||(qT[e]=0),qT[e]+=1,e+qT[e].toString()}function XT(e){return Array.isArray(e)&&Array.isArray(e[0])}function ZT(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function YT(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new US(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function JT(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new US(`Expected exactly 1 Shape; got ${e.length}`)}return e}function QT(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var eC="Variable",tC=class{constructor(e,t="float32",n=eC,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=HT(),n=null==n?eC:n,this.originalName=zN(n),this.name=DN(this.originalName),this.trainable_=r,this.constraint=a,this.val=Yx(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function nC(e){return e.map((e=>e.read()))}function rC(e){e.forEach((e=>{e[0].write(e[1])}))}var aC=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},sC=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=HT(),null!=s&&(this.originalName=zN(s),this.name=DN(this.originalName)),this.rank=t.length}},iC=0,oC=class{constructor(e,t){this.callArgs=t,this.id=iC++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},lC=0,uC=class extends bg.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=lC++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=ZS(e)+"_"+KT(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new BS(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new US(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return KS(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return KS(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new WS(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new WS(`Layer ${this.name} is not connected, no input to return.`);return KS(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new WS(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new WS(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return KS(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=XS(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=XS(this.inputSpec);if(e.length!==t.length)throw new US(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(null==a)continue;let s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new US(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new US(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new US(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new US(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let e=r.shape;for(let t in a.axes){let r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new US(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){let t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new US(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=XS(e),r=!0;for(let e of n)if(!(e instanceof sC)){r=!1;break}let a=!0;for(let e of n)if(e instanceof sC){a=!1;break}if(r===a)throw new US("Arguments to apply() must be all SymbolicTensors or all Tensors");return ON(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of XS(e))t.push(n.shape);this.build(KS(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t),a=XS(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=KS(s),null!=this.activityRegularizer)throw new VS("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{let n,r=function(e){e=XS(e);let t=[];for(let n of e)t.push(n.shape);return KS(t)}(e),a=this.computeOutputShape(r),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?r[0]:r),n=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,r)=>new sC(s,n,this,XS(e),t,this.name,r))):new sC(s,a,this,XS(e),t,this.name),this.addInboundNode(e,n,null,null,r,a,t),this._refCount++,null!=this.activityRegularizer)throw new VS("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new WS(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new WS(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new BS(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return QT(this.weights)}build(e){this.built=!0}getWeights(e=!1){return nC(e?this.trainableWeights:this.weights)}setWeights(e){jg((()=>{let t=this.weights;if(t.length!==e.length)throw new US(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],r=nC(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!Jp.arraysEqual(s.shape,o.shape))throw new US(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}rC(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new US(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():CT("zeros"));let l=r.apply(t,n),u=new tC(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=XS(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=XS(e);t=XS(t),n=XS(n),r=XS(r),a=ZT(a),s=ZT(s);let l=[],u=[],d=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),d.push(e.tensorIndex);new oC({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:d,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function dC(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let r=dC(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}var cC=class extends uC{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:KT("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new US("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new US("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new US("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new sC(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new oC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new US(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function pC(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new US("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new cC({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function hC(e){if(null==e)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Hg(r)}}function fC(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}cC.className="InputLayer",bg.registerClass(cC);var mC=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},gC=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},yC=class extends mC{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=jg((()=>ay(this.totals[e],oy(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:jg((()=>{let n=oy(iy(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),qg(t[e])})))}},AC=class extends mC{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(r),n.push(s)}}let r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}},bC=class extends mC{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Mv,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Jp.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Jp.now();return(...s)=>{let i=null!=n?n():Jp.now();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];null!=this.yield&&(await hC(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await hC(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await hC(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await hC(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await hC(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Jp.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await hC(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await hC(e),await this.trainEnd(e))}};function xC(e,t){return null==e&&(e={}),e instanceof mC?[e]:Array.isArray(e)&&e[0]instanceof mC?e:XS(e).map((e=>new bC(e,t)))}var wC=class{constructor(){}static registerCallbackConstructor(e,t){Jp.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),wC.checkForDuplicate(t),null==wC.constructors[e]&&(wC.constructors[e]=[]),wC.constructors[e].push(t)}static checkForDuplicate(e){for(let t in wC.constructors)wC.constructors[+t].forEach((t=>{if(t===e)throw new US("Duplicate callback constructor.")}))}static clear(){wC.constructors={}}static createCallbacks(e){let t=[];for(let n in wC.constructors){let r=+n;e>=r&&t.push(...wC.constructors[r])}return t.map((e=>new e))}},vC=wC;function kC(e,t,n,r,a,s,i,o,l){let u=new AC,d=[new yC,...vC.createCallbacks(t)];null!=e&&d.push(...e),d.push(u);let c=new gC(d);return c.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:c,history:u}}function IC(e,t={},n=!1){return tN(e,bg.SerializationMap.getMap().classNameMap,t,"layer",n)}function SC(e,t){return jg((()=>{"float32"!==e.dtype&&(e=um(e,"float32"));let n=ob(nT(e),t,!0),r=$A(n.shape,LS()),a=Fx(Sb(n,r));return iy(e,a)}))}function NC(e,t){return jg((()=>Nb(nT(ib(t,e)),-1)))}function TC(e,t){return jg((()=>Nb(ly(ib(t,e)),-1)))}function CC(e,t){return jg((()=>{let n=ib(e,t),r=Qy(ly(e),LS(),Number.MAX_VALUE),a=ly(iy(n,r));return oy(100,Nb(a,-1))}))}function EC(e,t,n=!1){return jg((()=>{if(n)t=Cx(t);else{let e=ob(t,t.shape.length-1,!0);t=iy(t,e)}return t=Qy(t,LS(),1-LS()),nb(ob(oy(um(e,"float32"),qA(t)),t.shape.length-1))}))}function _C(e,t,n=!1){return jg((()=>{let r=um(FA(function(e){let t=[BN(e.shape)];return Oy(e,t)}(e)),"int32"),a=(t=Qy(t,LS(),1-LS())).shape;return EC(Oy($m(r,a[a.length-1]),a),t,n)}))}function RC(e,t){return jg((()=>{let n;return n=Qy(t,LS(),1-LS()),n=qA(iy(n,ib(1,n))),Nb(function(e,t){if(!Jp.arraysEqual(e.shape,t.shape))throw new US(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return jg((()=>{let n=lx(t),r=nb(ly(t));return ay(ib(n,oy(t,e)),KA(CA(r)))}))}(e,n),-1)}))}function MC(e,t){return jg((()=>{let n=SC(e,-1),r=SC(t,-1),a=oy(n,r);return nb(ob(a,-1))}))}vC.constructors={};var $C={meanSquaredError:NC,meanAbsoluteError:TC,meanAbsolutePercentageError:CC,meanSquaredLogarithmicError:function(e,t){return jg((()=>{let n=Qy(t,LS(),Number.MAX_VALUE),r=qA(ay(1,n)),a=Qy(e,LS(),Number.MAX_VALUE),s=qA(ay(1,a));return Nb(nT(ib(r,s)),-1)}))},squaredHinge:function(e,t){return jg((()=>{let n=Sb(0,ib(1,oy(e,t)));return Nb(nT(n),-1)}))},hinge:function(e,t){return jg((()=>{let n=Sb(0,ib(1,oy(e,t)));return Nb(n,-1)}))},categoricalHinge:function(e,t){return jg((()=>{let n=ob(oy(e,t),-1),r=sb(oy(ib(1,e),t),-1);return Sb(0,ay(1,ib(r,n)))}))},logcosh:function(e,t){return jg((()=>{let n=Math.log(2),r=ib(t,e),a=ib(ay(r,rb(oy(-2,r))),n);return Nb(a,-1)}))},categoricalCrossentropy:EC,sparseCategoricalCrossentropy:_C,binaryCrossentropy:RC,kullbackLeiblerDivergence:function(e,t){return jg((()=>{let n=Qy(e,LS(),1),r=Qy(t,LS(),1);return ob(oy(e,qA(iy(n,r))),-1)}))},poisson:function(e,t){return jg((()=>{let n=qA(ay(LS(),t));return Nb(ib(t,oy(e,n)),-1)}))},cosineProximity:MC};function FC(e){if("string"==typeof e){if(e in $C)return $C[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new US(t)}return e}function OC(e,t){return jg((()=>{let n=oy(.5,Lb(t)),r=jN(zA(t,n),e.dtype);return Nb(xA(e,r),-1)}))}function zC(e,t){return jg((()=>jN(xA(fy(e,-1),fy(t,-1)),"float32")))}function DC(e,t){return jg((()=>um(ob(Ab(xA(e,1),xA(t,1))),"float32")))}function PC(e,t){return jg((()=>{let n=DC(e,t),r=function(e,t){return jg((()=>um(ob(Ab(xA(e,0),xA(t,1))),"float32")))}(e,t),a=ay(n,r);return um(wA(zA(a,0),iy(n,a),0),"float32")}))}function LC(e,t){return RC(e,t)}function WC(e,t){return e.rank===t.rank&&(e=zx(e,[e.rank-1])),(t=fy(t,-1)).dtype!==e.dtype&&(t=um(t,e.dtype)),um(xA(e,t),"float32")}var BC=EC,UC=_C,VC={binaryAccuracy:OC,categoricalAccuracy:zC,precision:PC,categoricalCrossentropy:BC,sparseCategoricalCrossentropy:UC,mse:NC,MSE:NC,mae:TC,MAE:TC,mape:CC,MAPE:CC,cosine:MC};function GC(e){if("string"==typeof e&&e in VC)return VC[e];if("string"!=typeof e&&null!=e)return e;throw new US(`Unknown metric ${e}`)}function jC(e){if(HS(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys($C))if($C[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(VC))if(VC[n]===e){t=n;break}return void 0!==t?t:e.name}}var HC=1048576;function qC(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!KC(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>HC&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${HC}.`)}}function KC(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!KC(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!KC(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function XC(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ZC(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}XC([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function YC(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];XC([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)XC(["","","","",i[e]],t,r)}function JC(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function QC(e,t){if(null===e)return null;if("string"==typeof e)return YS(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];JC(t,a,r)?n.push(r):n.push(QC(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{let e=YS(n);t[e]=QC(r,e)}}return t}}function eE(e,t){if(null==e)return null;if("string"==typeof e)return ZS(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let r=e[a];JC(t,a,r)?n.push(r):n.push(eE(r,t))}return n}{let t={};for(let n of Object.keys(e)){let r=e[n];t[ZS(n)]="name"!==n&&"className"!==n||"string"!=typeof r?eE(r,n):r}return t}}var tE="0.0.0",nE=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof nE)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new US(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return um(t,e.dtype)}catch(n){throw new US(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof sC){if(null==this.id2Value[e.id])throw new US(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new US(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof sC){if(null==this.id2Value[e.id])throw new US(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new US(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Hg(this.id2Mask)}},rE={},aE={};function sE(e,t,n,r){let a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let d,c,p=o.join(",")+"|"+t.names().join(",");if(null==rE[p]){let e=function(e,t){Jp.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){let a=oE(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=oE(s,t);for(let t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(let e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:iE(r)}}(i,t);d=e.sorted,c=e.recipientCounts,rE[p]=d,aE[p]=c}d=rE[p],c={},a||Object.assign(c,aE[p]);let h=new nE(t);for(let e=0;e<d.length;++e){if(null!=r){let e=Vg().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof cC)continue;let u=[],p=[],f=[],m=!1;for(let e of s.inputs){let n=h.getValue(e),r=h.getMask(e);u.push(n),p.push(r),null!=r&&(m=!0),a||(c[e.name]--,0===c[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=p[0]);let g=XS(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,p));let A=lE(s),b=Array.isArray(A)?A:[A];for(let e=0;e<b.length;++e){h.hasKey(b[e])||h.add(b[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(b[e].name);-1!==t&&(l[t]=g[e])}a||Hg(f)}return h.disposeMasks(),s?l:l[0]}function iE(e){let t={};for(let n in e)t[n]=e[n].size;return t}function oE(e,t){let n=new Set,r=[],a={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:r,recipientMap:a}}function lE(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var uE=class extends uC{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=KT(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],rN(this.inputs).length!==this.inputs.length)throw new US(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);rN(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;HS(0===n,"input layer has >1 nodes"),HS(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof cC))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{(null==r||null==a||null==l)&&(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new BS(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(uE.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let d=u.inboundLayers.length;for(let e=0;e<d;e++){let r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let d=i.slice().reverse();for(let e of d){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){let a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let c={};for(let e in t){let r=t[e];r in c||(c[r]=[]),c[r].push(n[e])}let p={};for(let e in r){let t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let h=Object.keys(p).map((e=>parseInt(e,10))).sort(nN);this.layers=[];for(let e of h){let t=p[e];t.sort(((e,t)=>{let n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(let e of t)e instanceof uE&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,h=Object.keys(c).map((e=>parseInt(e,10))).sort(nN);let f=this.inputs.slice(),m=[];for(let e of h)for(let t of c[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new BS(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=c;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new BS(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new oC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new US("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new US(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}let a=[];for(let r in e){let s=r;if(null==n[r]){let e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new US(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new US(`${e.length} of ${r} weights are not set: ${e}`)}rC(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${tE}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=eE(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return jg((()=>{e=XS(e);let n=new nE;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return sE(this.outputs,n,t)}))}computeMask(e,t){return jg((()=>{let n;return e=XS(e),n=null==t?jS(null,e.length):XS(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=ZT(e);if(t.length!==this.inputLayers.length)throw new US(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(nN);if(r.length>1)for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let r=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}let a=ZT(t.computeOutputShape(KS(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];HS(t in n),a.push(n[t])}return KS(a)}runInternalGraph(e,t){null==t&&(t=jS(null,e.length));let n={};for(let r=0;r<this.inputs.length;++r){let a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}let r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(nN);for(let e of r){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(let e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=XS(t.call(e,u)),l=XS(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=XS(t.call(r,u)),l=XS(t.computeMask(r,i));if(t.activityRegularizer)throw new VS("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){let t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){HS(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof uE?1:0;for(let r=0;r<e.inboundNodes.length;r++){let a=uE.nodeKey(e,r);this.containerNodes.has(a)&&(n[a]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new US(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new US("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new US(`No such layer: ${e}`)}calculateLosses(){return jg((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=uE.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let r=e.inboundNodes[n],a=uE.nodeKey(e,n),i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){let e=[];for(let n=0;n<r.inboundLayers.length;n++){let a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n],l=t[uE.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;let r=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=uE.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;let a=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=uE.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,r=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in a))return void i(e,t);let d=a[o];if(d.inboundNodes.length<=l)return void i(e,t);let c=d.inboundNodes[l];r.push(c.outputTensors[u])}r.length>0&&e.apply(KS(r),n)}function l(e){let n=e.name,s=IC(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new US(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,d=t.layers;for(let e of d)l(e);for(;!aN(s);)for(let e of d){let t=a[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let c=[],p=[],h=t.inputLayers;for(let e of h){let t=e[0],n=e[1],r=e[2];HS(t in a);let s=a[t].inboundNodes[n].outputTensors;c.push(s[r])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],r=e[2];HS(t in a);let s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:c,outputs:p,name:u})}get stateful(){if(this._stateful)throw new US("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){jg((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function dE(e,t){return function(e,t,n){let r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function cE(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=jg((()=>{if(1===e.shape.length)return dm(e);if(2===e.shape.length){if(e.shape[1]>1)return fy(e,1);if(1===e.shape[1])return Oy(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Hg(t);let a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Bx(a,"float32")}return null}function pE(e,t){return oy(e,t)}function hE(e,t){let n,r,a=t;n=a.xs,r=a.ys,Jp.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=fE("input",e.inputNames,n),i=fE("output",e.outputNames,r),o=s[0].shape[0];Jp.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Jp.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)Jp.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)Jp.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function fE(e,t,n){if(n instanceof _h)return[n];if(Array.isArray(n))return Jp.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let r=[];for(let a of t){if(null==n[a])throw new US(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function mE(e){return"function"==typeof e.iterator}function gE(e){Jp.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function yE(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>qN(e,t,n-t))):qN(e,t,n-t)}function AE(e,t){return jg((()=>null==e?null:Array.isArray(e)?e.map((e=>AE(e,t))):tT(e,"int32"===t.dtype?t:um(t,"int32"))))}function bE(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function xE(e){let t=[];e instanceof _h&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(1===r.rank)t.push(HN(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function wE(e,t){if(null==e)return;let n=[];if(t instanceof _h)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let r=t[e];n.push(r.id)}let r=[];if(e instanceof _h)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(let t in e){let a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function vE(e){return Array.isArray(e)}function kE(e){return!function(e){return e instanceof _h}(e)&&!vE(e)}function IE(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(vE(e)&&e.length>0)t=!0;else if(kE(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new US(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(kE(e)){s=[];for(let n of t){if(null==e[n])throw new US(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(vE(e)){if(e.length!==t.length)throw new US(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new US(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=xE(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new US(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new US(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function SE(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new US(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new US(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new US(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new US(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}var NE=class extends uE{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new US("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){let a,s=function(e){let t=!0,n=[],r=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(let t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),XC(i,n,r),r("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?ZC(o[e],n,r):YC(o[e],n,a,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=function(e){let t;return t=null!=e.collectedTrainableWeights?QT(e.collectedTrainableWeights):QT(e.trainableWeights),t}(e),u=QT(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>_v.adagrad(.01),Adadelta:()=>_v.adadelta(1,.95,LS()),Adam:()=>_v.adam(.001,.9,.999,LS()),Adamax:()=>_v.adamax(.002,.9,.999,LS(),0),RMSProp:()=>_v.rmsprop(.001,.9,0,LS()),SGD:()=>_v.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new US(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof wv))throw new US("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new US(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>FC(e)))}else{let n=FC(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new US(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(FC(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ON("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};ON("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===RC?-1!==["accuracy","acc"].indexOf(i)?r=OC:-1!==["crossentropy","ce"].indexOf(i)&&(r=LC):this.lossFunctions[e]===_C?-1!==["accuracy","acc"].indexOf(i)?r=WC:-1!==["crossentropy","ce"].indexOf(i)&&(r=UC):-1!==["accuracy","acc"].indexOf(i)?r=zC:-1!==["crossentropy","ce"].indexOf(i)&&(r=BC),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=r,n=""+t}else s=GC(i),n=""+jC(i);let t;ON(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=null==n.batchSize?32:n.batchSize;gE(r);let a=this.standardizeUserDataXY(e,t,!0,r);try{let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction;return KS(this.testLoop(t,e,r,n.verbose,n.steps))}finally{wE(a[0],e),wE(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){let r=null!=(n=n||{}).batches,a=e.testFunction,s=[];if(n.verbose>0)throw new VS("Verbose mode is not implemented yet.");Jp.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=function(e){return"function"==typeof e.next}(t)?t:await t.iterator(),o=0,l=0;for(;!r||l<n.batches;){let t=await i.next();if(s=jg((()=>{if(t.value){let{xs:n,ys:r}=hE(e,t.value),i=n.concat(r),u=jg((()=>a(i)));if(Hg(i),0===l)for(let e=0;e<u.length;++e)s.push(yx(0));let d=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=jg((()=>ay(s[e],oy(d,t)))),l>0&&Hg(n)}Hg(u),o+=d,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=iy(s[e],o),Hg(t)}return KS(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new US(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new US(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new US("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new nE;if(e instanceof _h&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new US(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new US(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=sE(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=jS(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){let i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new US(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return jg((()=>{let r=this.checkNumSamples(e);if(n)throw new VS("Verbose predictLoop() is not implemented yet.");let a=bE(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)jg((()=>{let n=a[t][0],r=a[t][1],s=yE(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new nE(i);return sE(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return KS(s.map((e=>Py(e,0))))}))}predict(e,t={}){let n=xE(e);SE(n,this.inputNames,this.feedInputShapes,!1);try{let e=null==t.batchSize?32:t.batchSize;return gE(e),this.predictLoop(n,e)}finally{wE(n,e)}}predictOnBatch(e){SE(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new BS("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===_C?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t){let n=rN(e.map((e=>e.shape[0])));n.sort();let r=rN(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new US(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new US(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!Jp.arraysEqual(n,r))throw new US(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=IE(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=IE(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){let r=[NC,RC,EC];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(null!=i){if(i===EC&&1===s.shape[s.shape.length-1])throw new US(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let r=e[n],a=t[n];if(null!=a&&r!==a)throw new US(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new US(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){let e=dE(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await cE(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return jg((()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new VS("Verbose mode is not implemented yet.");if(null!=a)throw new VS("steps mode in testLoop() is not implemented yet");{let r=bE(s,n),a=Bx(GN(0,s));for(let n=0;n<r.length;++n){let s=r[n][0],o=r[n][1],l=qN(a,s,o-s),u=AE(t,l),d=e(u);if(0===n)for(let e=0;e<d.length;++e)i.push(yx(0));for(let e=0;e<d.length;++e){let t=d[e];i[e]=ay(i[e],oy(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=iy(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;qS(e,r)>1&&(a+=`_${qS(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new nE(e),l=sE(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e](r[e],l[e]);null!=a[e]&&(n=pE(n,a[e]));let s=Nb(n);t.push(s),i=0===e?n:ay(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Nb(t(r[a],l[a]))}qg(n),s.push(n)}return i=Nb(i),this.calculateLosses().forEach((e=>{i=ay(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>jg((()=>{let t,n=[],r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});let i=new nE(s),o=sE(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let r=this.lossFunctions[e],s=Nb(r(a[e],o[e]));t=0===e?s:ay(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Nb(t(a[r],o[r]));n.push(s)}return n}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,d,c,p;e.isTraining=!0;try{let h=null==r.batchSize?32:r.batchSize;gE(h);let f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,h);a=m[0],s=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new VS("validationData including sample weights is not supported yet."):new US(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];let t=!0,n=await e.standardizeUserData(l,u,null,null,t,h);d=n[0],c=n[1],g=d.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;let e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];d=yE(a,e,t),i=a,a=yE(a,0,e),c=yE(s,e,t),o=s,s=yE(s,0,e),g=d.concat(c)}else null!=r.validationSteps&&(y=!0);let A=a.concat(s).concat(p);e.checkTrainableWeightsConsistency();let b,x,w=e.makeTrainFunction(),v=e.getDedupedMetricsNames();y?(e.makeTestFunction(),b=e.testFunction,x=v.slice().concat(v.map((e=>"val_"+e)))):(b=null,g=[],x=v.slice());let k=xC(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,l,u,d,c,p,h){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==p&&(p=0);let f=!1;null!=l&&null!=u&&(f=!0);let m,g=e.checkNumSamples(n,a,h,"steps_per_epoch");null!=g&&(m=GN(0,g)),null==i&&(i=1);let{callbackList:y,history:A}=kC(o,i,s,p,g,h,a,f,c);y.setModel(e),e.history=A,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await y.onEpochBegin(i);let s={};{if("batch"===d)throw new VS("batch shuffling is not implemneted yet");d&&Jp.shuffle(m);let i=Bx(m),o=bE(g,a);for(let d=0;d<o.length;++d){let c={};if(await y.onBatchBegin(d,c),jg((()=>{let p=o[d][0],h=o[d][1],m=qN(i,p,h-p);c.batch=d,c.size=h-p;let g=AE(n,m),y=t(g);for(let e=0;e<r.length;++e){let t=r[e],n=y[e];c[t]=n,qg(n)}if(d===o.length-1&&f){let t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){let n=r[e],a=t[e];qg(a),s["val_"+n]=a}}})),await y.onBatchEnd(d,c),fC(c),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,w,A,v,h,r.epochs,r.verbose,k,b,g,r.shuffle,x,r.initialEpoch,null)}finally{e.isTraining=!1,wE(a,t),wE(s,n),wE(i,t),wE(o,n),wE(d,l),wE(c,u),null!=p&&Hg(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){let r=null!=n.batchesPerEpoch;if(Jp.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Jp.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Jp.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Jp.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Jp.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i=null!=n.validationData;if(i)if(mE(n.validationData))Jp.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=function(e){if(3===e.length)throw new VS("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let d=xC(n.callbacks,n.yieldEvery),c=null==n.verbose?1:n.verbose,{callbackList:p,history:h}=kC(d,c,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,i,o);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await p.onEpochBegin(f);let d=0,c=0;for(r||(m=await t.iterator());!r||d<n.batchesPerEpoch;){let t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:r,ys:a}=hE(e,t.value),s={};s.batch=c,s.size=r[0].shape[0],await p.onBatchBegin(c,s);let i=[];if(null!=n.classWeight){let t=dE(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await cE(a[e],null,t[e]))}let o=r.concat(a).concat(i),h=l(o);Hg(o);for(let e=0;e<u.length;++e){let t=u[e],n=h[e];s[t]=n,qg(n)}await p.onBatchEnd(c,s),fC(s),c++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(i){let t;t=mE(n.validationData)?XS(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):XS(e.evaluate(a,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,o),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return Hg(s),wE(n[0],e),wE(n[1],t),KS(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=Vg().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Vg().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ZS(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ZS(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ZS(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ZS(jC(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ZS(jC(e))));{let e={};for(let t in this.metrics)e[t]=ZS(jC(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,r=IC(QC(e.optimizer_config));if("string"==typeof e.loss)t=YS(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>YS(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=YS(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>YS(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=YS(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:r})}async save(e,t){if("string"==typeof e){let t=pm.getSaveHandlers(e);if(0===t.length)throw new US(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new US(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new US("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await pm.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${tE}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:a}=await pm.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=pm.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(qC(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata),r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){qC(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};NE.className="Model",bg.registerClass(NE);var TE=class extends NE{};async function CE(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let r=IC(QC(n),t);if(null!=e.weightsManifest){let t=await pm.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(let e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Hg(t)}return r}TE.className="Functional",bg.registerClass(TE);var EE=class extends NE{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:KT("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new US(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof EE||e instanceof NE;if(n){if(t=e,1!==t.outputs.length)throw new US("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new US("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new US("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=pC({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new US(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new US("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=dC(this.outputs[0])}this.inboundNodes=[],new oC({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:jS(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(JT(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new NE({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new BS("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new BS("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new BS("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new BS("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new US("Legacy serialization format not supported yet.");a=t}else Jp.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof EE))throw new VS(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=IC(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new US("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new US("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},_E=EE;function RE(e){return new NE(e)}function ME(e){return new _E(e)}function $E(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){let n=pm.getLoadHandlers(e,t);if(0===n.length)n.push(pm.browserHTTPRequest(e,t));else if(n.length>1)throw new US(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new US("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;null!=a.model_config&&(a=a.model_config);let s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=IC(QC(a),void 0,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new US("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=function(e,t){let n=pm.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Hg(e),Hg(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function FE(e){return pC(e)}function OE(e,t){vC.registerCallbackConstructor(e,t)}_E.className="Sequential",bg.registerClass(_E);var zE=class extends bg.Serializable{getConfig(){return{}}},DE=class extends zE{apply(e,t=1){return function(e,t=1){if(1!==t)throw new VS(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return NA(e)}(e,t)}};DE.className="elu",bg.registerClass(DE);var PE=class extends zE{apply(e){return Ax(e)}};PE.className="selu",bg.registerClass(PE);var LE=class extends zE{apply(e){return lx(e)}};LE.className="relu",bg.registerClass(LE);var WE=class extends zE{apply(e){return jg((()=>Rb(6,lx(e))))}};WE.className="relu6",bg.registerClass(WE);var BE=class extends zE{apply(e){return e}};BE.className="linear",bg.registerClass(BE);var UE=class extends zE{apply(e){return Ly(e)}};UE.className="sigmoid",bg.registerClass(UE);var VE=class extends zE{apply(e){return function(e){return jg((()=>{let t=ay(.5,oy(.2,e));return Qy(t,0,1)}))}(e)}};VE.className="hardSigmoid",bg.registerClass(VE);var GE=class extends zE{apply(e){return rb(e)}};GE.className="softplus",bg.registerClass(GE);var jE=class extends zE{apply(e){return function(e){return jg((()=>iy(e,ay(ly(e),1))))}(e)}};jE.className="softsign",bg.registerClass(jE);var HE=class extends zE{apply(e){return By(e)}};HE.className="tanh",bg.registerClass(HE);var qE=class extends zE{apply(e,t=-1){return Cx(e,t)}};qE.className="softmax",bg.registerClass(qE);var KE=class extends zE{apply(e,t=-1){return lb(e,t)}};KE.className="logSoftmax",bg.registerClass(KE);var XE=class extends zE{apply(e,t=1){return jg((()=>oy(Ly(oy(e,t)),e)))}};XE.className="swish",bg.registerClass(XE);var ZE=class extends zE{apply(e){return jg((()=>oy(e,By(rb(e)))))}};function YE(e){return e.getClassName()}function JE(e,t={}){return tN(e,bg.SerializationMap.getMap().classNameMap,t,"activation")}function QE(e){if(null==e){return JE({className:"linear",config:{}})}if("string"==typeof e){let t={};return t.className=e,t.config={},JE(t)}return e instanceof zE?e:JE(e)}function e_(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}ZE.className="mish",bg.registerClass(ZE);var t_=class extends bg.Serializable{},n_=class extends t_{constructor(e){super(),e_(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return jg((()=>{let t=Tb([1]);return this.hasL1&&(t=ay(t,ob(oy(this.l1,ly(e))))),this.hasL2&&(t=ay(t,ob(oy(this.l2,nT(e))))),Oy(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};n_.className="L1L2",bg.registerClass(n_);var r_={l1l2:"L1L2"};function a_(e){return QS(e)}function s_(e,t={}){return tN(e,bg.SerializationMap.getMap().classNameMap,t,"regularizer")}function i_(e){return null==e?null:"string"==typeof e?s_({className:e in r_?r_[e]:e,config:{}}):e instanceof t_?e:s_(e)}var o_=class extends uC{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=YT(e);let n=lx(e);return null!=this.maxValue&&(n=Qy(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};o_.className="ReLU",bg.registerClass(o_);var l_=class extends uC{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=YT(e);return UA(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};l_.className="LeakyReLU",bg.registerClass(l_);var u_=class extends uC{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=CT(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=i_(e.alphaRegularizer),this.alphaConstraint=bN(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new US(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=JT(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new aC({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=YT(e),Xb(e,this.alpha.read())}getConfig(){let e={alphaInitializer:TT(this.alphaInitializer),alphaRegularizer:a_(this.alphaRegularizer),alphaConstraint:yN(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};u_.className="PReLU",bg.registerClass(u_);var d_=class extends uC{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new VS(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=YT(e);return NA(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};d_.className="ELU",bg.registerClass(d_);var c_=class extends uC{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=YT(e);return oy(n,um(zA(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};c_.className="ThresholdedReLU",bg.registerClass(c_);var p_=class extends uC{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new qE).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=YT(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function h_(e,t,n){if("number"==typeof e)return jS(e,t);if(e.length!==t)throw new US(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!WN(a))throw new US(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function f_(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function m_(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+VN([n-t,0]);else{if("same"!==r)throw new US(`Unsupport padding mode: ${r}.`);e*=t}return e}function g_(e,t){return jg((()=>(RN(t),"channelsFirst"===t?Fm(e,[0,2,3,1]):e)))}function y_(e,t){return jg((()=>(RN(t),"channelsFirst"===t?Fm(e,[0,2,3,4,1]):e)))}function A_(e,t,n,r=[1,1],a="valid",s,i,o=null){return jg((()=>{if(null==s&&(s="channelsLast"),RN(s),3!==e.rank&&4!==e.rank)throw new US(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new US(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=g_(e,s);if("causal"===a)throw new VS("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=cw.conv2d({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Fm(l,[0,3,1,2])),l}))}p_.className="Softmax",bg.registerClass(p_);var b_=class extends uC{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",b_.verifyArgs(t),this.rank=e,oN(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new VS(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=h_(t.kernelSize,e,"kernelSize"),this.strides=h_(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,MN(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,RN(this.dataFormat),this.activation=QE(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=CT(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=bN(t.biasConstraint),this.biasRegularizer=i_(t.biasRegularizer),this.activityRegularizer=i_(t.activityRegularizer),this.dilationRate=h_(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new US(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new US(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new US(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(HS("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!iN(e.kernelSize,"number",1,3))throw new US(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:YE(this.activation),useBias:this.useBias,biasInitializer:TT(this.biasInitializer),biasRegularizer:a_(this.biasRegularizer),activityRegularizer:a_(this.activityRegularizer),biasConstraint:yN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},x_=class extends b_{constructor(e,t){super(e,t),this.kernel=null,x_.verifyArgs(t),this.filters=t.filters,oN(this.filters,"filters"),this.kernelInitializer=CT(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=bN(t.kernelConstraint),this.kernelRegularizer=i_(t.kernelRegularizer)}build(e){e=JT(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new US(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return jg((()=>{e=YT(e);let t,n=null==this.bias?null:this.bias.read(),r=uN(this.activation.getClassName());if(null!=r&&2===this.rank)t=A_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return jg((()=>{if(null==s&&(s="channelsLast"),RN(s),3!==e.shape.length)throw new US(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new US(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new US(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Fm(e,[0,2,1])),"causal"===a)throw new VS("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=sA(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=aT(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=A_(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new VS("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return jg((()=>{if(null==s&&(s="channelsLast"),RN(s),4!==e.rank&&5!==e.rank)throw new US(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new US(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=y_(e,s);if("causal"===a)throw new VS("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=lA(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=aT(o,n)),"channelsFirst"===s&&(o=Fm(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=JT(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let r=f_(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:TT(this.kernelInitializer),kernelRegularizer:a_(this.kernelRegularizer),kernelConstraint:yN(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new US(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},w_=class extends x_{constructor(e){super(2,e),w_.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!iN(e.kernelSize,"number",1,2))throw new US(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},v_=w_;v_.className="Conv2D",bg.registerClass(v_);var k_=class extends x_{constructor(e){super(3,e),k_.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new US(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},I_=k_;I_.className="Conv3D",bg.registerClass(I_);var S_=class extends v_{constructor(e){if(super(e),this.inputSpec=[new aC({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new US(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=JT(e)).length)throw new US("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new US("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new aC({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return jg((()=>{let t=YT(e);if(4!==t.shape.length)throw new US(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a=t.shape,s=a[0];"channelsFirst"===this.dataFormat?(n=2,r=3):(n=1,r=2);let i=a[n],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],d=this.strides[0],c=this.strides[1],p=[s,m_(i,d,l,this.padding),m_(o,c,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Fm(t,[0,2,3,1]));let h=oA(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=Fm(h,[0,3,1,2])),null!=this.bias&&(h=aT(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){let t,n,r,a=(e=JT(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3):(t=3,n=1,r=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[n]=m_(a[n],o,s,this.padding),a[r]=m_(a[r],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};S_.className="Conv2DTranspose",bg.registerClass(S_);var N_=class extends I_{constructor(e){if(super(e),this.inputSpec=[new aC({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new US(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=JT(e)).length)throw new US("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new US("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new aC({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return jg((()=>{let t=YT(e);if(5!==t.shape.length)throw new US(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,r,a,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(a=2,n=3,r=4):(a=1,n=2,r=3);let o=s[a],l=s[n],u=s[r],d=this.kernelSize[0],c=this.kernelSize[1],p=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,m_(o,h,d,this.padding),m_(l,f,c,this.padding),m_(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Fm(t,[0,2,3,4,1]));let y=dA(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Fm(y,[0,4,1,2,3])),null!==this.bias&&(y=aT(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,r,a,s=(e=JT(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,r=3,a=4):(t=4,n=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],d=this.strides[1],c=this.strides[2];return s[t]=this.filters,s[n]=m_(s[n],u,i,this.padding),s[r]=m_(s[r],d,o,this.padding),s[a]=m_(s[a],c,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};N_.className="Conv3DTranspose",bg.registerClass(N_);var T_=class extends x_{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new US("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new US("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new US(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=CT(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=i_(t.depthwiseRegularizer),this.depthwiseConstraint=bN(t.depthwiseConstraint),this.pointwiseInitializer=CT(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=i_(t.pointwiseRegularizer),this.pointwiseConstraint=bN(t.pointwiseConstraint)}build(e){if((e=JT(e)).length<this.rank+2)throw new US(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new US(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new aC({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return jg((()=>{let t;if(e=YT(e),1===this.rank)throw new VS("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Fm(e,[0,2,3,1])),t=bx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=aT(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Fm(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=TT(this.depthwiseInitializer),e.pointwiseInitializer=TT(this.pointwiseInitializer),e.depthwiseRegularizer=a_(this.depthwiseRegularizer),e.pointwiseRegularizer=a_(this.pointwiseRegularizer),e.depthwiseConstraint=yN(this.depthwiseConstraint),e.pointwiseConstraint=yN(this.pointwiseConstraint),e}};T_.className="SeparableConv";var C_=class extends T_{constructor(e){super(2,e)}};C_.className="SeparableConv2D",bg.registerClass(C_);var E_=class extends x_{constructor(e){super(1,e),E_.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!iN(e.kernelSize,"number",1,1))throw new US(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},__=E_;__.className="Conv1D",bg.registerClass(__);var R_=class extends uC{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return jg((()=>{if(e=YT(e),"channelsLast"===this.dataFormat){let t=XN(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return XN(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=XN(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return XN(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};R_.className="Cropping2D",bg.registerClass(R_);var M_=class extends uC{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,RN(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,function(e){sN(NN,"InterpolationFormat",e)}(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return jg((()=>{let t=YT(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Fm(t,[0,2,3,1]);let e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?gv.resizeNearestNeighbor(t,[e,r]):gv.resizeBilinear(t,[e,r]);return Fm(a,[0,3,1,2])}{let e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?gv.resizeNearestNeighbor(t,[e,r]):gv.resizeBilinear(t,[e,r])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};M_.className="UpSampling2D",bg.registerClass(M_);var $_=class extends b_{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=CT(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=bN(e.depthwiseConstraint),this.depthwiseRegularizer=i_(e.depthwiseRegularizer)}build(e){if((e=JT(e)).length<4)throw new US(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new US(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return jg((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return jg((()=>{null==a&&(a="channelsLast"),RN(a);let i=g_(e,a);if(4!==e.rank)throw new US(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new US(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=yA(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Fm(i,[0,3,1,2])),i}))}(e=YT(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=aT(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=JT(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=f_(t,this.kernelSize[0],this.padding,this.strides[0]),s=f_(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=TT(this.depthwiseInitializer),e.depthwiseRegularizer=a_(this.depthwiseRegularizer),e.depthwiseConstraint=yN(this.depthwiseRegularizer),e}};function F_(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new US("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function O_(e,t,n,r=!1,a,s,i=!1,o=!1){return jg((()=>{let l=t.shape.length;if(l<3)throw new US(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(GN(2,l));if(t=Fm(t,u),null!=s)throw new VS("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=um(um(a,"bool"),"float32")).rank===l-1&&(a=EA(a,-1)),a=Fm(a,u)),r&&(t=dx(t,0),null!=a&&(a=dx(a,0)));let d,c,p,h=[],f=n,m=t.shape[0],g=Zx(t);null!=a&&(c=Zx(a));for(let t=0;t<m;++t){let n=g[t],r=jg((()=>e(n,f)));if(null==a)d=r[0],f=r[1];else{let e=jg((()=>{let e=c[t],n=ib(Lb(e),e);return{output:ay(oy(r[0],e),oy(f[0],n)),newStates:f.map(((t,a)=>ay(oy(r[1][a],e),oy(t,n))))}}));d=e.output,f=e.newStates}o&&h.push(d)}return o&&(p=Dx(h,1)),[d,p,f]}))}$_.className="DepthwiseConv2D",bg.registerClass($_);var z_=class extends uC{constructor(e){let t;if(super(e),null==e.cell)throw new US("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new j_({cells:e.cell}):e.cell,null==t.stateSize)throw new US("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new aC({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?GN(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){XT(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,r=t[0];if(n=this.returnSequences?[e[0],e[1],r]:[e[0],r],this.returnState){let r=[];for(let n of t)r.push([e[0],n]);return[n].concat(r)}return n}computeMask(e,t){return jg((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new VS("Constants support is not implemented in RNN yet.");XT(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new aC({shape:[t,null,...n]});let r,a=[e[0]].concat(e.slice(2));if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Jp.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new US(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new aC({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){jg((()=>{if(!this.stateful)throw new WS("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new US("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Tb([n,e]))):this.states_=[Tb([n,this.cell.stateSize])];else if(null==e)Hg(this.states_),null!=this.keptStates&&(Hg(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Tb([n,e]))):this.states_[0]=Tb([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new US(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Hg(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!Jp.arraysEqual(r.shape,s))throw new US(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>qg(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=F_(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new aC({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof sC){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return jg((()=>{let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;e=YT(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new US(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=O_(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],d=o[2];this.stateful&&this.resetStates(d,r);let c=this.returnSequences?u:l;return this.returnState?[c].concat(d):c}))}getInitialState(e){return jg((()=>{let t=Tb(e.shape);return t=ob(t,[1,2]),t=HN(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?JN(t,[1,e]):t)):this.cell.stateSize>1?[JN(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===z_.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let r=IC(t.cell,n);return new e(Object.assign(t,{cell:r}))}},D_=z_;D_.className="RNN",bg.registerClass(D_);var P_=class extends uC{},L_=class extends P_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,oN(this.units,"units"),this.activation=QE(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=CT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=CT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=CT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=i_(e.kernelRegularizer),this.recurrentRegularizer=i_(e.recurrentRegularizer),this.biasRegularizer=i_(e.biasRegularizer),this.kernelConstraint=bN(e.kernelConstraint),this.recurrentConstraint=bN(e.recurrentConstraint),this.biasConstraint=bN(e.biasConstraint),this.dropout=UN([1,VN([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=UN([1,VN([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=JT(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return jg((()=>{if(2!==e.length)throw new US(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=H_({ones:()=>Lb(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=H_({ones:()=>Lb(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;a=eT(null!=s?oy(e,s):e,this.kernel.read()),null!=this.bias&&(a=aT(a,this.bias.read())),null!=i&&(n=oy(n,i));let o=ay(a,eT(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:YE(this.activation),useBias:this.useBias,kernelInitializer:TT(this.kernelInitializer),recurrentInitializer:TT(this.recurrentInitializer),biasInitializer:TT(this.biasInitializer),kernelRegularizer:a_(this.kernelRegularizer),recurrentRegularizer:a_(this.recurrentRegularizer),biasRegularizer:a_(this.biasRegularizer),activityRegularizer:a_(this.activityRegularizer),kernelConstraint:yN(this.kernelConstraint),recurrentConstraint:yN(this.recurrentConstraint),biasConstraint:yN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout}}};L_.className="SimpleRNNCell",bg.registerClass(L_);var W_=class extends D_{constructor(e){e.cell=new L_(e),super(e)}call(e,t){return jg((()=>{null!=this.cell.dropoutMask&&(Hg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}};W_.className="SimpleRNN",bg.registerClass(W_);var B_=class extends P_{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new US("GRUCell does not support reset_after parameter set to true.");this.units=e.units,oN(this.units,"units"),this.activation=QE(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=QE(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=CT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=CT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=CT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=i_(e.kernelRegularizer),this.recurrentRegularizer=i_(e.recurrentRegularizer),this.biasRegularizer=i_(e.biasRegularizer),this.kernelConstraint=bN(e.kernelConstraint),this.recurrentConstraint=bN(e.recurrentConstraint),this.biasConstraint=bN(e.biasConstraint),this.dropout=UN([1,VN([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=UN([1,VN([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=JT(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return jg((()=>{if(2!==e.length)throw new US(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=H_({ones:()=>Lb(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=H_({ones:()=>Lb(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=oy(e,o[0]));let u=eT(e,this.kernel.read());this.useBias&&(u=aT(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=oy(r,l[0]));let d=this.recurrentKernel.read(),[c,p]=Mx(d,[2*this.units,this.units],d.rank-1),h=eT(r,c),[f,m,g]=Mx(u,3,u.rank-1),[y,A]=Mx(h,2,h.rank-1);a=this.recurrentActivation.apply(ay(f,y)),s=this.recurrentActivation.apply(ay(m,A));let b=eT(oy(s,r),p);i=this.activation.apply(ay(g,b));let x=ay(oy(a,r),oy(ay(1,nb(a)),i));return[x,x]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:YE(this.activation),recurrentActivation:YE(this.recurrentActivation),useBias:this.useBias,kernelInitializer:TT(this.kernelInitializer),recurrentInitializer:TT(this.recurrentInitializer),biasInitializer:TT(this.biasInitializer),kernelRegularizer:a_(this.kernelRegularizer),recurrentRegularizer:a_(this.recurrentRegularizer),biasRegularizer:a_(this.biasRegularizer),activityRegularizer:a_(this.activityRegularizer),kernelConstraint:yN(this.kernelConstraint),recurrentConstraint:yN(this.recurrentConstraint),biasConstraint:yN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1}}};B_.className="GRUCell",bg.registerClass(B_);var U_=class extends D_{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new B_(e),super(e)}call(e,t){return jg((()=>{null!=this.cell.dropoutMask&&(Hg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};U_.className="GRU",bg.registerClass(U_);var V_=class extends P_{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,oN(this.units,"units"),this.activation=QE(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=QE(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=CT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=CT(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=CT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=i_(e.kernelRegularizer),this.recurrentRegularizer=i_(e.recurrentRegularizer),this.biasRegularizer=i_(e.biasRegularizer),this.kernelConstraint=bN(e.kernelConstraint),this.recurrentConstraint=bN(e.recurrentConstraint),this.biasConstraint=bN(e.biasConstraint),this.dropout=UN([1,VN([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=UN([1,VN([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,r=(e=JT(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,r=this.units;n=new((t=class extends uT{apply(t,n){let a=e.apply([r]),s=(new cT).apply([r]),i=e.apply([2*r]);return YN(YN(a,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return jg((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new US(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=H_({ones:()=>Lb(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=H_({ones:()=>Lb(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,d=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=oy(e,u[0]));let c=eT(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=oy(r,d[0])),c=ay(c,eT(r,this.recurrentKernel.read())),this.useBias&&(c=aT(c,this.bias.read()));let[p,h,f,m]=Mx(c,4,c.rank-1);s=this.recurrentActivation.apply(p),i=this.recurrentActivation.apply(h),o=ay(oy(i,a),oy(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=oy(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){return{...super.getConfig(),units:this.units,activation:YE(this.activation),recurrentActivation:YE(this.recurrentActivation),useBias:this.useBias,kernelInitializer:TT(this.kernelInitializer),recurrentInitializer:TT(this.recurrentInitializer),biasInitializer:TT(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:a_(this.kernelRegularizer),recurrentRegularizer:a_(this.recurrentRegularizer),biasRegularizer:a_(this.biasRegularizer),activityRegularizer:a_(this.activityRegularizer),kernelConstraint:yN(this.kernelConstraint),recurrentConstraint:yN(this.recurrentConstraint),biasConstraint:yN(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation}}};V_.className="LSTMCell",bg.registerClass(V_);var G_=class extends D_{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new V_(e),super(e)}call(e,t){return jg((()=>{null!=this.cell.dropoutMask&&(Hg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};G_.className="LSTM",bg.registerClass(G_);var j_=class extends P_{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return jg((()=>{let n=e.slice(1),r=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;XT(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{ON(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){return{...super.getConfig(),cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))}}static fromConfig(e,t,n={}){let r=[];for(let e of t.cells)r.push(IC(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return nC(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}rC(t)}};function H_(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):sT(t(),n),o=()=>iT(i,t,r);return!a||a<=1?qg(o().clone()):Array(a).fill(void 0).map(o).map((e=>qg(e.clone())))}j_.className="StackedRNNCells",bg.registerClass(j_);var q_=class extends D_{constructor(e){if(e.unroll)throw new VS("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new VS("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new aC({ndim:5})]}call(e,t){return jg((()=>{if(null!=this.cell.dropoutMask&&(Hg(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Hg(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new US("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return jg((()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Tb([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){jg((()=>{if(!this.stateful)throw new WS("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new US("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Tb(a))):this.states_=[Tb(a)];else if(null==e)Hg(this.states_),null!=this.keptStates&&(Hg(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Tb(a))):this.states_[0]=Tb(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new US(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Hg(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],r=a;if(!Jp.arraysEqual(n.shape,r))throw new US(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>qg(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],d=f_(l,r[0],a,s[0],i[0]),c=f_(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,d,c]:[d,c,n]]}};q_.className="ConvRNN2D";var K_=class extends V_{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,oN(this.filters,"filters"),this.kernelSize=h_(n,2,"kernelSize"),this.kernelSize.forEach((e=>oN(e,"kernelSize"))),this.strides=h_(r||1,2,"strides"),this.strides.forEach((e=>oN(e,"strides"))),this.padding=a||"valid",MN(this.padding),this.dataFormat=s||"channelsLast",RN(this.dataFormat),this.dilationRate=h_(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>oN(e,"dilationRate")))}build(e){var t;e=JT(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new US(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,r=this.filters;e=new((t=class extends uT{apply(e,t){return ZN([n.apply([r]),Cb([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return jg((()=>{if(3!==e.length)throw new US(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=H_({ones:()=>Lb(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?oy(t[n],e):e,l=o(r,i,0),u=o(r,i,1),d=o(r,i,2),c=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=H_({ones:()=>Lb(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,h=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3),[y,A,b,x]=Mx(this.kernel.read(),4,3),[w,v,k,I]=this.useBias?Mx(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,A,v,this.padding),d=this.inputConv(d,b,k,this.padding),c=this.inputConv(c,x,I,this.padding);let[S,N,T,C]=Mx(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,C);let E=this.recurrentActivation.apply(ay(l,h)),_=this.recurrentActivation.apply(ay(u,f)),R=ay(oy(_,s),oy(E,this.activation.apply(ay(d,m)))),M=oy(this.recurrentActivation.apply(ay(c,g)),this.activation.apply(R));return[M,M,R]}))}getConfig(){let{units:e,...t}=super.getConfig();return{...t,filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides}}inputConv(e,t,n,r){let a=aA(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?aT(a,n,this.dataFormat):a}recurrentConv(e,t){return aA(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};K_.className="ConvLSTM2DCell",bg.registerClass(K_);var X_=class extends q_{constructor(e){let t=new K_(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};X_.className="ConvLSTM2D",bg.registerClass(X_);var Z_=class extends uC{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,r=this.getNoiseShape(n);return iT((()=>sT(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Z_.className="Dropout",bg.registerClass(Z_);var Y_=class extends Z_{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Y_.className="SpatialDropout1D",bg.registerClass(Y_);var J_=class extends uC{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,oN(this.units,"units"),this.activation=QE(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=CT(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=CT(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=bN(e.kernelConstraint),this.biasConstraint=bN(e.biasConstraint),this.kernelRegularizer=i_(e.kernelRegularizer),this.biasRegularizer=i_(e.biasRegularizer),this.activityRegularizer=i_(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=JT(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=JT(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n,r=YT(e),a=uN(this.activation.getClassName());return null!=a?n=eT(r,this.kernel.read(),a,this.bias?this.bias.read():null):(n=eT(r,this.kernel.read()),null!=this.bias&&(n=aT(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:YE(this.activation),useBias:this.useBias,kernelInitializer:TT(this.kernelInitializer),biasInitializer:TT(this.biasInitializer),kernelRegularizer:a_(this.kernelRegularizer),biasRegularizer:a_(this.biasRegularizer),activityRegularizer:a_(this.activityRegularizer),kernelConstraint:yN(this.kernelConstraint),biasConstraint:yN(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};J_.className="Dense",bg.registerClass(J_);var Q_=class extends uC{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=JT(e);for(let t of e.slice(1))if(null==t)throw new US(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],BN(e,1)]}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Fm(n,e)}return function(e){if(e.rank<=1)throw new US(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],BN(e.shape,1)];return Oy(e,t)}(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Q_.className="Flatten",bg.registerClass(Q_);var eR=class extends uC{constructor(e){super(e),this.supportsMasking=!0,this.activation=QE(e.activation)}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e);return this.activation.apply(n)}))}getConfig(){let e={activation:YE(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};eR.className="Activation",bg.registerClass(eR);var tR=class extends uC{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return jg((()=>function(e,t){return jg((()=>{if(2!==e.shape.length)throw new US(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return JN(HN(e,1),[1,t,1])}))}(e=YT(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};tR.className="RepeatVector",bg.registerClass(tR);var nR=class extends uC{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let e=0;e<r.length;++e){let t=r[e];if(this.isUnknown(t)){if(null!==s)throw new US("Can only specifiy one unknown dimension.");s=e}else a*=t}let i=BN(e);if(null!==s){if(0===a||i%a!=0)throw new US(n);r[s]=i/a}else if(i!==a)throw new US(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Oy(n,a)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};nR.className="Reshape",bg.registerClass(nR);var rR=class extends uC{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=GN(1,e.dims.length+1);if(!Jp.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new aC({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=JT(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Fm(YT(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};rR.className="Permute",bg.registerClass(rR);var aR=class extends uC{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=YT(e);return hy(Pb(n,this.maskValue),-1)}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e),r=hy(Pb(n,this.maskValue),-1,!0);return oy(n,um(r,n.dtype))}))}};aR.className="Masking",bg.registerClass(aR);var sR=class extends uC{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(XS(e.inputLength))}this.inputDim=e.inputDim,oN(this.inputDim,"inputDim"),this.outputDim=e.outputDim,oN(this.outputDim,"outputDim"),this.embeddingsInitializer=CT(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=i_(e.embeddingsRegularizer),this.activityRegularizer=i_(e.activityRegularizer),this.embeddingsConstraint=bN(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return jg((()=>this.maskZero?(e=YT(e),Pb(e,vA(e))):null))}computeOutputShape(e){if(e=JT(e),null==this.inputLength)return[...e,this.outputDim];let t=XS(this.inputLength);if(t.length!==e.length-1)throw new US(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new US(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e);"int32"!==n.dtype&&(n=jN(n,"int32"));let r=tT(this.embeddings.read(),Oy(n,[n.size]));return Oy(r,JT(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:TT(this.embeddingsInitializer),embeddingsRegularizer:a_(this.embeddingsRegularizer),activityRegularizer:a_(this.activityRegularizer),embeddingsConstraint:yN(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};sR.className="Embedding",bg.registerClass(sR);var iR=class extends uC{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new VS}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new US("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[JT(e)]),e.length<2)throw new US(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=rN(t),t.length>1)throw new US(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let r=e.map((e=>e.length));-1===e.indexOf(null)&&1===rN(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return jg((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let r=VN(n);for(let n of e){let e=n.rank;for(let t=0;t<r-e;++t)n=HN(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let r of e){let e=r.rank;if(null==e){let e=r.shape,a=e[0],s=e.slice(1).concat([a]),i=Oy(r,[a].concat(BN(e.slice(1))));i=Fm(i,[1,0]),i=Oy(i,s),t.push(i),n=!0}else if(e>1){let a=GN(1,e).concat([0]);t.push(Fm(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t),a=r.rank;if(n)if(null==a){let e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Oy(Fm(Oy(r,[-1,t]),[1,0]),n)}else if(a>1){let e=[a-1].concat(GN(0,a-1));r=Fm(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=rN(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return jg((()=>{if(null==t)return null;if(!Array.isArray(t))throw new US("`mask` should be an Array");if(!Array.isArray(e))throw new US("`inputs` should be an Array");if(t.length!==e.length)throw new US(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:EA(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ab(n,t[e]);return n}))}},oR=class extends iR{constructor(e){super(e)}mergeFunction(e){return jg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ay(t,e[n]);return t}))}};oR.className="Add",bg.registerClass(oR);var lR=class extends iR{constructor(e){super(e)}mergeFunction(e){return jg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=oy(t,e[n]);return t}))}};lR.className="Multiply",bg.registerClass(lR);var uR=class extends iR{constructor(e){super(e)}mergeFunction(e){return jg((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ay(t,e[n]);return oy(1/e.length,t)}))}};uR.className="Average",bg.registerClass(uR);var dR=class extends iR{constructor(e){super(e)}mergeFunction(e){return jg((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Sb(t,e[n]);return t}))}};dR.className="Maximum",bg.registerClass(dR);var cR=class extends iR{constructor(e){super(e)}mergeFunction(e){return jg((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Rb(t,e[n]);return t}))}};cR.className="Minimum",bg.registerClass(cR);var pR=class extends iR{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new US("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let r=e[t].slice();r.splice(this.axis,1);let a=!1;for(let e of n)if(Jp.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new US("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return jg((()=>ZN(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new US("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new US("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new US("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new US(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return jg((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(um(Lb(e[n]),"bool")):t[n].rank<e[n].rank?r.push(EA(t[n],-1)):r.push(t[n]);let a=Py(r,this.axis);return py(a,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function hR(e,t){for(;e<0;)e+=t;return e}pR.className="Concatenate",bg.registerClass(pR);var fR=class extends iR{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Jp.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new VS("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new US(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new US(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>hR(t,e[n].shape.length))):[hR(this.axes,n.shape.length),hR(this.axes,r.shape.length)],this.normalize&&(n=SC(n,t[0]),r=SC(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new VS("batchDot is not implemented for tensors of 4D or higher rank yet");if(Jp.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Jp.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new VS("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);let s=n;return jg((()=>{let n,i;if(r>a){n=r-a;let e=[];for(let t=0;t<n;++t)e.push(1);t=Oy(t,t.shape.concat(e))}else if(a>r){n=a-r;let t=[];for(let e=0;e<n;++e)t.push(1);e=Oy(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?ob(oy(e,t),s[0]):ob(oy(Fm(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Mm(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;let t=[];for(let r=e;r<e+n;++r)t.push(r);i=zx(i,t)}return 1===i.shape.length&&(i=EA(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[hR(this.axes,e.length),hR(this.axes,t.length)],n}computeOutputShape(e){Jp.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new VS("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};fR.className="Dot",bg.registerClass(fR);var mR=class extends uC{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e);return iT((()=>ay(QN(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};mR.className="GaussianNoise",bg.registerClass(mR);var gR=class extends uC{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return jg((()=>{this.invokeCallHook(e,t);let n=YT(e);return this.rate>0&&this.rate<1?iT((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return oy(n,QN(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};gR.className="GaussianDropout",bg.registerClass(gR);var yR=class extends uC{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||YT(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return jg((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return iT((()=>{let t=YT(e),r=-1.7580993408473766,a=DA(ax(n),this.rate);a=jN(a,"float32");let s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=ay(oy(t,a),oy(ay(a,-1),r));return ay(oy(o,s),i)}),(()=>YT(e)),t.training||!1)}return e}))}};function AR(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Hy(e,t,n,r,a,s);else if(3===e.rank)i=qy(e,t,n,r,a,s);else{if(4!==e.rank)throw new VS(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ky(e,t,n,r,a,s)}return i}yR.className="AlphaDropout",bg.registerClass(yR);var bR=class extends uC{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=CT(e.betaInitializer||"zeros"),this.gammaInitializer=CT(e.gammaInitializer||"ones"),this.movingMeanInitializer=CT(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=CT(e.movingVarianceInitializer||"ones"),this.betaConstraint=bN(e.betaConstraint),this.gammaConstraint=bN(e.gammaConstraint),this.betaRegularizer=i_(e.betaRegularizer),this.gammaRegularizer=i_(e.gammaRegularizer)}build(e){e=JT(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new US(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new aC({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return jg((()=>{let n=null!=t.training&&t.training,r=YT(e),a=r.shape,s=a.length,i=GN(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=jS(1,s);l[o]=a[o];let u=i.slice();u.sort();let d=!Jp.arraysEqual(u,GN(0,s).slice(0,s-1));if(!n)return(()=>{if(d){let e=Oy(this.movingMean.read(),l),t=Oy(this.movingVariance.read(),l),n=this.center?Oy(this.beta.read(),l):null,a=this.scale?Oy(this.gamma.read(),l):null;return AR(r,e,t,n,a,this.epsilon)}return AR(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[c,p,h]=function(e,t,n,r,a=.001){return Jp.arraysEqual(r.slice().sort(),GN(0,e.rank-1))?function(e,t,n,r,a=.001){return jg((()=>{let s=Ob(e,r),i=s.mean,o=s.variance;return[AR(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return jg((()=>{let s=Ob(e,r),i=s.mean,o=s.variance,l=[];for(let t of GN(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=Oy(i,l),d=Oy(o,l),c=null==t?null:Oy(t,l),p=null==n?null:Oy(n,l);return[AR(e,u,d,p,c,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{jg((()=>{let r=1-n,a=e.read(),s=oy(ib(a,t),r);e.write(ib(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,h,this.momentum)})(),c}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:TT(this.betaInitializer),gammaInitializer:TT(this.gammaInitializer),movingMeanInitializer:TT(this.movingMeanInitializer),movingVarianceInitializer:TT(this.movingVarianceInitializer),betaRegularizer:a_(this.betaRegularizer),gammaRegularizer:a_(this.gammaRegularizer),betaConstraint:yN(this.betaConstraint),gammaConstraint:yN(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};bR.className="BatchNormalization",bg.registerClass(bR);var xR=class extends uC{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=CT(e.betaInitializer||"zeros"),this.gammaInitializer=CT(e.gammaInitializer||"ones"),this.betaRegularizer=i_(e.betaRegularizer),this.gammaRegularizer=i_(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=JT(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==rN(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=YT(e),r=n.shape,a=r.length;return jg((()=>{let{mean:e,variance:t}=Ob(n,this.axis,!0),s=jS(1,a);for(let e of this.axis)s[e]=r[e];let i=e=>null!=e&&e.shape.length!==a?Oy(e,s):e,o=i(this.gamma.read()),l=i(this.beta.read()),u=[],d=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),d.push(1)):(u.push(1),d.push(r[e]));return e=RA(e,u),t=RA(t,u),o=RA(o,d),l=RA(l,d),AR(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:TT(this.betaInitializer),gammaInitializer:TT(this.gammaInitializer),betaRegularizer:a_(this.betaRegularizer),gammaRegularizer:a_(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};xR.className="LayerNormalization",bg.registerClass(xR);var wR=class extends uC{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new US(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new US(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new US(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new aC({ndim:4})]}computeOutputShape(e){let t,n;return e=JT(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return jg((()=>function(e,t,n){return jg((()=>{if(4!==e.rank)throw new US(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new US("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n="channelsLast"),"channelsLast"!==n&&"channelsFirst"!==n)throw new US(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],Bb(e,r)}))}(YT(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function vR(e,t,n,r,a,s){return jg((()=>{RN(a),$N(s),MN(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=g_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?vb(e,t,n,o):zy(e,t,n,o),"channelsFirst"===a&&(i=Fm(i,[0,3,1,2])),i}))}function kR(e,t,n,r,a,s){return jg((()=>{RN(a),$N(s),MN(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=y_(e,a);let i,o="same"===r?"same":"valid";return i="max"===s?kb(e,t,n,o):Dy(e,t,n,o),"channelsFirst"===a&&(i=Fm(i,[0,4,1,2,3])),i}))}wR.className="ZeroPadding2D",bg.registerClass(wR);var IR=class extends uC{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new US(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(oN(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new US(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}oN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,MN(this.padding),this.inputSpec=[new aC({ndim:3})]}computeOutputShape(e){let t=f_((e=JT(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return jg((()=>{this.invokeCallHook(e,t),e=HN(YT(e),2);let n=this.poolingFunction(YT(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return zx(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},SR=class extends IR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return RN(a),MN(r),vR(e,t,n,r,a,"max")}};SR.className="MaxPooling1D",bg.registerClass(SR);var NR=class extends IR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return RN(a),MN(r),vR(e,t,n,r,a,"avg")}};NR.className="AveragePooling1D",bg.registerClass(NR);var TR=class extends uC{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new US(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];oN(this.poolSize,"poolSize"),oN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,RN(this.dataFormat),MN(this.padding),this.inputSpec=[new aC({ndim:4})]}computeOutputShape(e){e=JT(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=f_(t,this.poolSize[0],this.padding,this.strides[0]),n=f_(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return jg((()=>(this.invokeCallHook(e,t),this.poolingFunction(YT(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},CR=class extends TR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return RN(a),MN(r),vR(e,t,n,r,a,"max")}};CR.className="MaxPooling2D",bg.registerClass(CR);var ER=class extends TR{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return RN(a),MN(r),vR(e,t,n,r,a,"avg")}};ER.className="AveragePooling2D",bg.registerClass(ER);var _R=class extends uC{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new US(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];oN(this.poolSize,"poolSize"),oN(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,RN(this.dataFormat),MN(this.padding),this.inputSpec=[new aC({ndim:5})]}computeOutputShape(e){e=JT(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=f_(t,this.poolSize[0],this.padding,this.strides[0]),n=f_(n,this.poolSize[1],this.padding,this.strides[1]),r=f_(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return jg((()=>(this.invokeCallHook(e,t),this.poolingFunction(YT(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},RR=class extends _R{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return RN(a),MN(r),kR(e,t,n,r,a,"max")}};RR.className="MaxPooling3D",bg.registerClass(RR);var MR=class extends _R{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return RN(a),MN(r),kR(e,t,n,r,a,"avg")}};MR.className="AveragePooling3D",bg.registerClass(MR);var $R=class extends uC{constructor(e){super(e),this.inputSpec=[new aC({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new VS}},FR=class extends $R{constructor(e){super(e||{})}call(e,t){return jg((()=>{let t=YT(e);return Nb(t,1)}))}};FR.className="GlobalAveragePooling1D",bg.registerClass(FR);var OR=class extends $R{constructor(e){super(e||{})}call(e,t){return jg((()=>{let t=YT(e);return sb(t,1)}))}};OR.className="GlobalMaxPooling1D",bg.registerClass(OR);var zR=class extends uC{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,RN(this.dataFormat),this.inputSpec=[new aC({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new VS}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},DR=class extends zR{call(e,t){return jg((()=>{let t=YT(e);return"channelsLast"===this.dataFormat?Nb(t,[1,2]):Nb(t,[2,3])}))}};DR.className="GlobalAveragePooling2D",bg.registerClass(DR);var PR=class extends zR{call(e,t){return jg((()=>{let t=YT(e);return"channelsLast"===this.dataFormat?sb(t,[1,2]):sb(t,[2,3])}))}};PR.className="GlobalMaxPooling2D",bg.registerClass(PR);var LR=class extends uC{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=IC(t.layer,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},WR=class extends LR{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=JT(e)).length<3)throw new US(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=JT(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return jg((()=>O_(((e,n)=>[YT(this.layer.call(e,t)),[]]),e=YT(e),[],!1,null,null,!1,!0)[1]))}};WR.className="TimeDistributed",bg.registerClass(WR);var BR=class extends LR{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=IC(n),t.goBackwards=!0!==t.goBackwards;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=IC(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,function(e){sN(EN,"BidirectionalMergeMode",e)}(this.mergeMode),e.weights)throw new VS("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(r=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):KS(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});let a=F_(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new US("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let r=n.map((e=>new aC({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new VS("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof sC;for(let e of s)if(e instanceof sC!==o)throw new US("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;let o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return jg((()=>{let n,r,a,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(a=n.slice(1).concat(r.slice(1))),n=n[0],r=r[0]),this.returnSequences&&(r=dx(r,1)),"concat"===this.mergeMode?s=ZN([n,r]):"sum"===this.mergeMode?s=ay(n,r):"ave"===this.mergeMode?s=oy(.5,ay(n,r)):"mul"===this.mergeMode?s=oy(n,r):null==this.mergeMode&&(s=[n,r]),this.returnState?null==this.mergeMode?s.concat(a):[s].concat(a):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ON(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),ON(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=IC(t.layer);if(delete t.layer,null!=t.numConstants)throw new VS("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};function UR(e){return new cC(e)}function VR(e){return new d_(e)}function GR(e){return new o_(e)}function jR(e){return new l_(e)}function HR(e){return new u_(e)}function qR(e){return new p_(e)}function KR(e){return new c_(e)}function XR(e){return new __(e)}function ZR(e){return new v_(e)}function YR(e){return new S_(e)}function JR(e){return new I_(e)}function QR(e){return new N_(e)}function eM(e){return new C_(e)}function tM(e){return new R_(e)}function nM(e){return new M_(e)}function rM(e){return new $_(e)}function aM(e){return new eR(e)}function sM(e){return new J_(e)}function iM(e){return new Z_(e)}function oM(e){return new Y_(e)}function lM(e){return new Q_(e)}function uM(e){return new tR(e)}function dM(e){return new nR(e)}function cM(e){return new rR(e)}function pM(e){return new sR(e)}function hM(e){return new oR(e)}function fM(e){return new uR(e)}function mM(e){return new pR(e)}function gM(e){return new dR(e)}function yM(e){return new cR(e)}function AM(e){return new lR(e)}function bM(e){return new fR(e)}function xM(e){return new bR(e)}function wM(e){return new xR(e)}function vM(e){return new wR(e)}function kM(e){return new NR(e)}function IM(e){return kM(e)}function SM(e){return kM(e)}function NM(e){return new ER(e)}function TM(e){return NM(e)}function CM(e){return NM(e)}function EM(e){return new MR(e)}function _M(e){return EM(e)}function RM(e){return EM(e)}function MM(e){return new FR(e)}function $M(e){return new DR(e)}function FM(e){return new OR(e)}function OM(e){return new PR(e)}function zM(e){return new SR(e)}function DM(e){return new CR(e)}function PM(e){return new RR(e)}function LM(e){return new U_(e)}function WM(e){return new B_(e)}function BM(e){return new G_(e)}function UM(e){return new V_(e)}function VM(e){return new W_(e)}function GM(e){return new L_(e)}function jM(e){return new X_(e)}function HM(e){return new K_(e)}function qM(e){return new D_(e)}function KM(e){return new j_(e)}function XM(e){return new BR(e)}function ZM(e){return new WR(e)}BR.className="Bidirectional",bg.registerClass(BR);var YM=FM,JM=OM,QM=zM,e$=DM;function t$(e){return new mR(e)}function n$(e){return new gR(e)}function r$(e){return new yR(e)}function a$(e){return new aR(e)}var s$={};function i$(e,t){return OC(e,t)}function o$(e,t){return LC(e,t)}function l$(e,t){return WC(e,t)}function u$(e,t){return zC(e,t)}function d$(e,t){return BC(e,t)}function c$(e,t){return PC(e,t)}function p$(e,t){return function(e,t){return jg((()=>{let n=DC(e,t),r=function(e,t){return jg((()=>um(ob(Ab(xA(e,1),xA(t,0))),"float32")))}(e,t),a=ay(n,r);return um(wA(zA(a,0),iy(n,a),0),"float32")}))}(e,t)}function h$(e,t){return MC(e,t)}function f$(e,t){return TC(e,t)}function m$(e,t){return CC(e,t)}function g$(e,t){return CC(e,t)}function y$(e,t){return CC(e,t)}function A$(e,t){return NC(e,t)}function b$(e,t){return NC(e,t)}function x$(e,t){return NC(e,t)}il(s$,{MAPE:()=>g$,MSE:()=>b$,binaryAccuracy:()=>i$,binaryCrossentropy:()=>o$,categoricalAccuracy:()=>u$,categoricalCrossentropy:()=>d$,cosineProximity:()=>h$,mape:()=>y$,meanAbsoluteError:()=>f$,meanAbsolutePercentageError:()=>m$,meanSquaredError:()=>A$,mse:()=>x$,precision:()=>c$,recall:()=>p$,sparseCategoricalAccuracy:()=>l$});var w$={};il(w$,{modelFromJSON:()=>CE});var v$={};function k$(e){return new n_(e)}function I$(e){return function(e){return e_(e),new n_({l1:null!=e?e.l1:null,l2:0})}(e)}function S$(e){return function(e){return e_(e),new n_({l2:null!=e?e.l2:null,l1:0})}(e)}il(v$,{l1:()=>I$,l1l2:()=>k$,l2:()=>S$});var N$=class extends mC{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof NE))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function T$(e,t){return e<t}function C$(e,t){return e>t}var E$=class extends N${constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new VS("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=T$:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=C$:this.monitorFunc=T$,this.monitorFunc===T$&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===T$?1/0:-1/0}async onEpochEnd(e,t){await hC(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}},_$={earlyStopping:function(e){return new E$(e)}};Cu().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));var R$,M$=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(M$||{});(e=>{let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(R$||(R$={}));var $$={};function F$(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};$$[e]=n}function O$(e){return $$[e]}function z$(e){delete $$[e]}function D$(e,t,n,r,a){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return P$(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>P$(e,n,r,a)));let o=P$(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:Jp.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function P$(e,t,n,r){let[a,s]=B$(e);if(null!=r){let e=r.getHashTableHandleByName(a);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[W$(a,e)]));return void 0!==i?t[W$(a,i)][s]:void 0}function L$(e,t){let[n,r,a]=B$(e);return[W$(n,t&&t.currentContextId),r,a]}function W$(e,t){return t?`${e}-${t}`:e}function B$(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function U$(e,t,n){let r=D$("pad",e,t,n);if("explicit"===r){r=D$("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function V$(e){return e.kept?e:dm(e)}var G$={};il(G$,{json:()=>j$});var j$=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H$={};il(H$,{json:()=>q$});var q$=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],K$={};il(K$,{json:()=>X$});var X$=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Z$={};il(Z$,{json:()=>Y$});var Y$=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],J$={};il(J$,{json:()=>Q$});var Q$=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],eF={};il(eF,{json:()=>tF});var tF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nF={};il(nF,{json:()=>rF});var rF=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],aF={};il(aF,{json:()=>sF});var sF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],iF={};il(iF,{json:()=>oF});var oF=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],lF={};il(lF,{json:()=>uF});var uF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],dF={};il(dF,{json:()=>cF});var cF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pF={};il(pF,{json:()=>hF});var hF=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],fF={};il(fF,{json:()=>mF});var mF=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],gF={};il(gF,{json:()=>yF});var yF=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],AF={};il(AF,{json:()=>bF});var bF=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],xF={};il(xF,{json:()=>wF});var wF=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],vF={};il(vF,{json:()=>kF});var kF=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],IF={};il(IF,{json:()=>SF});var SF=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],NF={};il(NF,{json:()=>TF});var TF=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],CF=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[G$,H$,K$,Z$,J$,eF,nF,aF,iF,lF,dF,pF,fF,gF,AF,xF,vF,IF,NF].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let c=Object.keys(i);c.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[r,,a]=L$(e),s=i[r];if(null!=s.outputs){let e=s.outputs.indexOf(a);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(d).length?c.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(d).forEach((e=>{let[t]=L$(e),n=i[t];null!=n&&(n.signatureKey=d[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=L$(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let h={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=O$(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let r,a=n.type;switch(n.type){case"string":r=_F(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_F(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=WF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=WF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=MF(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=MF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=LF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=LF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=RF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=RF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=UF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=UF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=PF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=PF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=BF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=BF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=OF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=OF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=zF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=zF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=FF(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=FF(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let a=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=L$(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:$F(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{let t=r[e];t.inputNames.forEach(((e,n)=>{let[a,,s]=L$(e),i=r[a];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=L$(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));let o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function EF(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Cu().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function _F(e,t,n,r=!1){let a=e[t];return null!=a?EF(a.s,r):n}function RF(e,t,n){let r=e[t];return r?r.b:n}function MF(e,t,n){let r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function $F(e){switch("string"==typeof e&&(e=M$[e]),e){case 1:case 19:case 2:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 7:return"string";default:return null}}function FF(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function OF(e,t,n){let r=e[t];return r&&r.type?$F(r.type):n}function zF(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>$F(e))):n}function DF(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function PF(e,t,n){let r=e[t];return r&&r.shape?DF(r.shape):n}function LF(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function WF(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>EF(e,r))):n}function BF(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>DF(e))):n}function UF(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var VF=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return P$(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return P$(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return MF(this.node.rawAttrs,e,t);if(null!=n.s)return _F(this.node.rawAttrs,e,t);if(null!=n.b)return RF(this.node.rawAttrs,e,t);if(null!=n.shape)return PF(this.node.rawAttrs,e,t);if(null!=n.type)return OF(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return LF(this.node.rawAttrs,e,t);if(null!=n.list.s)return WF(this.node.rawAttrs,e,t);if(null!=n.list.shape)return BF(this.node.rawAttrs,e,t);if(null!=n.list.b)return UF(this.node.rawAttrs,e,t);if(null!=n.list.type)return zF(this.node.rawAttrs,e,t)}return t}};function GF(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Jp.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){let a=e[r],s=t[r];Jp.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function jF(e){return!("number"==typeof e||e.some((e=>e<0)))}function HF(e,t,n){let r=qF(e,n),a=!jF(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=qF(e.shape,r)})),!jF(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function qF(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var KF=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=yx(0),qg(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),GF(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,qg(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return gf([],[0].concat(this.elementShape));let n=this.readMany(e);return GF(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Dx(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return gf([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return GF(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Py(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Zx(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===n?0:t.size/n,s=[];jg((()=>{t=Oy(t,[1,n,a]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Oy(Wy(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},XF=class{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);GF(t,e.shape,"TensorList shape mismatch: "),qg(e)})),this.idTensor=yx(0),this.maxNumElements=r,qg(this.idTensor)}get id(){return this.idTensor.id}copy(){return new XF([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);GF(e,this.elementShape,"TensorList shape mismatch: ");let r=HF(this.elementShape,this.tensors,e);return jg((()=>{let e=this.tensors.map((e=>Oy(e,r)));return Dx(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=HF(this.elementShape,this.tensors,e),r=this.tensors.pop();return GF(r.shape,e,"TensorList shape mismatch: "),Oy(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(GF(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");qg(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new XF([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);GF(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=HF(this.elementShape,this.tensors,t);return Oy(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);GF(this.elementShape,t.shape,"TensorList shape mismatch: "),qg(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);GF(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=HF(this.elementShape,this.tensors,n);return 0===e.length?gf([],[0].concat(r)):jg((()=>{let t=e.map((e=>Oy(this.tensors[e],r)));return Dx(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);GF(this.elementShape,t,"TensorList shape mismatch: ");let n=HF(this.elementShape,this.tensors,t);return 0===this.size()?gf([],[0].concat(n)):jg((()=>{let e=this.tensors.map((e=>Oy(e,n)));return Py(e,0)}))}};function ZF(e,t,n){let[r,a]=D$("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=D$("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=D$("strides",e,t,n),c=U$(e,t,n),p=D$("dataFormat",e,t,n).toUpperCase(),h=D$("dilations",e,t,n),[f,m]=D$("args",e,t,n);return i&&(m=f,f=void 0),{stride:d,pad:c,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:D$("leakyreluAlpha",e,t,n)}}function YF(e,t,n){return{boxes:D$("boxes",e,t,n),scores:D$("scores",e,t,n),maxOutputSize:D$("maxOutputSize",e,t,n),iouThreshold:D$("iouThreshold",e,t,n),scoreThreshold:D$("scoreThreshold",e,t,n),softNmsSigma:D$("softNmsSigma",e,t,n)}}var JF=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=yx(0),this.tensorMap=new Map,qg(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return yx(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),jg((()=>{let e=Zx(t),r=n.length,a=e.length;Jp.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){let r=n[t],a=e[t];qg(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return jg((()=>{let e=[];for(let r=0;r<n.length;r++){let a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Dx(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function QF(e,t,n,r){let a=((e,t,n)=>{switch(e.category){case"arithmetic":return jg((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ay(D$("a",e,t,n),D$("b",e,t,n))];case"AddN":return[cy(D$("tensors",e,t,n))];case"FloorMod":case"Mod":return[$b(D$("a",e,t,n),D$("b",e,t,n))];case"Mul":return[oy(D$("a",e,t,n),D$("b",e,t,n))];case"RealDiv":case"Div":return[iy(D$("a",e,t,n),D$("b",e,t,n))];case"DivNoNan":return[kA(D$("a",e,t,n),D$("b",e,t,n))];case"FloorDiv":return[sy(D$("a",e,t,n),D$("b",e,t,n))];case"Sub":return[ib(D$("a",e,t,n),D$("b",e,t,n))];case"Minimum":return[Rb(D$("a",e,t,n),D$("b",e,t,n))];case"Maximum":return[Sb(D$("a",e,t,n),D$("b",e,t,n))];case"Pow":return[Kb(D$("a",e,t,n),D$("b",e,t,n))];case"SquaredDifference":return[Ox(D$("a",e,t,n),D$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return jg((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[ly(D$("x",e,t,n))];case"Acos":return[uy(D$("x",e,t,n))];case"Acosh":return[dy(D$("x",e,t,n))];case"Asin":return[gy(D$("x",e,t,n))];case"Asinh":return[yy(D$("x",e,t,n))];case"Atan":return[Ay(D$("x",e,t,n))];case"Atan2":return[by(D$("x",e,t,n),D$("y",e,t,n))];case"Atanh":return[xy(D$("x",e,t,n))];case"Ceil":return[Jy(D$("x",e,t,n))];case"Complex":return[ff(D$("real",e,t,n),D$("imag",e,t,n))];case"Cos":return[cA(D$("x",e,t,n))];case"Cosh":return[pA(D$("x",e,t,n))];case"Elu":return[NA(D$("x",e,t,n))];case"Erf":return[TA(D$("x",e,t,n))];case"Exp":return[CA(D$("x",e,t,n))];case"Expm1":return[_A(D$("x",e,t,n))];case"Floor":return[FA(D$("x",e,t,n))];case"Log":return[qA(D$("x",e,t,n))];case"Log1p":return[KA(D$("x",e,t,n))];case"Imag":return[PA(D$("x",e,t,n))];case"Neg":return[nb(D$("x",e,t,n))];case"Reciprocal":return[ox(D$("x",e,t,n))];case"Real":return[ix(D$("x",e,t,n))];case"Relu":return[lx(D$("x",e,t,n))];case"Round":return[mx(D$("x",e,t,n))];case"Selu":return[Ax(D$("x",e,t,n))];case"Sigmoid":return[Ly(D$("x",e,t,n))];case"Sin":return[vx(D$("x",e,t,n))];case"Sign":return[wx(D$("x",e,t,n))];case"Sinh":return[kx(D$("x",e,t,n))];case"Softplus":return[rb(D$("x",e,t,n))];case"Sqrt":return[Fx(D$("x",e,t,n))];case"Square":return[Fb(D$("x",e,t,n))];case"Tanh":return[By(D$("x",e,t,n))];case"Tan":return[Wx(D$("x",e,t,n))];case"ClipByValue":return[Qy(D$("x",e,t,n),D$("clipValueMin",e,t,n),D$("clipValueMax",e,t,n))];case"Relu6":return[ux(D$("x",e,t,n))];case"Rsqrt":return[gx(P$(e.inputNames[0],t,n))];case"Prod":return[Zb(D$("x",e,t,n),D$("axes",e,t,n))];case"LeakyRelu":return[UA(D$("x",e,t,n),D$("alpha",e,t,n))];case"Prelu":return[Xb(D$("x",e,t,n),D$("alpha",e,t,n))];case"IsNan":return[BA(P$(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=D$("thenBranch",e,t,n),a=D$("elseBranch",e,t,n),s=D$("cond",e,t,n),i=D$("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=D$("body",e,t,n),a=D$("cond",e,t,n),s=D$("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[V$(D$("pred",e,t,n))];case"Switch":{let r=D$("pred",e,t,n),a=D$("data",e,t,n);return a.kept||(a=V$(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find((e=>void 0!==P$(e,t,n)));return r?[V$(P$(r,t,n))]:void 0}case"Enter":{let r=D$("frameName",e,t,n),a=D$("tensor",e,t,n);return n.enterFrame(r),[V$(a)]}case"Exit":{let r=D$("tensor",e,t,n);return n.exitFrame(),[V$(r)]}case"NextIteration":{let r=D$("tensor",e,t,n);return n.nextIteration(),[V$(r)]}case"TensorArrayV3":{let r=D$("size",e,t,n),a=D$("dtype",e,t,n),s=D$("elementShape",e,t,n),i=D$("dynamicSize",e,t,n),o=D$("clearAfterRead",e,t,n),l=D$("identicalElementShapes",e,t,n),u=D$("name",e,t,n),d=new KF(u,a,r,s,l,i,o);return n.addTensorArray(d),[d.idTensor,yx(1)]}case"TensorArrayWriteV3":{let r=D$("tensorArrayId",e,t,n),a=D$("index",e,t,n),s=D$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=D$("tensorArrayId",e,t,n),a=D$("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=D$("tensorArrayId",e,t,n),a=D$("indices",e,t,n),s=D$("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=D$("tensorArrayId",e,t,n),a=D$("indices",e,t,n),s=D$("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=D$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=D$("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=D$("tensorArrayId",e,t,n),a=D$("tensor",e,t,n),s=D$("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=D$("tensorArrayId",e,t,n);return[yx(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{let r=D$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=D$("tensorListId",e,t,n),a=D$("index",e,t,n),s=D$("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=D$("tensorListId",e,t,n),a=D$("index",e,t,n),s=D$("elementShape",e,t,n),i=D$("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=D$("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new XF([],n,e.dtype,r),i=Zx(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(D$("tensor",e,t,n),r,D$("elementShape",e,t,n),D$("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r,a=D$("elementShape",e,t,n),s=D$("elementDType",e,t,n);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=function(e,t,n){return new XF([],e,t,n)}(a,s,D$(r,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{let r=D$("tensorListId",e,t,n),a=D$("indices",e,t,n),s=D$("elementShape",e,t,n),i=D$("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=D$("tensorListId",e,t,n),a=D$("elementShape",e,t,n),s=D$("elementDType",e,t,n),i=D$("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=function(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);GF(e.shape.slice(1),t,"TensorList shape mismatch: ");let a=Zx(e);return new XF(a,t,r)}(D$("tensor",e,t,n),D$("elementShape",e,t,n),D$("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{let r=D$("tensorListId",e,t,n),a=n.getTensorList(r.id),s=D$("dtype",e,t,n),i=D$("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=D$("tensorListId",e,t,n),a=D$("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=D$("tensorListId",e,t,n),a=D$("elementShape",e,t,n),s=D$("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=D$("tensor",e,t,n),a=D$("elementShape",e,t,n),s=function(e,t,n){let r=0,a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);let s=qF(e.shape.slice(1),n),i=0===r?0:e.size/r,o=jg((()=>{let n=[];e=Oy(e,[1,r,i]);for(let r=0;r<t.length;++r){let o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=Oy(Wy(e,o,l),s)}return e.dispose(),n})),l=new XF([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,D$("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let r=D$("tensorListId",e,t,n);return[yx(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{let r=D$("tensorListId",e,t,n),a=D$("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return jg((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{let r=D$("stride",e,t,n),a=D$("pad",e,t,n),s=D$("dataFormat",e,t,n).toUpperCase(),i=D$("dilation",e,t,n);return[sA(D$("x",e,t,n),D$("filter",e,t,n),r,a,s,i)]}case"Conv2D":{let r=D$("strides",e,t,n),a=U$(e,t,n),s=D$("dataFormat",e,t,n).toUpperCase(),i=D$("dilations",e,t,n);return[aA(D$("x",e,t,n),D$("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=ZF(e,t,n);return[cw.conv2d({x:D$("x",e,t,n),filter:D$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:d}=ZF(e,t,n);return[cw.depthwiseConv2d({x:D$("x",e,t,n),filter:D$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=D$("outputShape",e,t,n),a=D$("strides",e,t,n),s=U$(e,t,n);return[oA(D$("x",e,t,n),D$("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=D$("strides",e,t,n),a=U$(e,t,n),s=D$("dilations",e,t,n),i=D$("dataFormat",e,t,n).toUpperCase();return[yA(D$("input",e,t,n),D$("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("dataFormat",e,t,n).toUpperCase(),i=D$("dilations",e,t,n);return[lA(D$("x",e,t,n),D$("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("kernelSize",e,t,n);return[zy(D$("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("kernelSize",e,t,n);return[vb(D$("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("kernelSize",e,t,n),i=D$("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Ib(D$("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("kernelSize",e,t,n);return[Dy(D$("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("kernelSize",e,t,n);return[kb(D$("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=D$("strides",e,t,n),a=D$("pad",e,t,n),s=D$("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[bA(D$("x",e,t,n),D$("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return jg((()=>((e,t,n)=>{switch(e.op){case"Fill":{let r=D$("shape",e,t,n),a=D$("dtype",e,t,n);return[$A(r,D$("value",e,t,n),a)]}case"LinSpace":return[jA(D$("start",e,t,n),D$("stop",e,t,n),D$("num",e,t,n))];case"Multinomial":{let r=D$("logits",e,t,n),a=D$("numSamples",e,t,n),s=D$("seed",e,t,n);return[Db(r,a,s)]}case"OneHot":{let r=D$("indices",e,t,n),a=D$("depth",e,t,n),s=D$("onValue",e,t,n),i=D$("offValue",e,t,n);return[$m(r,a,s,i)]}case"Ones":return[Cb(D$("shape",e,t,n),D$("dtype",e,t,n))];case"OnesLike":return[Lb(D$("x",e,t,n))];case"RandomUniform":return[ax(D$("shape",e,t,n),D$("minval",e,t,n),D$("maxval",e,t,n),D$("dtype",e,t,n))];case"Range":return[sx(D$("start",e,t,n),D$("stop",e,t,n),D$("step",e,t,n),D$("dtype",e,t,n))];case"TruncatedNormal":{let r=D$("shape",e,t,n),a=D$("mean",e,t,n),s=D$("stdDev",e,t,n),i=D$("seed",e,t,n);return[qx(r,a,s,D$("dtype",e,t,n),i)]}case"Zeros":return[Tb(D$("shape",e,t,n),D$("dtype",e,t,n))];case"ZerosLike":return[vA(D$("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=YF(e,t,n),u=await gv.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=YF(e,t,n),l=D$("padToMaxOutputSize",e,t,n),u=await gv.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=YF(e,t,n);return[await gv.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{let r=um(D$("condition",e,t,n),"bool"),a=[await Qx(r)];return r.dispose(),a}case"ListDiff":return xx(D$("x",e,t,n),D$("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return jg((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{let r=D$("x",e,t,n),a=D$("k",e,t,n),s=D$("sorted",e,t,n),i=Hx(r,a,s);return[i.values,i.indices]}case"Unique":{let r=D$("x",e,t,n),a=Kx(r);return[a.values,a.indices]}case"UniqueV2":{let r=D$("x",e,t,n),a=D$("axis",e,t,n),s=Kx(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return jg((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{let r=D$("images",e,t,n),a=D$("size",e,t,n),s=D$("alignCorners",e,t,n),i=D$("halfPixelCenters",e,t,n);return[gv.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{let r=D$("images",e,t,n),a=D$("size",e,t,n),s=D$("alignCorners",e,t,n),i=D$("halfPixelCenters",e,t,n);return[gv.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{let r=D$("image",e,t,n),a=D$("boxes",e,t,n),s=D$("boxInd",e,t,n),i=D$("cropSize",e,t,n),o=D$("method",e,t,n),l=D$("extrapolationValue",e,t,n);return[gv.cropAndResize(r,a,s,i,o,l)]}case"ImageProjectiveTransformV3":{let r=D$("images",e,t,n),a=D$("transforms",e,t,n),s=D$("outputShape",e,t,n),i=D$("fillValue",e,t,n),o=D$("interpolation",e,t,n),l=D$("fillMode",e,t,n);return[gv.transform(r,a,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return jg((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=D$("default",e,t,n);return[P$(e.name,t,n)||r];case"Placeholder":return[P$(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[V$(D$("x",e,t,n))];case"IdentityN":return D$("x",e,t,n).map((e=>V$(e)));case"Shape":return[Bx(D$("x",e,t,n).shape,"int32")];case"ShapeN":return D$("x",e,t,n).map((e=>Bx(e.shape)));case"Size":return[yx(D$("x",e,t,n).size,"int32")];case"Rank":return[yx(D$("x",e,t,n).rank,"int32")];case"NoOp":return[yx(1)];case"Print":let a=D$("x",e,t,n),s=D$("data",e,t,n),i=D$("message",e,t,n),o=D$("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return jg((()=>((e,t,n)=>{switch(e.op){case"Equal":return[xA(D$("a",e,t,n),D$("b",e,t,n))];case"NotEqual":return[Pb(D$("a",e,t,n),D$("b",e,t,n))];case"Greater":return[zA(D$("a",e,t,n),D$("b",e,t,n))];case"GreaterEqual":return[DA(D$("a",e,t,n),D$("b",e,t,n))];case"Less":return[VA(D$("a",e,t,n),D$("b",e,t,n))];case"LessEqual":return[GA(D$("a",e,t,n),D$("b",e,t,n))];case"LogicalAnd":return[Ab(D$("a",e,t,n),D$("b",e,t,n))];case"LogicalNot":return[bb(D$("a",e,t,n))];case"LogicalOr":return[xb(D$("a",e,t,n),D$("b",e,t,n))];case"Select":case"SelectV2":return[wA(D$("condition",e,t,n),D$("a",e,t,n),D$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return jg((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Mm(D$("a",e,t,n),D$("b",e,t,n),D$("transposeA",e,t,n),D$("transposeB",e,t,n))];case"Einsum":return[SA(D$("equation",e,t,n),...D$("tensors",e,t,n))];case"Transpose":return[Fm(D$("x",e,t,n),D$("perm",e,t,n))];case"_FusedMatMul":let[r,a]=D$("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=D$("numArgs",e,t,n),l=D$("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[u,d]=D$("args",e,t,n);return[cw.matMul({a:D$("a",e,t,n),b:D$("b",e,t,n),transposeA:D$("transposeA",e,t,n),transposeB:D$("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:d,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return jg((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[jy(D$("x",e,t,n),D$("mean",e,t,n),D$("variance",e,t,n),D$("offset",e,t,n),D$("scale",e,t,n),D$("epsilon",e,t,n))];case"LRN":return[HA(D$("x",e,t,n),D$("radius",e,t,n),D$("bias",e,t,n),D$("alpha",e,t,n),D$("beta",e,t,n))];case"Softmax":return[Cx(D$("x",e,t,n))];case"LogSoftmax":return[lb(D$("x",e,t,n))];case"SparseToDense":return[sw(D$("sparseIndices",e,t,n),D$("outputShape",e,t,n),D$("sparseValues",e,t,n),D$("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return jg((()=>((e,t,n)=>{switch(e.op){case"Max":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[sb(D$("x",e,t,n),r,a)]}case"Mean":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[Nb(D$("x",e,t,n),r,a)]}case"Min":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[_b(D$("x",e,t,n),r,a)]}case"Sum":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[ob(D$("x",e,t,n),r,a)]}case"All":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[py(D$("x",e,t,n),r,a)]}case"Any":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[hy(D$("x",e,t,n),r,a)]}case"ArgMax":{let r=D$("axis",e,t,n);return[fy(D$("x",e,t,n),r)]}case"ArgMin":{let r=D$("axis",e,t,n);return[my(D$("x",e,t,n),r)]}case"Prod":{let r=D$("axis",e,t,n),a=D$("keepDims",e,t,n);return[Zb(D$("x",e,t,n),r,a)]}case"Cumprod":{let r=D$("axis",e,t,n),a=D$("exclusive",e,t,n),s=D$("reverse",e,t,n);return[hA(D$("x",e,t,n),r,a,s)]}case"Cumsum":{let r=D$("axis",e,t,n),a=D$("exclusive",e,t,n),s=D$("reverse",e,t,n);return[fA(D$("x",e,t,n),r,a,s)]}case"Bincount":let r=D$("x",e,t,n),a=D$("weights",e,t,n),s=D$("size",e,t,n);return[Xy(r,a,s)];case"DenseBincount":{let r=D$("x",e,t,n),a=D$("weights",e,t,n),s=D$("size",e,t,n),i=D$("binaryOutput",e,t,n);return[mA(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return jg((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=D$("n",e,t,n),a=D$("axis",e,t,n),s=D$("tensors",e,t,n);return s=s.slice(0,r),[Py(s,a)]}case"Gather":{let r=D$("x",e,t,n),a=D$("indices",e,t,n);return[OA(r,um(a,"int32"),0)]}case"GatherV2":{let r=D$("axis",e,t,n),a=D$("batchDims",e,t,n),s=D$("x",e,t,n),i=D$("indices",e,t,n);return[OA(s,um(i,"int32"),r,a)]}case"Reverse":{let r=D$("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);let s=D$("x",e,t,n);return[dx(s,a)]}case"ReverseV2":{let r=D$("axis",e,t,n),a=D$("x",e,t,n);return[dx(a,r)]}case"Slice":{let r=D$("begin",e,t,n),a=D$("size",e,t,n);return[Wy(D$("x",e,t,n),r,a)]}case"StridedSlice":{let r=D$("begin",e,t,n),a=D$("end",e,t,n),s=D$("strides",e,t,n),i=D$("beginMask",e,t,n),o=D$("endMask",e,t,n),l=D$("ellipsisMask",e,t,n),u=D$("newAxisMask",e,t,n),d=D$("shrinkAxisMask",e,t,n),c=D$("x",e,t,n);return[Lx(c,r,a,s,i,o,l,u,d)]}case"Pack":return jg((()=>{let r=D$("axis",e,t,n),a=D$("tensors",e,t,n),s=a[0].shape,i=zx(a[0]).shape,o=a.map((e=>{let t=Jp.arraysEqual(e.shape,s);if(!t&&!Jp.arraysEqual(zx(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Oy(e,s)}));return[Dx(o,r)]}));case"Unpack":{let r=D$("axis",e,t,n),a=D$("tensor",e,t,n);return Zx(a,r)}case"Tile":{let r=D$("reps",e,t,n);return[RA(D$("x",e,t,n),r)]}case"Split":case"SplitV":{let r=D$("axis",e,t,n),a=D$("numOrSizeSplits",e,t,n),s=D$("x",e,t,n);return Mx(s,a,r)}case"ScatterNd":{let r=D$("indices",e,t,n),a=D$("values",e,t,n),s=D$("shape",e,t,n);return[aw(r,a,s)]}case"GatherNd":{let r=D$("x",e,t,n),a=D$("indices",e,t,n);return[iw(r,a)]}case"SparseToDense":{let r=D$("sparseIndices",e,t,n),a=D$("outputShape",e,t,n),s=D$("sparseValues",e,t,n),i=D$("defaultValue",e,t,n);return[sw(r,s,a,s.dtype===i.dtype?i:um(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return jg((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=bv.sparseFillEmptyRows(D$("indices",e,t,n),D$("values",e,t,n),D$("denseShape",e,t,n),D$("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=bv.sparseReshape(D$("inputIndices",e,t,n),D$("inputShape",e,t,n),D$("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[bv.sparseSegmentMean(D$("data",e,t,n),D$("indices",e,t,n),D$("segmentIds",e,t,n))];case"SparseSegmentSum":return[bv.sparseSegmentSum(D$("data",e,t,n),D$("indices",e,t,n),D$("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return jg((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Ex(D$("x",e,t,n))];case"IFFT":return[_x(D$("x",e,t,n))];case"RFFT":return[$x(D$("x",e,t,n))];case"IRFFT":return[Rx(D$("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return jg((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=xv.stringNGrams(D$("data",e,t,n),D$("dataSplits",e,t,n),D$("separator",e,t,n),D$("nGramWidths",e,t,n),D$("leftPad",e,t,n),D$("rightPad",e,t,n),D$("padWidth",e,t,n),D$("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:s}=xv.stringSplit(D$("input",e,t,n),D$("delimiter",e,t,n),D$("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[xv.stringToHashBucketFast(D$("input",e,t,n),D$("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return jg((()=>((e,t,n)=>{switch(e.op){case"Cast":return[um(D$("x",e,t,n),D$("dtype",e,t,n))];case"ExpandDims":{let r=D$("axis",e,t,n);return[EA(D$("x",e,t,n),r)]}case"Squeeze":{let r=D$("axis",e,t,n);return[zx(D$("x",e,t,n),r)]}case"Reshape":return[Oy(D$("x",e,t,n),D$("shape",e,t,n))];case"MirrorPad":return[Mb(D$("x",e,t,n),D$("padding",e,t,n),D$("mode",e,t,n))];case"PadV2":case"Pad":return[Bb(D$("x",e,t,n),D$("padding",e,t,n),D$("constantValue",e,t,n))];case"SpaceToBatchND":{let r=D$("blockShape",e,t,n),a=D$("paddings",e,t,n);return[Hb(D$("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=D$("blockShape",e,t,n),a=D$("crops",e,t,n);return[Vy(D$("x",e,t,n),r,a)]}case"DepthToSpace":{let r=D$("blockSize",e,t,n),a=D$("dataFormat",e,t,n).toUpperCase();return[gA(D$("x",e,t,n),r,a)]}case"BroadcastTo":return[Yy(D$("x",e,t,n),D$("shape",e,t,n))];case"BroadcastArgs":return[Zy(D$("s0",e,t,n),D$("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=D$("keyDType",e,t,n),s=D$("valueDType",e,t,n),i=new JF(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let a=D$("tableHandle",e,t,n,r),s=D$("keys",e,t,n),i=D$("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=D$("tableHandle",e,t,n,r),s=D$("keys",e,t,n),i=D$("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=D$("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":let a=O$(e.op);if(a&&a.customExecutor)return a.customExecutor(new VF(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Jp.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}var eO=class{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function tO(e,t,n,r){let a=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>B$(e)[0])),d=[];null!=r&&(d=r.map((e=>B$(e.name)[0])));let c=[...t];for(;c.length>0;){let e=c.pop();if((sO(e)||iO(e)||oO(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===d.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),c.push(e))}))}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}var nO=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],rO=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],aO=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function sO(e){return nO.indexOf(e.op)>=0}function iO(e){return rO.indexOf(e.op)>=0}function oO(e){return aO.indexOf(e.op)>=0}var lO=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new lO(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){let n=tO(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){let{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>B$(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map((e=>this.graph.nodes[B$(e)[0]])),a=t.map((e=>B$(e)[0])),s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);let i=this.getCompilationKey(r,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));let l={},u={};return jg((()=>{let n=new eO(this.weightMap,l,u,this.functionExecutorMap),r={...this.weightMap};Object.keys(e).forEach((t=>{let[n,a]=B$(t),s=[];s[a]=e[t],r[n]=s}));let s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!r[t.name]){let e=QF(t,r,n,this._resourceManager);if(Jp.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>P$(e,r,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let s=function(e,t,n){return t[W$(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){let n=i[e.id];if(1===n){if(this.keepTensorForDebug){let[n,a]=L$(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{e&&!e.kept&&!e.isDisposed&&!this.keepIds.has(e.id)&&e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Cu().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();let s=new eO(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);let i=t.map((e=>P$(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map((e=>this.graph.nodes[B$(e)[0]])),i=n.map((e=>B$(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:c}=tO(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h={...this.weightMap};Object.keys(e).forEach((t=>{let[n,r]=B$(t),a=[];a[r]=e[t],h[n]=a}));let f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){let e=this.processStack(s,p,t,h,g,m,i,f,l);await Promise.all(e)}null==d&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!sO(e)&&!P$(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return h}processStack(e,t,n,r,a,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&D$("isConstant",e.node,r,n)&&([d]=L$(e.node.name,n)),null==r[e.node.name]){let c=QF(e.node,r,n,this._resourceManager);d||([d]=L$(e.node.name,n));let p=n.currentContext;Jp.isPromise(c)?u.push(c.then((u=>(r[d]=u,n.currentContext=p,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[d]=c,this.checkTensorForDisposal(d,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{let[i]=L$(e.name,n);a[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!P$(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!P$(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[r]=B$(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));Jp.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&Jp.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){let t={};for(let n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=B$(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{let[t]=B$(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},uO=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},dO="?tfjs-format=file",cO="model.json",pO=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new uO}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=pm.browserHTTPRequest(e,this.loadOptions);else{let t=pm.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(pm.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;let t,n=this.artifacts.modelTopology;t=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=t,this.version=`${n.versions.producer}.${n.versions.minConsumer}`;let r=pm.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new lO(CF.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=CF.Instance.transformGraph(e.modelInitializer);this.initializer=new lO(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){let t=pm.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof _h||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function hO(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${cO}${dO}`);let n=new pO(e,t);return await n.load(),n}var fO="0.0.0",mO={};il(mO,{CSVDataset:()=>lz,Dataset:()=>XO,FileDataSource:()=>xz,TextLineDataset:()=>tz,URLDataSource:()=>wz,array:()=>YO,csv:()=>vz,func:()=>kz,generator:()=>Iz,microphone:()=>Nz,version_data:()=>Tz,webcam:()=>Sz,zip:()=>JO});var gO=ol(bl()),yO=ol(bl());function AO(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(kO(e)){let a=Array.isArray(e)?[]:{};r.add(e);for(let s in e){let i=AO(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function bO(e,t=wO){return xO(e,t)}function xO(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(kO(r)){let a=Array.isArray(r)?[]:{};n.add(r);for(let s in r){let r=xO(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function wO(e){return null===e?null:kO(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function vO(e,t){let n=new Map;AO(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(Jp.isPromise(t)){let r=await t;n.set(e,r)}}return AO(e,t,n)}function kO(e){let t=!1;if(Cu().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=xl();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof _h)&&!(e instanceof Promise)&&!t)}function IO(e){return function(e,t){return AO(e,t)}(e,SO)}function SO(e){return e instanceof _h?{value:e.clone(),recurse:!1}:kO(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var NO=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},TO=class extends NO{constructor(){super(TO.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},CO=TO;function EO(e){return new MO(e)}function _O(e){return new $O(e)}CO.INITIAL_CAPACITY=32;var RO=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new WO(this,e)}filter(e){return new PO(this,e)}map(e){return new LO(this,e)}mapAsync(e){return new BO(this,e)}serialMapAsync(e){return new BO(this,e).serial()}flatmap(e){return new VO(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new DO(this,e,t)}columnMajorBatch(e,t=!0,n=wO){return this.rowMajorBatch(e,t).map((e=>bO(e,n)))}concatenate(e,t){return new GO(EO([this,e]),t)}take(e){return e<0||null==e?this:new zO(this,e)}skip(e){return e<0||null==e?this:new OO(this,e)}prefetch(e){return new qO(this,e)}shuffle(e,t){return new KO(this,e,t)}serial(){return new FO(this)}},MO=class extends RO{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:IO(e),done:!1}}},$O=class extends RO{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},FO=class extends RO{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},OO=class extends RO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Hg(e.value)}return this.upstream.next()}},zO=class extends RO{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},DO=class extends RO{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},PO=class extends RO{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Hg(e.value)}}},LO=class extends RO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Mh.getTensorsInContainer(e.value),n=this.transform(e.value),r=Mh.getTensorsInContainer(n);for(let e of t)Mh.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},WO=class extends RO{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},BO=class extends RO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Mh.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Mh.getTensorsInContainer(n);for(let e of t)Mh.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}},UO=class extends RO{constructor(){super(),this.outputQueue=new CO,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},VO=class extends UO{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Mh.getTensorsInContainer(e.value),n=this.transform(e.value),r=Mh.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)Mh.isTensorInList(e,r)||e.dispose();return!0}},GO=class extends RO{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},jO=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(jO||{}),HO=class extends RO{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0,r=await vO(this.iterators,(function(e){return e instanceof RO?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0}}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},qO=class extends RO{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new NO(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},KO=class extends qO{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=yO.alea(n||Jp.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},XO=class{constructor(){this.size=null}batch(e,t=!0){let n,r=this;return Jp.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ZO((async()=>(await r.iterator()).columnMajorBatch(e,t,QO)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ZO((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,ZO((async()=>(await n.iterator()).filter((t=>jg((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return ZO((async()=>(await t.iterator()).map((t=>jg((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return ZO((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return ZO((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ZO((async()=>function(e){return new GO(e,void 0)}(_O((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ZO((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=gO.alea(t||Jp.now().toString());return ZO((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ZO((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function ZO(e,t=null){return new class extends XO{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function YO(e){return ZO((async()=>EO(e)),e.length)}function JO(e){if(!kO(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return ZO((async()=>function(e,t=jO.FAIL){return new HO(e,t)}(await vO(e,(e=>{if(e instanceof XO)return{value:e.iterator(),recurse:!1};if(kO(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),1)),t)}function QO(e){return null===e?null:function(e){return null==e||function(e){return null===e||"object"!=typeof e&&"function"!=typeof e}(e)||Array.isArray(e)||"object"==typeof e&&e instanceof _h||Jp.isTypedArray(e)}(e[0])?{value:ez(e),recurse:!1}:{value:null,recurse:!0}}function ez(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof _h?Dx(e):gf(e)}XO.MAX_BUFFER_SIZE=1e4;var tz=class extends XO{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},nz='"',rz=Symbol("out"),az=Symbol("field"),sz=Symbol("quote"),iz=Symbol("quoteafterquote"),oz=Symbol("quoteinquote"),lz=class extends XO{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new tz(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(Jp.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&Jp.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(Jp.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[a],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?r[s]=l:n[s]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=rz;for(let t=0;t<a;t++)switch(s){case rz:switch(e.charAt(t)){case nz:r=t+1,s=sz;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=rz;break;default:s=az,r=t}break;case az:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=rz,r=t+1);break;case sz:e.charAt(t)===nz&&(s=iz);break;case iz:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=rz,r=t+1;break;case nz:s=sz;break;default:s=oz}break;case oz:e.charAt(t)===nz&&(s=sz)}if(s===iz?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},uz=class extends RO{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!Cu().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new uz(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((r=>{let a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(Jp.sizeFromShape(t));return n.set(e,n.length-e.length),gf(n,t)}},dz=class extends RO{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Bx([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Ux([r,n,s,a],[1,4])}else this.cropBox=Ux([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!Cu().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new dz(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Jp.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Bm.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return jg((()=>{let t,n=EA(um(e,"float32"),0);t=gv.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=t.shape;return Oy(t,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},cz=class{},pz=class extends RO{split(e){return new hz(this,e)}},hz=class extends pz{constructor(e,t){super(),this.upstream=e,this.impl=new fz(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},fz=class extends UO{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},mz=class extends RO{decodeUTF8(){return new gz(this)}},gz=class extends pz{constructor(e){super(),this.upstream=e,this.impl=new yz(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},yz=class extends UO{constructor(e){if(super(),this.upstream=e,Cu().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=xl();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=Cu().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},Az=class extends mz{constructor(e,t={}){super(),this.file=e,this.options=t,Jp.assert(e instanceof Uint8Array||!!Cu().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n})),done:!1}}};function bz(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var xz=class extends cz{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(bz(this.input)&&Cu().get("IS_NODE")){let e=wl();this.input=e.readFileSync(this.input.slice(7))}return new Az(this.input,this.options)}},wz=class extends cz{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return bz(this.url)?new xz(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=(e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity}))(e));let s=await(n||Jp.fetch)(r,a);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new Az(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function vz(e,t={}){return new lz(new wz(e),t)}function kz(e){let t=_O(e);return ZO((async()=>t))}function Iz(e){return ZO((async()=>{let t=await e();return _O((()=>t.next()))}))}async function Sz(e,t){return dz.create(e,t)}async function Nz(e){return uz.create(e)}var Tz="0.0.0";function Cz(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Jp.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var Ez=Ok.whereImpl,_z=class extends El{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Cl(this,Ug())}nextDataId(){return _z.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Cu().get("IS_NODE")&&$v.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Jp.isString(n[0])){let a=n.map((e=>Jp.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return $v.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>Jp.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return lm(e.shape,e.dtype,n)}makeOutput(e,t,n){let r=this.write(e,t,n);return Ug().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=Jp.now();return e(),{kernelMs:Jp.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Cz([e],"where");let t=this.readSync(e.dataId);return Ez(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},Rz=_z;Rz.nextDataId=0;var Mz={};function $z(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}il(Mz,{addImpl:()=>qz,bincountImpl:()=>Yz,bincountReduceImpl:()=>Jz,ceilImpl:()=>nD,concatImpl:()=>sD,equalImpl:()=>iD,expImpl:()=>uD,expm1Impl:()=>pD,floorImpl:()=>mD,gatherNdImpl:()=>AD,gatherV2Impl:()=>bD,greaterEqualImpl:()=>kD,greaterImpl:()=>xD,lessEqualImpl:()=>ED,lessImpl:()=>ND,linSpaceImpl:()=>MD,logImpl:()=>$D,maxImpl:()=>zD,maximumImpl:()=>DD,minimumImpl:()=>WD,multiplyImpl:()=>VD,negImpl:()=>qD,notEqualImpl:()=>XD,prodImpl:()=>tP,rangeImpl:()=>rP,rsqrtImpl:()=>aP,sigmoidImpl:()=>oP,simpleAbsImpl:()=>$z,sliceImpl:()=>dP,sparseFillEmptyRowsImpl:()=>hP,sparseReshapeImpl:()=>fP,sparseSegmentReductionImpl:()=>mP,sqrtImpl:()=>gP,squaredDifferenceImpl:()=>bP,stridedSliceImpl:()=>vP,stringNGramsImpl:()=>IP,stringSplitImpl:()=>NP,stringToHashBucketFastImpl:()=>TP,subImpl:()=>CP,tileImpl:()=>MP,topKImpl:()=>OP,transposeImpl:()=>JD,uniqueImpl:()=>zP});var Fz={kernelName:$u,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Cz(t,"abs");let r=new Float32Array(Jp.sizeFromShape(t.shape));return r=$z(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}};function Oz(e){return(t,n,r,a,s)=>{let i=$v.assertAndGetBroadcastShape(t,n),o=i.length,l=Jp.computeStrides(i),u=Jp.sizeFromShape(i),d=Jp.getTypedArrayFromDType(s,u),c=t.length,p=n.length,h=Jp.computeStrides(t),f=Jp.computeStrides(n),m=$v.getBroadcastDims(t,i),g=$v.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<d.length;++t){let n=Jp.indexToLoc(t,o,l),s=n.slice(-c);m.forEach((e=>s[e]=0));let i=Jp.locToIndex(s,c,h),u=n.slice(-p);g.forEach((e=>u[e]=0));let y=Jp.locToIndex(u,p,f);d[t]=e(r[i],a[y])}return[d,i]}}function zz(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var Dz={kernelName:sd,backendName:"cpu",kernelFunc:zz};function Pz(e,t,n="float32"){if("complex64"===n)return zz({inputs:{real:Pz(e,t,"float32"),imag:Pz(e,t,"float32")},backend:e});let r=Jp.makeZerosTypedArray(Jp.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Lz(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var Wz={kernelName:qd,backendName:"cpu",kernelFunc:Lz};function Bz(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var Uz={kernelName:Lc,backendName:"cpu",kernelFunc:Bz};function Vz(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Lz({inputs:{x:a},backend:n});let e=Pz(n,a.shape,a.dtype),t=Vz({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=zz({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){let e=Bz({inputs:{input:a},backend:n}),t=Vz({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Jp.hasEncodingLoss(a.dtype,s)){let e=Lz({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){let e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){let e=n.data.get(a.dataId).values,t=Jp.toTypedArray([0],a.dtype),[r,s]=Oz(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var Gz={kernelName:nd,backendName:"cpu",kernelFunc:Vz};function jz(e,t,n,r){return null==n?({inputs:n,backend:a})=>{let{a:s,b:i}=n,o=a;Cz([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,d="string"===s.dtype?$v.fromUint8ToStringArray(l):l,c="string"===s.dtype?$v.fromUint8ToStringArray(u):u,p=r||s.dtype,[h,f]=t(s.shape,i.shape,d,c,p);return o.makeTensorInfo(f,p,h)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){let e=Vz({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,d=Vz({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(d.dataId),p=c.complexTensorInfos.real,h=c.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(h.dataId).values,[g,y,A]=n(s.shape,i.shape,l,u,f,m),b=o.makeTensorInfo(A,"float32",g),x=o.makeTensorInfo(A,"float32",y),w=zz({inputs:{real:b,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(x),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function Hz(e){return(t,n,r,a,s,i)=>{let o=$v.assertAndGetBroadcastShape(t,n),l=Jp.sizeFromShape(o),u=o.length,d=Jp.computeStrides(o),c=Jp.getTypedArrayFromDType("float32",l),p=Jp.getTypedArrayFromDType("float32",l),h=$v.getBroadcastDims(t,o),f=$v.getBroadcastDims(n,o),m=$v.mergeRealAndImagArrays(r,a),g=$v.mergeRealAndImagArrays(s,i),y=t.length,A=Jp.computeStrides(t),b=n.length,x=Jp.computeStrides(n);if(h.length+f.length===0)for(let t=0;t<c.length;t++){let n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);c[t]=a.real,p[t]=a.imag}else for(let t=0;t<c.length;t++){let n=Jp.indexToLoc(t,u,d),r=n.slice(-y);h.forEach((e=>r[e]=0));let a=Jp.locToIndex(r,y,A),s=n.slice(-b);f.forEach((e=>s[e]=0));let i=Jp.locToIndex(s,b,x),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);c[t]=o.real,p[t]=o.imag}return[c,p,o]}}var qz=Oz(((e,t)=>e+t)),Kz=Hz(((e,t,n,r)=>({real:e+n,imag:t+r}))),Xz=jz(zu,qz,Kz),Zz={kernelName:zu,backendName:"cpu",kernelFunc:Xz};function Yz(e,t,n,r,a){let s=Jp.sizeFromShape(r),i=Jp.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){let r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function Jz(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=lm([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}function Qz(e){return(t,n,r)=>{let a=Jp.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function eD(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(Cz(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=Jp.sizeFromShape(i.shape),d=n||i.dtype,c=Jp.getArrayFromDType(d,u);for(let e=0;e<u;++e)c[e]=t(l[e],a);return o.makeTensorInfo(i.shape,d,c)}}function tD(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;if(Cz(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,d=t(l,u,a);return o.makeTensorInfo(i.shape,u,d)}}var nD=Qz((e=>Math.ceil(e))),rD=tD(rd,nD),aD={kernelName:rd,backendName:"cpu",kernelFunc:rD};function sD(e,t,n,r){let a=Jp.getArrayFromDType(n,Jp.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{let n=Jp.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{let s="string"===n?$v.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}var iD=Oz(((e,t)=>e===t?1:0)),oD=jz($d,iD,null,"bool"),lD={kernelName:$d,backendName:"cpu",kernelFunc:oD},uD=Qz((e=>Math.exp(e))),dD=tD(Fd,uD,"float32"),cD={kernelName:Fd,backendName:"cpu",kernelFunc:dD},pD=Qz((e=>Math.expm1(e))),hD=tD(zd,pD),fD={kernelName:zd,backendName:"cpu",kernelFunc:hD},mD=Qz((e=>Math.floor(e))),gD=tD(Wd,mD),yD={kernelName:Wd,backendName:"cpu",kernelFunc:gD};function AD(e,t,n,r,a,s,i,o,l){let u=lm([r,s],n);for(let n=0;n<r;n++){let r=[],d=0;for(let t=0;t<a;t++){let s=e[n*a+t];d+=s*i[t],r.push(s)}if(d<0||d>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(d*s+e))}return u}function bD(e,t,n){let r=lm(n,e.dtype);for(let n=0;n<r.size;++n){let a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];let l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}var xD=Oz(((e,t)=>e>t?1:0)),wD=jz(jd,xD,null,"bool"),vD={kernelName:jd,backendName:"cpu",kernelFunc:wD},kD=Oz(((e,t)=>e>=t?1:0)),ID=jz(Hd,kD,null,"bool"),SD={kernelName:Hd,backendName:"cpu",kernelFunc:ID},ND=Oz(((e,t)=>e<t?1:0)),TD=jz(ec,ND,null,"bool"),CD={kernelName:ec,backendName:"cpu",kernelFunc:TD},ED=Oz(((e,t)=>e<=t?1:0)),_D=jz(tc,ED,null,"bool"),RD={kernelName:tc,backendName:"cpu",kernelFunc:_D};function MD(e,t,n){let r=(t-e)/(n-1),a=Jp.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}var $D=Qz((e=>Math.log(e))),FD=tD(rc,$D),OD={kernelName:rc,backendName:"cpu",kernelFunc:FD};function zD(e,t,n,r){let a=Jp.getTypedArrayFromDType(r,Jp.sizeFromShape(n));for(let n=0;n<a.length;++n){let r=n*t,s=e[r];for(let n=0;n<t;++n){let t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}var DD=Oz(((e,t)=>Math.max(e,t))),PD=jz(pc,DD),LD={kernelName:pc,backendName:"cpu",kernelFunc:PD},WD=Oz(((e,t)=>Math.min(e,t))),BD=jz(xc,WD),UD={kernelName:xc,backendName:"cpu",kernelFunc:BD},VD=Oz(((e,t)=>e*t)),GD=Hz(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),jD=jz(Ic,VD,GD),HD={kernelName:Ic,backendName:"cpu",kernelFunc:jD};function qD(e,t,n){let r=Jp.createScalarValue(-1,n);return VD([],t,r,e,n)}var KD={kernelName:Sc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;Cz(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=qD(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},XD=Oz(((e,t)=>e!==t?1:0)),ZD=jz(Nc,XD,null,"bool"),YD={kernelName:Nc,backendName:"cpu",kernelFunc:ZD};function JD(e,t,n,r,a){let s=t.length,i=Jp.sizeFromShape(t),o=Jp.computeStrides(t),l=Jp.computeStrides(a),u=Jp.getTypedArrayFromDType(n,Jp.sizeFromShape(a));for(let t=0;t<i;++t){let n=Jp.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[Jp.locToIndex(a,s,l)]=e[t]}return u}function QD(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Cz(a,"transpose");let i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=JD(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}var eP={kernelName:Cp,backendName:"cpu",kernelFunc:QD};function tP(e,t,n,r){let[a,s]=$v.computeOutAndReduceShapes(e,r),i=Wh(t,"int32"),o=Jp.makeZerosTypedArray(Jp.sizeFromShape(a),i),l=Jp.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}var nP={kernelName:Dc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Cz(a,"prod");let o=a.shape.length,l=Jp.parseAxisParam(s,a.shape),u=$v.getAxesPermutation(l,o),d=l,c=a,p=[];null!=u&&(c=QD({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(c),d=$v.getInnerMostAxes(d.length,o));let h=n.data.get(c.dataId).values,{outVals:f,outShape:m,outDtype:g}=tP(c.shape,c.dtype,h,d),y=m;return i&&(y=$v.expandShapeToKeepDim(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function rP(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Jp.makeZerosTypedArray(0,r);let a=Math.abs(Math.ceil((t-e)/n)),s=Jp.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var aP=Qz((e=>1/Math.sqrt(e))),sP=tD(Zc,aP),iP={kernelName:Zc,backendName:"cpu",kernelFunc:sP},oP=Qz((e=>1/(1+Math.exp(-e)))),lP=eD(ap,(e=>1/(1+Math.exp(-e)))),uP={kernelName:ap,backendName:"cpu",kernelFunc:lP};function dP(e,t,n,r,a){let s=Qm.isSliceContinous(r,t,n),i=Jp.sizeFromShape(n),o=Jp.computeStrides(r);if(s){let n=Qm.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}let l=lm(r,a,"string"===a?$v.fromUint8ToStringArray(e):e),u=lm(n,a);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?$v.fromStringArrayToUint8(u.values):u.values}function cP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Cz(a,"slice");let[o,l]=Qm.parseSliceParams(a,s,i);Qm.assertParamsValid(a,o,l);let u=dP(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}var pP={kernelName:ep,backendName:"cpu",kernelFunc:cP};function hP(e,t,n,r,a,s,i){let o=t[0],l=s[0],u=new Array(l),d=new Array(o),c=t[1];if(0===l){if(0!==o)throw new Error($v.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[Jp.getArrayFromDType(n,0),[0,c],Jp.getArrayFromDType(a,0),u,d]}let p=!0,h=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*c];if(n<0)throw new Error($v.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error($v.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],p=p&&n>=h,h=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){let t=e,n=r;for(let e=0;e<o;++e)d[e]=e;return[t,[o,c],n,u,d]}{let t=f[l-1],s=Jp.getArrayFromDType(n,t*c),p=Jp.getArrayFromDType(a,t),h=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*c],a=h[n],i=(0===n?0:f[n-1])+a;h[n]++;for(let n=0;n<c;++n)s[i*c+n]=e[t*c+n];p[i]=r[t],d[t]=i}for(let e=0;e<l;++e)if(0===h[e]){let t=0===e?0:f[e-1];s[t*c+0]=e;for(let e=1;e<c;++e)s[t*c+e]=0;p[t]=i}return[s,[t,c],p,u,d]}}function fP(e,t,n,r,a){let s=Jp.sizeFromShape(r),i=t[0],o=a.length,l=[],u=1,d=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==d)throw new Error($v.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,l.push(1)}else{if(t<0)throw new Error($v.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==d){if(u<=0)throw new Error($v.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error($v.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(Jp.sizeFromShape(l)!==s)throw new Error($v.getSparseReshapeInputOutputMismatchErrorMessage(r,l));let c=r.length,p=[];if(c>0){p[c-1]=1;for(let e=c-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}let h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*l[e+1]}let f=Jp.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<c;++r)n+=e[t*c+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/h[e]),n%=h[e]}return[f,[i,o],l]}function mP(e,t,n,r,a,s=!1,i=0){let o=r.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?a[o-1]+1:0;if(d<0)throw new Error($v.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let c=t.slice();c[0]=d;let p=c.reduce(((e,t)=>e*t),1),h=Jp.getArrayFromDType(n,p);if(0===o)return d>0&&h.fill(i),[h,c];if(d<=0)throw new Error($v.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[f];for(;;){let t=0;if(m<o){if(t=a[m],y===t){++m;continue}if(y>=t)throw new Error($v.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error($v.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&h.fill(i,g*u,y*u);for(let t=f;t<m;++t){let n=r[t];if(n<0||n>=l[0])throw new Error($v.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<u;t++)h[y*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)h[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&h.fill(i,g*u,d*u),[h,c]}var gP=Qz((e=>Math.sqrt(e))),yP=eD(ip,(e=>Math.sqrt(e))),AP={kernelName:ip,backendName:"cpu",kernelFunc:yP},bP=Oz(((e,t)=>{let n=e-t;return n*n})),xP=jz(gp,bP),wP={kernelName:gp,backendName:"cpu",kernelFunc:xP};function vP(e,t,n,r){let a=lm(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}var kP=class{constructor(e,t,n,r,a,s){this.separator=Jp.encodeString(e),this.nGramWidths=t,this.leftPad=Jp.encodeString(n),this.rightPad=Jp.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),d=s-(l+u),c=t+(l>0?0:i-o),p=0;p+=l*this.leftPad.length;for(let t=0;t<d;++t)p+=e[c+t].length;p+=u*this.rightPad.length,p+=(l+u+d-1)*this.separator.length,n[r+i]=new Uint8Array(p);let h=n[r+i],f=0,m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[c+t]),m(this.separator);if(d>0){m(e[c+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let a=r-1,s=Jp.getArrayFromDType("int32",r);if(0===n||0===r){let e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let n=t[e]-t[e-1],r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}let i=new Array(s[a]);for(let n=0;n<a;++n){let r=t[n],a=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}};function IP(e,t,n,r,a,s,i,o){return new kP(n,r,a,s,i,o).compute(e,t)}function SP(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void((!n||0!==e.length)&&r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);(!n||0!==t.length)&&r.push(t),a=s+1}}function NP(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let l=0;l<r;++l){let r=a.length;SP(e[l],t,n,a);let u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}let l=Jp.getArrayFromDType("int32",2*s),u=new Array(s),d=[r,i],c=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*c]=e,l[2*c+1]=t,u[c]=a[c],++c;return[l,u,d]}function TP(e,t){let n=Jp.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Jp.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var CP=Oz(((e,t)=>e-t)),EP=Hz(((e,t,n,r)=>({real:e-n,imag:t-r}))),_P=jz(vp,CP,EP),RP={kernelName:vp,backendName:"cpu",kernelFunc:_P};function MP(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let r=lm(n,e.dtype);for(let t=0;t<r.values.length;++t){let n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];let s=e.locToIndex(a);r.values[t]=e.values[s]}return r}var $P=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function FP(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);FP(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}let a=e[t],s=n,i=r;for(Jp.swap(e,n,t),$P(e[r],a)>0&&Jp.swap(e,n,r);s<i;){for(Jp.swap(e,s,i),s++,i--;$P(e[s],a)<0;)s+=1;for(;$P(e[i],a)>0;)i-=1}0===$P(e[n],a)?Jp.swap(e,n,i):(i+=1,Jp.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function OP(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],l=Jp.getTypedArrayFromDType(n,i*r),u=Jp.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(FP(i,r),i=i.slice(0,r)),a&&i.sort($P);let d=t*r,c=l.subarray(d,d+r),p=u.subarray(d,d+r);for(let e=0;e<r;e++)c[e]=i[e].value,p[e]=i[e].index}let d=t.slice();return d[d.length-1]=r,[lm(d,n,l),lm(d,"int32",u)]}function zP(e,t,n,r){let a=Jp.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[a]),l=new Th(s,r,e),u=[],d=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(d)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let c=s.slice();c[1]=Object.keys(i).length;let p=new Th(c,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));let h=n.slice();return h[a]=c[1],{outputValues:p.values,outputShape:h,indices:o}}var DP="0.0.0";ty("cpu",(()=>new Rz),1);var PP=eD(_d,(e=>e>=0?e:Math.exp(e)-1)),LP={kernelName:_d,backendName:"cpu",kernelFunc:PP};function WP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Cz([a],"leakyRelu");let i=Jp.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,l=Jp.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}var BP={kernelName:Qd,backendName:"cpu",kernelFunc:WP},UP=Oz(((e,t)=>e<0?t*e:e));function VP(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Cz([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=UP(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var GP={kernelName:zc,backendName:"cpu",kernelFunc:VP},jP=eD(Bc,(e=>Math.max(0,e))),HP={kernelName:Bc,backendName:"cpu",kernelFunc:jP},qP=eD(qc,(e=>Math.min(Math.max(0,e),6))),KP={kernelName:qc,backendName:"cpu",kernelFunc:qP};function XP(e,t,n,r,a){if("linear"===n)return Lz({inputs:{x:t},backend:e});if("relu"===n)return jP({inputs:{x:t},backend:e});if("elu"===n)return PP({inputs:{x:t},backend:e});if("relu6"===n)return qP({inputs:{x:t},backend:e});if("prelu"===n)return VP({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return WP({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return lP({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ZP(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=Jp.sizeFromShape(a.shape),o=Jp.inferFromImplicitShape(s,i),l=Jp.sizeFromShape(o);Jp.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);let u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var YP={kernelName:Uc,backendName:"cpu",kernelFunc:ZP};function JP(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;Cz([a,s],"matMul");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],c=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Jp.sizeFromShape(f),y=Jp.sizeFromShape(m),A=zm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);Jp.assert(d===c,(()=>`Error in matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let b=o?[y,h,c]:[y,c,h],x=ZP({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),w=ZP({inputs:{x:s},backend:n,attrs:{shape:b}}),v=i?x.shape[1]:x.shape[2],k=i?x.shape[2]:x.shape[1],I=o?w.shape[1]:w.shape[2],S=Math.max(g,y),N=n.data.get(x.dataId).values,T=n.data.get(w.dataId).values,C=Jp.computeStrides(x.shape),E=Jp.computeStrides(w.shape),[_,R,M]=i?[C[0],1,C[1]]:[C[0],C[1],1],[$,F,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=k*I,D=lm([S,k,I],x.dtype),P=D.values,L=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<k;t+=L)for(let n=0;n<I;n+=L)for(let r=0;r<v;r+=L){let a=Math.min(t+L,k),s=Math.min(n+L,I),i=Math.min(r+L,v);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){let r=Math.min(e,g-1)*_,s=Math.min(e,y-1)*O;n+=N[r+o*R+a*M]*T[a*$+t*F+s]}P[e*z+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(A,D.dtype,D.values)}var QP={kernelName:Yu,backendName:"cpu",kernelFunc:JP},eL={kernelName:zp,backendName:"cpu",kernelFunc:function(e){let t,n,r,{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=a,{transposeA:c,transposeB:p,activation:h,leakyreluAlpha:f}=i,m=[];t=JP({inputs:{a:o,b:l},attrs:{transposeA:c,transposeB:p},backend:s}),u&&(n=Xz({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),h&&(r=XP(s,t,h,d,f),m.push(t),t=r);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}},tL=eD(Fu,(e=>Math.acos(e))),nL={kernelName:Fu,backendName:"cpu",kernelFunc:tL},rL=eD(Ou,(e=>Math.acosh(e))),aL={kernelName:Ou,backendName:"cpu",kernelFunc:rL},sL={kernelName:Du,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;Cz(t,"addN");let a=r.map((e=>n.data.get(e.dataId).values)),s=lm(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){let t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}},iL={kernelName:Pu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Cz(a,"all");let o=Jp.parseAxisParam(s,a.shape),l=o,u=$v.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=QD({inputs:{x:a},backend:n,attrs:{perm:u}}),l=$v.getInnerMostAxes(l.length,a.shape.length)),$v.assertAxesAreInnerMostDims("all",l,d.shape.length);let[c,p]=$v.computeOutAndReduceShapes(d.shape,l),h=Jp.sizeFromShape(p),f=Jp.makeZerosTypedArray(Jp.sizeFromShape(c),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,n=m[t];for(let e=0;e<h;++e){let r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(c,d.dtype,f);if(i){let e=ZP({inputs:{x:g},backend:n,attrs:{shape:$v.expandShapeToKeepDim(c,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},oL={kernelName:Lu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Cz(a,"any");let o=Jp.parseAxisParam(s,a.shape),l=o,u=$v.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=QD({inputs:{x:a},backend:n,attrs:{perm:u}}),l=$v.getInnerMostAxes(l.length,a.shape.length)),$v.assertAxesAreInnerMostDims("any",l,d.shape.length);let[c,p]=$v.computeOutAndReduceShapes(d.shape,l),h=Jp.sizeFromShape(p),f=Jp.makeZerosTypedArray(Jp.sizeFromShape(c),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,n=m[t];for(let e=0;e<h;++e){let r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(c,d.dtype,f);if(i){let e=ZP({inputs:{x:g},backend:n,attrs:{shape:$v.expandShapeToKeepDim(c,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},lL={kernelName:Wu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Cz(a,"argMax");let i=Jp.parseAxisParam(s,a.shape),o=$v.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=QD({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=$v.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],$v.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[d,c]=$v.computeOutAndReduceShapes(l.shape,i),p=Jp.sizeFromShape(d),h=Jp.makeZerosTypedArray(p,"int32"),f=Jp.sizeFromShape(c),m=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a>n&&(n=a,r=e)}h[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",h)}},uL={kernelName:Bu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Cz(a,"argMin");let i=Jp.parseAxisParam(s,a.shape),o=$v.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=QD({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=$v.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],$v.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[d,c]=$v.computeOutAndReduceShapes(l.shape,i),p=Jp.sizeFromShape(d),h=Jp.makeZerosTypedArray(p,"int32"),f=Jp.sizeFromShape(c),m=n.data.get(l.dataId).values;for(let e=0;e<h.length;++e){let t=e*f,n=m[t],r=0;for(let e=0;e<f;++e){let a=m[t+e];a<n&&(n=a,r=e)}h[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",h)}},dL=eD(Uu,(e=>Math.asin(e))),cL={kernelName:Uu,backendName:"cpu",kernelFunc:dL},pL=eD(Vu,(e=>Math.asinh(e))),hL={kernelName:Vu,backendName:"cpu",kernelFunc:pL},fL=eD(Gu,(e=>Math.atan(e))),mL={kernelName:Gu,backendName:"cpu",kernelFunc:fL},gL=Oz(((e,t)=>Math.atan2(e,t))),yL=jz(Hu,gL),AL={kernelName:Hu,backendName:"cpu",kernelFunc:yL},bL=eD(ju,(e=>Math.atanh(e))),xL={kernelName:ju,backendName:"cpu",kernelFunc:bL};function wL(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,c=a.effectiveFilterWidth,p=a.padInfo.top,h=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=lm(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],A=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){let n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let x=y*i-p,w=Math.max(0,x),v=Math.min(a.inHeight,d+x),k=n+y*A;for(let n=0;n<a.outWidth;++n){let i=n*o-h,d=Math.max(0,i),p=Math.min(a.inWidth,c+i),y=f,A=0,x=0;for(let n=w;n<v;n+=l){let a=m+n*r[1];for(let n=d;n<p;n+=u){let i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(A+=i,x++)}if(isNaN(y))break}g[k+n*b+t]="avg"===s?A/x:y}}}return m}function vL(e,t,n,r,a=!1,s=!1){let i=lm(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=lm(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){let g=n*o-h,y=g;for(;y<0;)y+=u;let A=Math.min(r.inHeight,c+g);for(let o=0;o<r.outWidth;++o){let c=o*l-f,h=c;for(;h<0;)h+=d;let b=Math.min(r.inWidth,p+c),x=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<A;n+=u){let i=n-g;for(let o=h;o<b;o+=d){let l=o-c,u=m.get(e,n,o,t);u>x&&(x=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(w,e,n,o,t)}}return i}function kL(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,d=a.dilationHeight,c=a.dilationWidth,p=a.effectiveFilterDepth,h=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,A="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=lm(a.outShape,n),x=b.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],v=a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){let n=t*w,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let S=w*i-m,N=S;for(;N<0;)N+=u;let T=Math.min(a.inDepth,p+S),C=n+w*v;for(let n=0;n<a.outHeight;++n){let i=n*o-g,p=i;for(;p<0;)p+=d;let m=Math.min(a.inHeight,h+i),w=C+n*k;for(let n=0;n<a.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=c;let h=Math.min(a.inWidth,f+i),g=w+n*I,v=A,k=0,S=0;for(let n=N;n<T;n+=u){let a=b+n*r[1];for(let n=p;n<m;n+=d){let i=a+n*r[2];for(let n=o;n<h;n+=c){let a=e[i+n*r[3]+t];if("max"===s&&a>v?v=a:"avg"===s&&(k+=a,S++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}x[g+t]="avg"===s?k/S:v}}}}return b}var IL={kernelName:qu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Cz(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Jp.assert($v.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=$v.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&Jp.arraysEqual(d.inShape,d.outShape))u=Lz({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Jp.computeStrides(a.shape),r=wL(e,a.shape,a.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}},SL={kernelName:Xu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Cz(a,"avgPool3d");let d=$v.computePool3DInfo(a.shape,s,i,1,o,l,u),c=kL(n.data.get(a.dataId).values,a.shape,a.dtype,Jp.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(c.shape,"float32",c.values)}},NL={kernelName:Zu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Cz([a,s],"avgPool3DGrad");let d=$v.computePool3DInfo(s.shape,i,o,1,l,u),c=d.strideDepth,p=d.strideHeight,h=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,A=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,w=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=x-1-d.padInfo.front,I=v-1-d.padInfo.left,S=w-1-d.padInfo.top,N=lm(s.shape,"float32"),T=1/(f*m*g),C=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){let s=n-k,i=r-S,o=a-I,l=0;for(let n=0;n<x;n+=y){let r=(s+n)/c;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=A){let a=(i+n)/p;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<v;n+=b){let s=(o+n)/h;s<0||s>=d.outWidth||Math.floor(s)!==s||(l+=C.get(e,r,a,s,t))}}}N.set(l*T,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},TL={kernelName:Ku,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Cz([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=$v.computePool2DInfo(i.shape,o,l,1,u),c=d.strideHeight,p=d.strideWidth,h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,A=d.effectiveFilterWidth,b=A-1-d.padInfo.left,x=y-1-d.padInfo.top,w=lm(i.shape,"float32"),v=1/(h*f),k=n.data.get(a.dataId).values,I=lm(a.shape,"float32",k);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){let a=n-x,s=r-b,i=0;for(let n=0;n<y;n+=m){let r=(a+n)/c;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<A;n+=g){let a=(s+n)/p;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}w.set(i*v,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},CL={kernelName:Ud,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;Jp.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Jp.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Jp.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Cz([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);let d=n.data.get(a.dataId).values,c=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=h.length,A=p.length,b=c.length,x=0,w=0,v=0,k=0;for(let e=0;e<d.length;++e)m[e]=f[x++]+(d[e]-c[w++])*h[v++]/Math.sqrt(p[k++]+u),x>=g&&(x=0),w>=b&&(w=0),v>=y&&(v=0),k>=A&&(k=0);return n.makeTensorInfo(a.shape,a.dtype,m)}},EL={kernelName:Ju,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Cz([a],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=$v.getReshaped(a.shape,s,o),u=$v.getPermuted(l.length,s.length),d=$v.getReshapedPermuted(a.shape,s,o),c=$v.getSliceBeginCoords(i,s.length),p=$v.getSliceSize(d,i,s.length),h=ZP({inputs:{x:a},backend:n,attrs:{shape:l}}),f=QD({inputs:{x:h},backend:n,attrs:{perm:u}}),m=ZP({inputs:{x:f},backend:n,attrs:{shape:d}}),g=cP({inputs:{x:m},backend:n,attrs:{begin:c,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},_L={kernelName:Qu,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Yz(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},RL={kernelName:td,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=$v.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},ML=eD(ad,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),$L={kernelName:ad,backendName:"cpu",kernelFunc:ML},FL={kernelName:id,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(Jp.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function OL(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var zL={kernelName:Xd,backendName:"cpu",kernelFunc:OL};function DL(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Jp.parseAxisParam(a,t[0].shape)[0],i=$v.computeOutShape(t.map((e=>e.shape)),s);if(0===Jp.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>Jp.sizeFromShape(e.shape)>0));if(1===o.length)return Lz({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));if($v.assertParamsConsistent(l,s),"complex64"===o[0].dtype){let e=o.map((e=>Bz({inputs:{input:e},backend:n}))),t=o.map((e=>OL({inputs:{input:e},backend:n}))),r=DL({inputs:e,backend:n,attrs:{axis:s}}),a=DL({inputs:t,backend:n,attrs:{axis:s}}),i=zz({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}let u=o.map((e=>{let t=Jp.sizeFromShape(e.shape.slice(s));return ZP({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=$v.computeOutShape(u.map((e=>e.shape)),1);let c=1===u[0].shape[0],p=sD(d,i,t[0].dtype,c),h=$v.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(h,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var PL={kernelName:od,backendName:"cpu",kernelFunc:DL};function LL(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;Cz([a,s],"conv2d");let c=$v.convertConv2DDataFormat(l),p=$v.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,c),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,A=p.padInfo.top,b="channelsLast"===p.dataFormat,x=new Th(p.outShape,a.dtype),w=Jp.computeStrides(a.shape),v=Jp.computeStrides(s.shape),k=w[0],I=b?w[1]:w[2],S=b?w[2]:1,N=b?1:w[1],T=x.strides[0],C=b?x.strides[1]:x.strides[2],E=b?x.strides[2]:1,_=b?1:x.strides[1],R=n.data.get(a.dataId).values,M=n.data.get(s.dataId).values,$=x.values;for(let e=0;e<p.batchSize;++e){let t=e*k,n=e*T;for(let e=0;e<p.outHeight;++e){let r=n+e*C,a=e*p.strideHeight-A;for(let e=0;e<h;++e){let n=a+e*m;if(n<0||n>=p.inHeight)continue;let s=e*v[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){let t=r+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){let r=n+e*g;if(r<0||r>=p.inWidth)continue;let a=i+r*S,o=s+e*v[1];for(let e=0;e<p.inChannels;++e){let n=R[a+e*N];for(let e=0;e<p.outChannels;++e)$[t+e*_]+=n*M[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,$)}var WL={kernelName:ld,backendName:"cpu",kernelFunc:LL},BL={kernelName:ud,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;Cz([a,s],"conv2dBackpropFilter");let c=$v.convertConv2DDataFormat(l),p=$v.computeConv2DInfo(a.shape,d,i,1,o,u,!1,c),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,A=new Th(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,w=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,k=new Th(a.shape,a.dtype,w),I=new Th(s.shape,s.dtype,v);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((x-e)/h)),n=Math.min(p.outHeight,(p.inHeight+x-e)/h);for(let r=0;r<g;++r){let a=Math.max(0,Math.ceil((b-r)/f)),s=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let d=t;d<n;++d){let t=e+d*h-x;for(let e=a;e<s;++e){let n=r+e*f-b;l+=y?k.get(u,t,n,i)*I.get(u,d,e,o):k.get(u,i,t,n)*I.get(u,o,d,e)}}A.set(l,e,r,i,o)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},UL={kernelName:dd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;Cz([a,s],"conv2dBackpropInput");let c=Jp.computeStrides(s.shape),p=Jp.computeStrides(a.shape),h=$v.convertConv2DDataFormat(u),f=$v.computeConv2DInfo(i,s.shape,o,1,l,d,!1,h),m=new Th(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,A=n.data.get(s.dataId).values,[b,x,w]=c,{batchSize:v,filterHeight:k,filterWidth:I,inChannels:S,inHeight:N,inWidth:T,outChannels:C,outHeight:E,outWidth:_,strideHeight:R,strideWidth:M}=f;h=f.dataFormat;let $=k-1-f.padInfo.top,F=I-1-f.padInfo.left,O="channelsLast"===h,z=m.strides[0],D=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,L=O?1:m.strides[1],W=p[0],B=O?p[1]:p[2],U=O?p[2]:1,V=O?1:p[1];for(let e=0;e<v;++e)for(let t=0;t<S;++t)for(let n=0;n<N;++n){let r=n-$,a=Math.max(0,Math.ceil(r/R)),s=Math.min(E,(k+r)/R);for(let i=0;i<T;++i){let o=i-F,l=Math.max(0,Math.ceil(o/M)),u=Math.min(_,(I+o)/M),d=0;for(let n=a;n<s;++n){let a=n*R-r;for(let r=l;r<u;++r){let s=W*e+B*n+U*r,i=b*(k-1-a)+x*(I-1-(r*M-o))+w*t;for(let e=0;e<C;++e)d+=y[s+V*e]*A[i+e]}}g[z*e+D*n+P*i+L*t]=d}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},VL={kernelName:cd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;Cz([a,s],"conv3d");let u=$v.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:d,filterHeight:c,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,b=g.top,x=new Th(u.outShape,a.dtype),w=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,k=x.values,I=Jp.computeStrides(a.shape),S=Jp.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*I[0],n=e*x.strides[0];for(let e=0;e<u.outDepth;++e){let r=n+e*x.strides[1],a=e*u.strideDepth-y;for(let e=0;e<d;++e){let n=a+e*h;if(n<0||n>=u.inDepth)continue;let s=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){let t=r+e*x.strides[2],n=e*u.strideHeight-b;for(let e=0;e<c;++e){let r=n+e*f;if(r<0||r>=u.inHeight)continue;let a=s+e*S[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,r=e*u.strideWidth-A;for(let e=0;e<p;++e){let t=r+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*S[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*v[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},GL={kernelName:pd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;Cz([a,s],"conv3dBackpropFilterV2");let u=Jp.computeStrides(a.shape),d=Jp.computeStrides(s.shape),c=$v.computeConv3DInfo(a.shape,l,i,1,o),p=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.filterDepth,g=c.filterHeight,y=c.filterWidth,A=new Th(c.filterShape,"float32"),b=A.values,[x,w,v,k]=A.strides,I=n.data.get(s.dataId).values,[S,N,T,C]=d,E=n.data.get(a.dataId).values,[_,R,M,$]=u,F=c.padInfo.front,O=c.padInfo.left,z=c.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((F-e)/p)),n=Math.min(c.outDepth,(c.inDepth+F-e)/p),r=e*x;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((z-a)/h)),i=Math.min(c.outHeight,(c.inHeight+z-a)/h),o=a*w+r;for(let r=0;r<y;++r){let l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(c.outWidth,(c.inWidth+O-r)/f),d=r*v+o;for(let o=0;o<c.inChannels;++o){let m=o*k+d;for(let d=0;d<c.outChannels;++d){let g=0;for(let m=0;m<c.batchSize;++m){let c=m*_,y=m*S;for(let m=t;m<n;++m){let t=(e+m*p-F)*R+c,n=m*N+y;for(let e=s;e<i;++e){let s=(a+e*h-z)*M+t,i=e*T+n;for(let e=l;e<u;++e){let t=e*C+i;g+=E[(r+e*f-O)*$+s+o]*I[t+d]}}}}b[m+d]=g}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}},jL={kernelName:hd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;Cz([a],"conv3dBackpropInputV2");let u=Jp.computeStrides(a.shape),d=Jp.computeStrides(s.shape),c=$v.computeConv3DInfo(l,s.shape,o,1,i),p=new Th(c.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,A=n.data.get(a.dataId).values,[b,x,w,v]=u,k=n.data.get(s.dataId).values,[I,S,N,T]=d,{batchSize:C,filterDepth:E,filterHeight:_,filterWidth:R,inChannels:M,inDepth:$,inHeight:F,inWidth:O,outChannels:z,outDepth:D,outHeight:P,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:U}=c,V=E-1-c.padInfo.front,G=_-1-c.padInfo.top,j=R-1-c.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<M;++t)for(let n=0;n<$;++n){let r=n-V,a=Math.max(0,Math.ceil(r/W)),s=Math.min(D,(E+r)/W);for(let i=0;i<F;++i){let o=i-G,l=Math.max(0,Math.ceil(o/B)),u=Math.min(P,(_+o)/B);for(let d=0;d<O;++d){let c=d-j,p=Math.max(0,Math.ceil(c/U)),C=Math.min(L,(R+c)/U),M=0;for(let n=a;n<s;++n){let a=n*W-r;for(let r=l;r<u;++r){let s=r*B-o;for(let i=p;i<C;++i){let o=b*e+x*n+w*r+v*i,l=I*(E-1-a)+S*(_-1-s)+N*(R-1-(i*U-c))+T*t;for(let e=0;e<z;++e)M+=A[o+e]*k[l+e]}}}h[f*e+m*n+g*i+y*d+t]=M}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},HL=eD(fd,(e=>Math.cos(e))),qL={kernelName:fd,backendName:"cpu",kernelFunc:HL},KL=eD(md,(e=>Math.cosh(e))),XL={kernelName:md,backendName:"cpu",kernelFunc:KL},ZL={kernelName:Ad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[d,c,p,h]=a.shape,f=s.shape[0],[m,g]=o,y=lm([f,m,g,h],"float32"),A=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,w=Jp.computeStrides(a.shape),v=Jp.computeStrides(y.shape);for(let e=0;e<f;e++){let t=4*e,n=A[t],r=A[t+1],a=A[t+2],s=A[t+3],i=b[e];if(i>=d)continue;let o=m>1?(a-n)*(c-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){let d=m>1?n*(c-1)+t*o:.5*(n+a)*(c-1);if(d<0||d>c-1)for(let n=0;n<g;n++)for(let r=0;r<h;r++){let a=r+n*v[2]+t*v[1]+e*v[0];y.values[a]=u}else if("bilinear"===l){let n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let l=0;l<g;l++){let d=g>1?r*(p-1)+l*f:.5*(r+s)*(p-1);if(d<0||d>p-1){for(let n=0;n<h;n++){let r=n+l*v[2]+t*v[1]+e*v[0];y.values[r]=u}continue}let c=Math.floor(d),m=Math.ceil(d),A=d-c;for(let r=0;r<h;r++){let s=r+c*w[2]+n*w[1]+i*w[0],u=x[s];s=r+m*w[2]+n*w[1]+i*w[0];let d=x[s];s=r+c*w[2]+a*w[1]+i*w[0];let p=x[s];s=r+m*w[2]+a*w[1]+i*w[0];let h=u+(d-u)*A,f=p+(x[s]-p)*A;s=r+l*v[2]+t*v[1]+e*v[0],y.values[s]=h+(f-h)*o}}}else for(let n=0;n<g;++n){let a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<h;r++){let a=r+n*v[2]+t*v[1]+e*v[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(d);for(let r=0;r<h;r++){let a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*v[2]+t*v[1]+e*v[0];y.values[s]=x[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},YL={kernelName:gd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Cz(a,"cumprod");let l=$v.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=QD({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=$v.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let c=Wh(u.dtype,"int32"),p=Jp.makeOnesTypedArray(Jp.sizeFromShape(u.shape),c),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)p[n]=i?1:h[n];else{let r=m(e,t-1);p[n]=i?h[r]*p[r]:h[n]*p[r]}}let g=n.makeTensorInfo(u.shape,c,p);if(null!=l){let e=QD({inputs:{x:g},backend:n,attrs:{perm:$v.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},JL={kernelName:yd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Cz(a,"cumsum");let l=$v.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=QD({inputs:{x:a},backend:n,attrs:{perm:l}}));let d=$v.getInnerMostAxes(1,a.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let c=Wh(u.dtype,"int32"),p=Jp.makeZerosTypedArray(Jp.sizeFromShape(u.shape),c),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)p[n]=i?0:h[n];else{let r=m(e,t-1);p[n]=i?h[r]+p[r]:h[n]+p[r]}}let g=n.makeTensorInfo(u.shape,c,p);if(null!=l){let e=QD({inputs:{x:g},backend:n,attrs:{perm:$v.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},QL={kernelName:bd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=Yz(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){let e=Jz(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},eW={kernelName:xd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;Jp.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=a.shape[0],l=a.shape[1],u=a.shape[2],d=a.shape[3],c=l*s,p=u*s,h=d/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*c*p*h),g=0;for(let e=0;e<o;++e)for(let t=0;t<c;++t){let n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){let a=Math.floor(t/s),i=(r*s+t%s)*h;for(let t=0;t<h;++t){let r=t+i+d*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,c,p,h],a.dtype,m)}};function tW(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;Cz([a,s],"depthwiseConv2DNative");let d=Jp.computeStrides(a.shape),c=Jp.computeStrides(s.shape),p=l;null==p&&(p=[1,1]),Jp.assert($v.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let h=$v.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=h,b=A.left,x=A.top,w=h.outChannels/h.inChannels,v=new Th(h.outShape,a.dtype),k=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=v.values;for(let e=0;e<h.batchSize;++e){let t=e*d[0],n=e*v.strides[0];for(let e=0;e<h.outHeight;++e){let r=n+e*v.strides[1],a=e*h.strideHeight-x;for(let e=0;e<f;++e){let n=a+e*g;if(n<0||n>=h.inHeight)continue;let s=e*c[0],i=t+n*d[1];for(let e=0;e<h.outWidth;++e){let t=r+e*v.strides[2],n=e*h.strideWidth-b;for(let e=0;e<m;++e){let r=n+e*y;if(r<0||r>=h.inWidth)continue;let a=s+e*c[1],o=i+r*h.inChannels,l=t,u=a;for(let e=0;e<h.inChannels;++e){let t=k[o+e];for(let e=0;e<w;++e)S[l+e]+=t*I[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}var nW={kernelName:wd,backendName:"cpu",kernelFunc:tW},rW={kernelName:vd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;Cz([a,s],"depthwiseConv2dNativeBackpropFilter");let c=$v.computeConv2DInfo(a.shape,d,i,o,l,u,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=c,g=new Th(c.filterShape,"float32"),y=c.padInfo.left,A=c.padInfo.top,b=c.outChannels/c.inChannels,x=n.data.get(a.dataId).values,w=new Th(a.shape,a.dtype,x),v=n.data.get(s.dataId).values,k=new Th(s.shape,s.dtype,v);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((A-e)/p)),n=Math.min(c.outHeight,(c.inHeight+A-e)/p);for(let r=0;r<m;++r){let a=Math.max(0,Math.ceil((y-r)/h)),s=Math.min(c.outWidth,(c.inWidth+y-r)/h);for(let i=0;i<c.outChannels;++i){let o=Math.trunc(i/b),l=i%b,u=0;for(let l=0;l<c.batchSize;++l)for(let d=t;d<n;++d){let t=e+d*p-A;for(let e=a;e<s;++e){let n=r+e*h-y;u+=w.get(l,t,n,o)*k.get(l,d,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},aW={kernelName:kd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;Cz([a,s],"depthwiseConv2DNativeBackpropInput");let c=Jp.computeStrides(a.shape),p=Jp.computeStrides(s.shape),h=$v.computeConv2DInfo(d,s.shape,i,o,l,u,!0),f=new Th(h.inShape,"float32"),m=f.values,[g,y,A]=f.strides,b=n.data.get(a.dataId).values,[x,w,v]=c,k=n.data.get(s.dataId).values,[I,S,N]=p,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:_,inHeight:R,inWidth:M,outChannels:$,outHeight:F,outWidth:O,strideHeight:z,strideWidth:D}=h,P=C-1-h.padInfo.top,L=E-1-h.padInfo.left,W=$/_;for(let e=0;e<T;++e)for(let t=0;t<_;++t)for(let n=0;n<R;++n){let r=n-P,a=Math.max(0,Math.ceil(r/z)),s=Math.min(F,(C+r)/z);for(let i=0;i<M;++i){let o=i-L,l=Math.max(0,Math.ceil(o/D)),u=Math.min(O,(E+o)/D),d=0;for(let n=a;n<s;++n){let a=n*z-r;for(let r=l;r<u;++r){let s=x*e+w*n+v*r,i=I*(C-1-a)+S*(E-1-(r*D-o))+N*t;for(let e=0;e<W;++e)d+=b[s+(t*W+e)]*k[i+e]}}m[g*e+y*n+A*i+t]=d}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},sW={kernelName:Id,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=Jp.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=lm([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},iW={kernelName:Sd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,d=r.shape.length,c=l.data.get(a.dataId).values,p=a.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=$v.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=Jp.sizeFromShape(N),C=N.length,E=Jp.getArrayFromDType(r.dtype,T);for(let e=0;e<h;++e)for(let t=0;t<y;++t){let n=t*x-b.top;for(let s=0;s<A;++s){let i=s*w-b.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<v;++t){let s=n+t*I;if(s>=0&&s<f)for(let n=0;n<k;++n){let h=i+n*S;if(h>=0&&h<m){let i=Jp.locToIndex([e,s,h,o],d,Jp.computeStrides(r.shape)),f=Jp.locToIndex([t,n,o],p,Jp.computeStrides(a.shape)),m=u[i]+c[f];m>l&&(l=m)}}}E[Jp.locToIndex([e,t,s,o],C,Jp.computeStrides(N))]=l}}}return{dataId:l.write(Jp.toTypedArray(E,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}},oW={kernelName:Td,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=Jp.toNestedArray(r.shape,u.data.get(r.dataId).values),c=Jp.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:S}=$v.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Jp.assert(s.rank===S.length,(()=>`Error in ${Td}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let N=Jp.toNestedArray(S,u.data.get(s.dataId).values),T=Jp.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){let n=t*b-A.top;for(let r=0;r<y;++r){let a=r*x-A.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){let r=n+t*k;if(r>=0&&r<h)for(let n=0;n<v;++n){let u=a+n*I;if(u>=0&&u<f){let a=d[e][r][u][s]+c[t][n][s];a>i&&(i=a,o=t,l=n)}}}T[o][l][s]+=N[e][t][r][s]}}}return{dataId:u.write(Jp.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},lW={kernelName:Nd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,d=Jp.toNestedArray(r.shape,u.data.get(r.dataId).values),c=Jp.toNestedArray(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:b,strideWidth:x,filterHeight:w,filterWidth:v,dilationHeight:k,dilationWidth:I,outShape:S}=$v.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",l);Jp.assert(s.rank===S.length,(()=>`Error in ${Nd}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));let N=Jp.toNestedArray(S,u.data.get(s.dataId).values),T=Jp.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){let n=t*b-A.top;for(let r=0;r<y;++r){let a=r*x-A.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){let r=n+t*k;if(r>=0&&r<h)for(let n=0;n<v;++n){let u=a+n*I;if(u>=0&&u<f){let a=d[e][r][u][s]+c[t][n][s];a>i&&(i=a,o=r,l=u)}}}T[e][o][l][s]+=N[e][t][r][s]}}}return{dataId:u.write(Jp.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function uW(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a;Cz(s,"sum"),t="bool"===s.dtype?Vz({inputs:{x:s},backend:r,attrs:{dtype:"int32"}}):Lz({inputs:{x:s},backend:r});let l=t.shape.length,u=Jp.parseAxisParam(i,t.shape),d=$v.getAxesPermutation(u,l),c=u,p=t;null!=d&&(p=QD({inputs:{x:t},backend:r,attrs:{perm:d}}),c=$v.getInnerMostAxes(c.length,l)),$v.assertAxesAreInnerMostDims("sum",c,p.shape.length);let[h,f]=$v.computeOutAndReduceShapes(p.shape,c),m=Pz(r,h,$v.upcastType(p.dtype,"int32")),g=Jp.sizeFromShape(f),y=r.data.get(m.dataId).values,A=r.data.get(p.dataId).values;for(let e=0;e<y.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=A[t+e];y[e]=n}if(o){let e=m;m=ZP({inputs:{x:m},backend:r,attrs:{shape:$v.expandShapeToKeepDim(m.shape,u)}}),r.disposeIntermediateTensorInfo(e)}return r.disposeIntermediateTensorInfo(t),null!=d&&r.disposeIntermediateTensorInfo(p),m}var dW={kernelName:op,backendName:"cpu",kernelFunc:uW},cW={kernelName:Ed,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=$v.decodeEinsumEquation(a,s.length);$v.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=$v.getEinsumComputePath(o,l),c=d.length,p=null,h=i.length,f=[];for(let e=0;e<c;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=$v.getEinsumPermutation(h,l[t]);$v.isIdentityPermutation(r)?e=s[t]:(e=QD({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Jp.arraysEqual(e.shape,i)||(e=ZP({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=jD({inputs:{a:e,b:p},backend:n}),f.push(p))}e<c-1&&(u[e]>=0&&(p=uW({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},pW={kernelName:Rd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;Cz([r,a],"eluGrad");let s=new Float32Array(Jp.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},hW=$v.ERF_P,fW=$v.ERF_A1,mW=$v.ERF_A2,gW=$v.ERF_A3,yW=$v.ERF_A4,AW=$v.ERF_A5,bW=eD(Md,(e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+hW*n);return t*(1-((((AW*r+yW)*r+gW)*r+mW)*r+fW)*r*Math.exp(-n*n))})),xW={kernelName:Md,backendName:"cpu",kernelFunc:bW};function wW(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Jp.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),ZP({inputs:{x:a},backend:n,attrs:{shape:o}})}var vW={kernelName:Od,backendName:"cpu",kernelFunc:wW},kW=Oz(((e,t)=>e/t)),IW=jz(Cd,kW),SW={kernelName:Cd,backendName:"cpu",kernelFunc:IW};function NW(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],d=Jp.sizeFromShape(u),c=Jp.getTypedArrayFromDType("float32",d),p=Jp.getTypedArrayFromDType("float32",d);for(let e=0;e<a;e++){let r=cP({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=cP({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=zz({inputs:{real:r,imag:a},backend:n}),{real:u,imag:d}=TW(i,t,n),h=$v.mergeRealAndImagArrays(u,d);for(let t=0;t<s;t++){let n=$v.getComplexWithIndex(h,t);c[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}let h=n.makeTensorInfo(u,"float32",c),f=n.makeTensorInfo(u,"float32",p),m=zz({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function TW(e,t,n){let r=Jp.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(function(e){return!(e&e-1)}(r)){let a=CW(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Jp.createScalarValue(r,"float32")),i=Lz({inputs:{x:s},backend:n}),l=SW.kernelFunc({inputs:{a:e,b:s},backend:n}),u=SW.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(l.dataId).values,c=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:c}}return a}{let e=function(e,t,n){let r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){let o=$v.exponent(a*r,t,n),l=$v.getComplexWithIndex(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),$v.assignToTypedArray(r,s,i,a)}return r}($v.mergeRealAndImagArrays(s,i),r,t);return $v.splitRealAndImagArrays(e)}}function CW(e,t,n,r,a){if(1===n)return{real:e,imag:t};let s=$v.mergeRealAndImagArrays(e,t),i=n/2,o=$v.complexWithEvenIndex(s),l=o.real,u=o.imag,d=[l.length],c=a.makeTensorInfo(d,"float32",l),p=a.makeTensorInfo(d,"float32",u),h=zz({inputs:{real:c,imag:p},backend:a}),f=$v.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=a.makeTensorInfo(y,"float32",m),b=a.makeTensorInfo(y,"float32",g),x=zz({inputs:{real:A,imag:b},backend:a}),w=CW(l,u,i,r,a),v=w.real,k=w.imag,I=[v.length],S=a.makeTensorInfo(I,"float32",v),N=a.makeTensorInfo(I,"float32",k),T=zz({inputs:{real:S,imag:N},backend:a}),C=CW(m,g,i,r,a),E=C.real,_=C.imag,R=[E.length],M=a.makeTensorInfo(R,"float32",E),$=a.makeTensorInfo(R,"float32",_),F=zz({inputs:{real:M,imag:$},backend:a}),O=$v.exponents(n,r),z=[O.real.length],D=a.makeTensorInfo(z,"float32",O.real),P=a.makeTensorInfo(z,"float32",O.imag),L=zz({inputs:{real:D,imag:P},backend:a}),W=jD({inputs:{a:L,b:F},backend:a}),B=Xz({inputs:{a:T,b:W},backend:a}),U=_P({inputs:{a:T,b:W},backend:a}),V=Bz({inputs:{input:B},backend:a}),G=Bz({inputs:{input:U},backend:a}),j=OL({inputs:{input:B},backend:a}),H=OL({inputs:{input:U},backend:a}),q=DL({inputs:[V,G],backend:a,attrs:{axis:0}}),K=DL({inputs:[j,H],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Z=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}var EW={kernelName:Dd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Jp.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=ZP({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=NW(i,!1,n),l=ZP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function _W(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||Jp.inferDtype(a),o=Jp.getArrayFromDType(i,Jp.sizeFromShape(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}var RW={kernelName:Pd,backendName:"cpu",kernelFunc:_W},MW={kernelName:Ld,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=Jp.getTypedArrayFromDType(r.dtype,Jp.sizeFromShape(r.shape)),[i,o,l,u]=r.shape,d=a.data.get(r.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let r=e*u;for(let a=0;a<u;a++){let i=Math.round(l-e-1),o=t+n+r+a,c=d[o];i>=0&&i<l&&(c=d[t+n+i*u+a]),s[o]=c}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$W=Oz(((e,t)=>Math.floor(e/t))),FW=jz(Bd,$W,null,"int32"),OW={kernelName:Bd,backendName:"cpu",kernelFunc:FW},zW={kernelName:Dp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=LL({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p}});if(i){let e=m;m=Xz({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){let e=m;m=XP(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},DW={kernelName:Pp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=tW({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p}});if(i){let e=m;m=Xz({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){let e=m;m=XP(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},PW={kernelName:Gd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=Jp.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[l,u,d,c]=$v.prepareAndValidate(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);let p=AD(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,d,c,r.shape,s);return n.makeTensorInfo(l,r.dtype,p.values)}},LW={kernelName:Vd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;Cz([a,s],"gatherV2");let l=Jp.parseAxisParam(i,a.shape)[0],u=n.data.get(s.dataId).values,d=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];Jp.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let c=o;null==o&&(c=0);let p=Jp.sizeFromShape(s.shape),h=$v.segment_util.collectGatherOpShapeInfo(a,s,l,c),f=ZP({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=ZP({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),A=bD(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}},WW={kernelName:Kd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t,a=Jp.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=ZP({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=NW(i,!0,n),l=ZP({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},BW=eD(Zd,(e=>Number.isFinite(e)?1:0),"bool"),UW={kernelName:Zd,backendName:"cpu",kernelFunc:BW},VW=eD(Yd,(e=>Math.abs(e)===1/0?1:0),"bool"),GW={kernelName:Yd,backendName:"cpu",kernelFunc:VW},jW=eD(Jd,(e=>Number.isNaN(e)?1:0),"bool"),HW={kernelName:Jd,backendName:"cpu",kernelFunc:jW},qW={kernelName:nc,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=MD(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},KW=eD(ac,(e=>Math.log1p(e))),XW={kernelName:ac,backendName:"cpu",kernelFunc:KW},ZW=Oz(((e,t)=>e&&t)),YW=jz(sc,ZW,null,"bool"),JW={kernelName:sc,backendName:"cpu",kernelFunc:YW},QW=eD(ic,(e=>e?0:1),"bool"),eB={kernelName:ic,backendName:"cpu",kernelFunc:QW},tB=Oz(((e,t)=>e||t)),nB=jz(oc,tB,null,"bool"),rB={kernelName:oc,backendName:"cpu",kernelFunc:nB},aB={kernelName:uc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;Cz(a,"LRN");let u=a.shape[3],d=u-1,c=n.data.get(a.dataId).values,p=Jp.sizeFromShape(a.shape),h=new Float32Array(p);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),r=e-t+Math.min(t+s,d),a=0;for(;n<=r;n++){let e=c[n];a+=e*e}return a}for(let e=0;e<p;e++){let t=f(e),n=c[e]*Math.pow(i+o*t,-l);h[e]=n}return n.makeTensorInfo(a.shape,a.dtype,h)}},sB={kernelName:dc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r;Cz(i,"LRNGrad");let c=Jp.sizeFromShape(i.shape),p=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(c),y=c;for(let e=0;e<y;e++){let t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1),a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*d*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=h[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function iB(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,l=a.shape,u=l.length,d=Jp.parseAxisParam(s,l),c=d,p=$v.getAxesPermutation(c,u),h=o.data.get(a.dataId).values;if(null!=p){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];h=JD(h,l,a.dtype,p,e),c=$v.getInnerMostAxes(c.length,u),l=e}Cz(a,"max"),$v.assertAxesAreInnerMostDims("max",c,u);let[f,m]=$v.computeOutAndReduceShapes(l,c),g=zD(h,Jp.sizeFromShape(m),f,a.dtype),y=o.write(g,f,a.dtype),A=f;return i&&(A=$v.expandShapeToKeepDim(f,d)),{dataId:y,shape:A,dtype:a.dtype}}var oB={kernelName:cc,backendName:"cpu",kernelFunc:iB},lB={kernelName:hc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Cz(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Jp.assert($v.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,d=$v.computePool2DInfo(a.shape,s,i,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&Jp.arraysEqual(d.inShape,d.outShape))u=Lz({inputs:{x:a},backend:n});else{let e=n.data.get(a.dataId).values,t=Jp.computeStrides(a.shape),r=wL(e,a.shape,a.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,a.dtype,r.values)}return u}},uB={kernelName:mc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;Cz(a,"maxPool3d");let d=$v.computePool3DInfo(a.shape,s,i,1,o,l,u),c=kL(n.data.get(a.dataId).values,a.shape,a.dtype,Jp.computeStrides(a.shape),d,"max");return n.makeTensorInfo(c.shape,"float32",c.values)}},dB={kernelName:gc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;Cz([a,s],"maxPool3DGrad");let d=$v.computePool3DInfo(s.shape,i,o,1,l,u),c=function(e,t){let n=lm(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*r-p,b=A;for(;b<0;)b+=i;let x=Math.min(t.inDepth,u+A);for(let r=0;r<t.outHeight;++r){let u=r*a-h,p=u;for(;p<0;)p+=o;let w=Math.min(t.inHeight,d+u);for(let a=0;a<t.outWidth;++a){let h=a*s-f,v=h;for(;v<0;)v+=l;let k=Math.min(t.inWidth,c+h),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=b;t<x;t+=i){let n=t-A;for(let r=p;r<w;r+=o){let a=r-u;for(let s=v;s<k;s+=l){let i=s-h,o=e.get(m,t,r,s,g);o>=I&&(I=o,S=n*d*c+a*d+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),d),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,A=d.effectiveFilterDepth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,w=A-1-d.padInfo.front,v=x-1-d.padInfo.left,k=b-1-d.padInfo.top,I=lm(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){let s=n-w,i=r-k,o=a-v,l=0;for(let n=0;n<A;n+=m){let r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){let s=(i+a)/h;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<x;i+=y){let u=(o+i)/f;if(u<0||u>=d.outWidth||Math.floor(u)!==u)continue;let p=A*b*x-1-c.get(e,r,s,u,t)===n*b*x+a*x+i?1:0;0!==p&&(l+=S.get(e,r,s,u,t)*p)}}}I.set(l,e,n,r,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},cB={kernelName:fc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Cz([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:c}=r,p=$v.computePool2DInfo(o.shape,l,u,1,d,c),h=n.data.get(o.dataId).values,f=lm(p.outShape,o.dtype,vL(h,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,A=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,w=x-1-p.padInfo.left,v=b-1-p.padInfo.top,k=lm(o.shape,"float32"),I=n.data.get(a.dataId).values,S=lm(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){let a=n-v,s=r-w,i=0;for(let n=0;n<b;n+=y){let r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=A){let o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;let l=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}k.set(i,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},pB={kernelName:yc,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Cz(r,"MaxPoolWithArgmax");let u=l.data.get(r.dataId).values,d=$v.computePool2DInfo(r.shape,a,s,[1,1],i),[c,p]=function(e,t,n,r,a){let s=wL(e,0,n,Jp.computeStrides(t),a,"max"),i=vL(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,d),h=l.write(c,d.outShape,r.dtype),f=l.write(p,d.outShape,r.dtype);return[{dataId:h,shape:d.outShape,dtype:r.dtype},{dataId:f,shape:d.outShape,dtype:"int32"}]}},hB={kernelName:Ac,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=Jp.parseAxisParam(s,a.shape),l=$v.computeOutAndReduceShapes(a.shape,o)[1],u=Jp.sizeFromShape(l),d=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(c);let p=Vz({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(p);let h=IW({inputs:{a:p,b:c},backend:n});d.push(h);let f=uW({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},fB={kernelName:bc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Cz(a,"min");let o=Jp.parseAxisParam(s,a.shape),l=o,u=$v.getAxesPermutation(l,a.shape.length),d=a;null!=u&&(d=QD({inputs:{x:a},backend:n,attrs:{perm:u}}),l=$v.getInnerMostAxes(l.length,a.shape.length)),$v.assertAxesAreInnerMostDims("min",l,d.shape.length);let[c,p]=$v.computeOutAndReduceShapes(d.shape,l),h=Jp.sizeFromShape(p),f=Jp.makeZerosTypedArray(Jp.sizeFromShape(c),d.dtype),m=n.data.get(d.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,n=m[t];for(let e=0;e<h;++e){let r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(c,d.dtype,f);if(i){let e=ZP({inputs:{x:g},backend:n,attrs:{shape:$v.expandShapeToKeepDim(c,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},mB={kernelName:wc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Cz(a,"mirrorPad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===i?0:1,c=n.data.get(a.dataId).values,p=a.shape.length,h=Jp.computeStrides(a.shape),f=Jp.sizeFromShape(o),m=o.length,g=Jp.computeStrides(o),y=Jp.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=Jp.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-d:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+d);t=t.map(((e,t)=>e-l[t]));let n=Jp.locToIndex(t,p,h);y[e]=c[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},gB=Oz(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),yB=jz(vc,gB),AB={kernelName:vc,backendName:"cpu",kernelFunc:yB},bB=ol(bl());function xB(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=Jp.parseAxisParam([o],a.shape),u=iB({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=$v.expandShapeToKeepDim(u.shape,l),c=ZP({inputs:{x:u},backend:n,attrs:{shape:d}}),p=_P({inputs:{a,b:c},backend:n}),h=dD({inputs:{x:p},backend:n}),f=uW({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=ZP({inputs:{x:f},backend:n,attrs:{shape:d}}),g=IW({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var wB={kernelName:dp,backendName:"cpu",kernelFunc:xB},vB={kernelName:kc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Cz(a,"multinomial");let l=o?a:xB({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],c=n.data.get(l.dataId).values,p=[u,s],h=Jp.makeZerosTypedArray(Jp.sizeFromShape(p),"int32");for(let e=0;e<u;++e){let t=e*d,n=new Float32Array(d-1);n[0]=c[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+c[t+e];let r=bB.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=r();h[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){h[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}},kB=Ok.nonMaxSuppressionV3Impl,IB={kernelName:Tc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;Cz(a,"NonMaxSuppression");let u=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:c}=kB(u,d,i,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},SB=Ok.nonMaxSuppressionV4Impl,NB={kernelName:Cc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;Cz(a,"NonMaxSuppressionPadded");let d=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=SB(d,c,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},TB=Ok.nonMaxSuppressionV5Impl,CB={kernelName:Ec,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;Cz(a,"NonMaxSuppressionWithScore");let d=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=TB(d,c,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},EB={kernelName:Rc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Cz(a,"oneHot");let l=Jp.sizeFromShape(a.shape),u=new Float32Array(l*s);u.fill(o);let d=n.data.get(a.dataId).values;for(let e=0;e<l;++e)d[e]>=0&&d[e]<s&&(u[e*s+d[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function _B(e){let{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){let e=Bz({inputs:{input:r},backend:n}),t=_B({inputs:{x:e},backend:n}),a=OL({inputs:{input:r},backend:n}),s=_B({inputs:{x:a},backend:n}),i=zz({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return _W({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var RB={kernelName:Mp,backendName:"cpu",kernelFunc:_B},MB={kernelName:_c,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let t=Bz({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=OL({inputs:{input:a},backend:r}),i=_B({inputs:{x:s},backend:r}),o=zz({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return _W({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function $B(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return wW({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Jp.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Jp.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=DL({inputs:t.map((e=>{let t=wW({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var FB={kernelName:Mc,backendName:"cpu",kernelFunc:$B},OB={kernelName:$c,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Cz(a,"pad");let o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,d=Jp.sizeFromShape(a.shape),c=a.shape.length,p=Jp.computeStrides(a.shape),h=Jp.sizeFromShape(o),f=o.length,m=Jp.computeStrides(o),g=Jp.getTypedArrayFromDType(a.dtype,h);0!==i&&g.fill(i);for(let e=0;e<d;e++){let t=Jp.indexToLoc(e,c,p).map(((e,t)=>e+l[t]));g[Jp.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},zB=Oz(((e,t)=>Math.pow(e,t))),DB=jz(Oc,zB),PB={kernelName:Oc,backendName:"cpu",kernelFunc:DB},LB={kernelName:Pc,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=rP(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},WB=eD(Wc,(e=>1/e)),BB={kernelName:Wc,backendName:"cpu",kernelFunc:WB},UB={kernelName:jc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Cz(a,"resizeBilinear");let l=Jp.computeStrides(a.shape),[u,d]=o,[c,p,h,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(Jp.sizeFromShape([c,u,d,f])),y=[s&&u>1?p-1:p,s&&d>1?h-1:h],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],b=0,x=y[0]/A[0],w=y[1]/A[1];for(let e=0;e<c;e++)for(let t=0;t<u;t++){let n;n=i?x*(t+.5)-.5:x*t;let r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<d;e++){let t;t=i?w*(e+.5)-.5:w*e;let n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(h-1,Math.ceil(t)),d=o+n*l[2],c=u+n*l[2],p=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[c+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[b++]=i}}}return n.makeTensorInfo([c,u,d,f],"float32",g)}},VB={kernelName:Hc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Cz([s,a],"resizeBilinearGrad");let o=Jp.computeStrides(a.shape),[l,u,d,c]=a.shape,[,p,h]=s.shape,f=new Float32Array(l*u*d*c),m=[i&&p>1?u-1:u,i&&h>1?d-1:d],g=[i&&p>1?p-1:p,i&&h>1?h-1:h],y=m[0]/g[0],A=m[1]/g[1],b=n.data.get(s.dataId).values,x=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,p=1-l;for(let e=0;e<h;e++){let t=e*A,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,u=1-a,h=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*u,v=p*a,k=l*u,I=l*a;for(let e=0;e<c;e++){let t=b[x++];f[h+e]+=t*w,f[m+e]+=t*v,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,c],"float32",f)}},GB={kernelName:Vc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Cz(a,"resizeNearestNeighbor");let l=Jp.computeStrides(a.shape),[u,d]=o,[c,p,h,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(c*u*d*f),y=[s&&u>1?p-1:p,s&&d>1?h-1:h],A=[s&&u>1?u-1:u,s&&d>1?d-1:d],b=y[0]/A[0],x=y[1]/A[1],w=0;for(let e=0;e<c;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?b*(e+.5):b*e,r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));let a=t+r*l[1];for(let e=0;e<d;e++){let t=i?x*(e+.5):x*e,n=Math.min(h-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let r=a+n*l[2];for(let e=0;e<f;e++){let t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([c,u,d,f],a.dtype,g)}},jB={kernelName:Gc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Cz([s,a],"resizeNearestNeighborGrad");let o=Jp.computeStrides(a.shape),l=Jp.computeStrides(s.shape),[u,d,c,p]=a.shape,[,h,f]=s.shape,m=new Float32Array(u*d*c*p),g=n.data.get(s.dataId).values,y=[i&&h>1?d-1:d,i&&f>1?c-1:c],A=[i&&h>1?h-1:h,i&&f>1?f-1:f],b=y[0]/A[0],x=y[1]/A[1],w=1/b,v=1/x,k=2*Math.ceil(w)+2,I=2*Math.ceil(v)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-k/2);for(let r=0;r<c;r++){let s=n+r*o[2],u=Math.floor(r*v),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<k;s++){let u=s+a;if(u<0||u>=h)continue;let p=t+u*l[1],m=u*b;if(e===Math.min(d-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){let t=e+y;if(t<0||t>=f)continue;let a=p+t*l[2],s=t*x;r===Math.min(c-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},HB={kernelName:Kc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Cz(a,"reverse");let i=a.shape.length,o=Jp.parseAxisParam(s,a.shape);if(0===i)return Lz({inputs:{x:a},backend:n});let l=new Th(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},qB={kernelName:Op,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=Jp.getTypedArrayFromDType(r.dtype,Jp.sizeFromShape(r.shape)),[u,d,c,p]=r.shape,[h,f]=$v.getImageCenter(i,d,c),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){let t=e*c*d*p;for(let e=0;e<d;e++){let n=e*(c*p);for(let r=0;r<c;r++){let a=r*p;for(let i=0;i<p;i++){let o=[u,e,r,i],A=o[2],b=o[1],x=(A-h)*g-(b-f)*m,w=(A-h)*m+(b-f)*g;x=Math.round(x+h),w=Math.round(w+f);let v=s;"number"!=typeof s&&(v=3===i?255:s[i]),x>=0&&x<c&&w>=0&&w<d&&(v=y[t+w*(c*p)+x*p+i]),l[t+n+a+i]=v}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},KB=eD(Xc,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),XB={kernelName:Xc,backendName:"cpu",kernelFunc:KB};function ZB(e,t,n,r,a,s,i,o,l,u){let d=[r/a,a],c=e.values,p=t.values;if(0===r)return lm(n,t.dtype);let h=lm(d,t.dtype);h.values.fill(l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=c[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?h.values[l*a+n]+=p[e*a+n]:h.values[l*a+n]=0===t.rank?p[0]:p[e*a+n]}return h}var YB={kernelName:Yc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:c}=$v.calculateShapes(s,a,i),p=ZB(n.bufferSync(a),n.bufferSync(s),i,c,u,l,o,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},JB={kernelName:Jc,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Cz([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=Wh(a.dtype,s.dtype),c=Jp.makeZerosTypedArray(Jp.sizeFromShape(a.shape),d),p=0,h=0===i||i>1||1===a.shape.length?1:Jp.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?c[p++]=l[e]:c[p++]=u[e];return n.makeTensorInfo(a.shape,d,c)}},QB=$v.SELU_SCALEALPHA,eU=$v.SELU_SCALE,tU=eD(Qc,(e=>e>=0?eU*e:QB*(Math.exp(e)-1))),nU={kernelName:Qc,backendName:"cpu",kernelFunc:tU},rU=eD(rp,(e=>e<0?-1:e>0?1:0)),aU={kernelName:rp,backendName:"cpu",kernelFunc:rU},sU=eD(tp,(e=>Math.sin(e))),iU={kernelName:tp,backendName:"cpu",kernelFunc:sU},oU=eD(np,(e=>Math.sinh(e))),lU={kernelName:np,backendName:"cpu",kernelFunc:oU},uU=Math.log(1.1920928955078125e-7)+2,dU=eD(sp,(e=>{let t,n=e>-uU,r=e<uU,a=Math.exp(e);return t=r?a:n?e:Math.log(1+a),t})),cU={kernelName:sp,backendName:"cpu",kernelFunc:dU},pU={kernelName:lp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Cz([a],"spaceToBatchND");let o=Jp.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=OB.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=$v.getReshaped(u.shape,s,o,!1),c=$v.getPermuted(d.length,s.length,!1),p=$v.getReshapedPermuted(u.shape,s,o,!1),h=ZP({inputs:{x:u},backend:n,attrs:{shape:d}}),f=QD({inputs:{x:h},backend:n,attrs:{perm:c}}),m=ZP({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}},hU={kernelName:cp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values[0],[c,p,h,f,m]=hP(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,c),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},fU={kernelName:pp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,d,c]=fP(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}},mU={kernelName:hp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=mP(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}},gU={kernelName:fp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,d]=mP(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}},yU={kernelName:mp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:c,outputSize:p}=$v.calculateShapes(s,a,o),h=ZB(n.bufferSync(a),n.bufferSync(s),o,p,d,u,l,c,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,h.dtype,h.values)}},AU={kernelName:up,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Jp.parseAxisParam(i,a.shape)[0],l=$v.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let r=cP({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},bU={kernelName:yp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;Cz(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){let t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},xU=eD($p,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),wU={kernelName:$p,backendName:"cpu",kernelFunc:xU},vU={kernelName:Ap,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:c,shrinkAxisMask:p}=r;Cz(a,"stridedSlice");let h,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:w}=Qm.sliceInfo(a.shape,s,i,o,l,u,d,c,p);if(g)h=ZP({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||A){Jp.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));let e=Qm.computeOutShape(b,x,w),t=cP({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});h=ZP({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=vP(f,n.bufferSync(a),w,b);h=n.makeTensorInfo(m,e.dtype,e.values)}return h}},kU={kernelName:bp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:c}=t,p=n.data.get(d.dataId).values,h=n.data.get(c.dataId).values,[f,m]=IP(p,h,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}},IU={kernelName:xp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,d,c]=NP(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(c))]}},SU={kernelName:wp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=TP(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},NU=eD(kp,(e=>Math.tan(e))),TU={kernelName:kp,backendName:"cpu",kernelFunc:NU},CU=eD(Ip,(e=>Math.tanh(e))),EU={kernelName:Sp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Cz(a,"tile");let i=MP(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},_U={kernelName:Np,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Cz(a,"topk");let o=n.data.get(a.dataId).values,[l,u]=OP(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},RU={kernelName:Tp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[d,c,p,h]=a.shape,[f,m]=null!=u?u:[c,p],g=[d,f,m,h],y=Jp.computeStrides(a.shape),A=y[0],b=y[1],x=y[2],w=Jp.getTypedArrayFromDType(a.dtype,Jp.sizeFromShape(g));w.fill(l);let v=r.data.get(a.dataId).values,k=r.data.get(s.dataId).values;for(let e=0;e<d;++e){let t=1===s.shape[0]?k:k.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<h;++a){let s,u=t[6]*r+t[7]*n+1;if(0===u)continue;let d=(t[0]*r+t[1]*n+t[2])/u,h=(t[3]*r+t[4]*n+t[5])/u,f=MU(d,p,o),m=MU(h,c,o);switch(i){case"nearest":s=FU(v,c,p,A,b,x,e,m,f,a,l);break;case"bilinear":s=OU(v,c,p,A,b,x,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*A+n*b+r*x+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function MU(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Jp.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return Jp.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Jp.clamp(0,e,t-1)}(e,t);default:return e}}function $U(e,t,n,r,a,s,i,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:d}function FU(e,t,n,r,a,s,i,o,l,u,d){return $U(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,d)}function OU(e,t,n,r,a,s,i,o,l,u,d){let c=Math.floor(o),p=Math.floor(l),h=c+1,f=p+1;return(h-o)*((f-l)*$U(e,t,n,r,a,s,i,c,p,u,d)+(l-p)*$U(e,t,n,r,a,s,i,c,f,u,d))+(o-c)*((f-l)*$U(e,t,n,r,a,s,i,h,p,u,d)+(l-p)*$U(e,t,n,r,a,s,i,h,f,u,d))}var zU={kernelName:Ep,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Cz(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=zP(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},DU={kernelName:_p,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let d=new Array(i).fill(0),c=a.shape.slice();c[s]=1;let p=new Array(o);for(let e=0;e<p.length;e++){d[s]=e;let t=cP({inputs:{x:a},backend:n,attrs:{begin:d,size:c}});p[e]=ZP({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},PU={kernelName:Rp,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Cz(a,"unsortedSegmentSum");let o=[],l=[],u=a.shape.length-s.shape.length,d=s;for(let e=0;e<u;++e){let t=wW({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,l.push(t)}for(let e=0;e<i;++e){let t=Jp.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=oD({inputs:{a:r,b:d},backend:n}),i=Vz({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=jD({inputs:{a:i,b:a},backend:n}),c=uW({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(c),l.push(r),l.push(s),l.push(i),l.push(u),l.push(c)}let c=$B({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},LU=[eL,Fz,nL,aL,Zz,sL,iL,oL,lL,uL,cL,hL,mL,AL,xL,IL,SL,NL,TL,QP,CL,EL,_L,RL,Gz,aD,$L,Dz,FL,PL,WL,BL,UL,VL,GL,jL,qL,XL,ZL,YL,JL,QL,eW,nW,rW,aW,sW,iW,oW,lW,cW,LP,pW,lD,xW,cD,vW,fD,EW,RW,MW,yD,OW,zW,DW,PW,LW,vD,SD,Wz,WW,zL,UW,GW,HW,BP,CD,RD,qW,OD,XW,JW,eB,rB,aB,sB,oB,LD,lB,uB,dB,cB,pB,hB,fB,UD,mB,AB,vB,HD,KD,IB,NB,CB,YD,EB,MB,FB,OB,PB,GP,nP,LB,Uz,SW,BB,HP,KP,YP,UB,VB,GB,jB,HB,qB,XB,iP,YB,JB,nU,uP,aU,iU,lU,pP,wB,cU,pU,hU,fU,mU,gU,yU,AU,AP,bU,wP,wU,vU,kU,IU,SU,RP,dW,TU,{kernelName:Ip,backendName:"cpu",kernelFunc:CU},EU,_U,RU,eP,zU,DU,PU,RB];for(let e of LU)Hp(e);var WU={};il(WU,{assertNotComplex:()=>HV,bindCanvasToFramebuffer:()=>vV,bindColorTextureToFramebuffer:()=>kV,bindTextureToProgramUniformSampler:()=>wV,bindTextureUnit:()=>yV,bindVertexBufferToProgramAttribute:()=>gV,callAndCheck:()=>XU,canBeRepresented:()=>JU,createFragmentShader:()=>nV,createFramebuffer:()=>mV,createProgram:()=>oV,createStaticIndexBuffer:()=>cV,createStaticVertexBuffer:()=>dV,createTexture:()=>hV,createVertexShader:()=>tV,getBatchDim:()=>EV,getExtensionOrThrow:()=>eV,getFramebufferErrorMessage:()=>NV,getMaxTexturesInShader:()=>PV,getNumChannels:()=>pV,getProgramUniformLocation:()=>xV,getProgramUniformLocationOrThrow:()=>bV,getRowsCols:()=>_V,getShapeAs3D:()=>RV,getTextureShapeFromLogicalShape:()=>MV,getWebGLDisjointQueryTimerVersion:()=>LV,getWebGLErrorMessage:()=>QU,getWebGLMaxTextureSize:()=>OV,hasExtension:()=>WV,isCapableOfRenderingToFloatTexture:()=>UV,isDownloadFloatTextureEnabled:()=>VV,isReshapeFree:()=>FV,isWebGLFenceEnabled:()=>jV,isWebGLVersionEnabled:()=>BV,linkProgram:()=>lV,logShaderSourceAndInfoLog:()=>iV,resetMaxTextureSize:()=>zV,resetMaxTexturesInShader:()=>DV,unbindColorTextureFromFramebuffer:()=>IV,unbindTextureUnit:()=>AV,validateFramebuffer:()=>SV,validateProgram:()=>uV,validateTextureSize:()=>fV});var BU={},UU={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function VU(e,t){BU[e]=t}function GU(e,t){if(!(e in BU)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete BU[e]}),!1),1===e?n.getContext("webgl",UU)||n.getContext("experimental-webgl",UU):n.getContext("webgl2",UU)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;BU[e]=n}let n=BU[e];return null==n||n.isContextLost()?(delete BU[e],GU(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),BU[e])}function jU(e,t){return[t,e]}function HU(e){let t=Jp.sizeFromShape(e),n=Math.ceil(t/4);return Jp.sizeToSquarishShape(n)}function qU(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function KU(e,t){let n,r,a,s,i,o,l,u,d,c,p=e;return 2===Cu().getNumber("WEBGL_VERSION")?(n=p.R32F,r=p.R16F,a=p.RGBA16F,s=p.RGBA32F,i=p.RED,l=4,u=1,d=p.HALF_FLOAT,c=p.FLOAT,o=p.RGBA8):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=p.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,c=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:c}}function XU(e,t){let n=t();return Cu().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+QU(e,t))}(e),n}var ZU=5.96e-8,YU=65504;function JU(e){return!!(Cu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||ZU<Math.abs(e)&&Math.abs(e)<YU)}function QU(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function eV(e,t){return TV(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function tV(e,t){let n=TV(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(XU(e,(()=>e.shaderSource(n,t))),XU(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function nV(e,t){let n=TV(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(XU(e,(()=>e.shaderSource(n,t))),XU(e,(()=>e.compileShader(n))),Cu().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw iV(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var rV,aV,sV=/ERROR: [0-9]+:([0-9]+):/g;function iV(e,t){let n=sV.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>Jp.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,r-1),u=i.slice(r-1,r),d=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Jp.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function oV(e){return TV(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function lV(e,t){if(XU(e,(()=>e.linkProgram(t))),!Cu().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function uV(e,t){if(XU(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function dV(e,t){let n=TV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return XU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),XU(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function cV(e,t){let n=TV(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return XU(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),XU(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function pV(){return 2===Cu().getNumber("WEBGL_VERSION")?1:4}function hV(e){return TV(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function fV(e,t){let n=Cu().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function mV(e){return TV(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function gV(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(XU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),XU(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),XU(e,(()=>e.enableVertexAttribArray(o))),!0)}function yV(e,t,n){CV(e,n),XU(e,(()=>e.activeTexture(e.TEXTURE0+n))),XU(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function AV(e,t){CV(e,t),XU(e,(()=>e.activeTexture(e.TEXTURE0+t))),XU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function bV(e,t,n){return TV(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function xV(e,t,n){return e.getUniformLocation(t,n)}function wV(e,t,n,r){XU(e,(()=>yV(e,t,r))),XU(e,(()=>e.uniform1i(n,r)))}function vV(e){XU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),XU(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),XU(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function kV(e,t,n){XU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),XU(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function IV(e,t){XU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),XU(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function SV(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+NV(e,t))}function NV(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function TV(e,t,n){let r=XU(e,(()=>t()));if(null==r)throw new Error(n);return r}function CV(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function EV(e,t=2){return Jp.sizeFromShape(e.slice(0,e.length-t))}function _V(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function RV(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[EV(e),..._V(e)]),t}function MV(e,t=!1){let n=Cu().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Jp.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=Jp.squeezeShape(e).newShape);let r=Jp.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let t=EV(e),n=2,a=2;return e.length&&([n,a]=_V(e)),r=t*(n/2)*(a/2),Jp.sizeToSquarishShape(r).map((e=>2*e))}return Jp.sizeToSquarishShape(r)}function $V(e){return e%2==0}function FV(e,t){if(e=e.slice(-2),t=t.slice(-2),Jp.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r||$V(n)&&$V(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&$V(e[0])&&$V(t[0])}function OV(e){if(null==rV){let t=GU(e);rV=t.getParameter(t.MAX_TEXTURE_SIZE)}return rV}function zV(){rV=null}function DV(){aV=null}function PV(e){if(null==aV){let t=GU(e);aV=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,aV)}function LV(e){if(0===e)return 0;let t,n=GU(e);return t=WV(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:WV(n,"EXT_disjoint_timer_query")?1:0,t}function WV(e,t){return null!=e.getExtension(t)}function BV(e){try{if(null!=GU(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function UV(e){if(0===e)return!1;let t=GU(e);if(1===e){if(!WV(t,"OES_texture_float"))return!1}else if(!WV(t,"EXT_color_buffer_float"))return!1;return GV(t)}function VV(e){if(0===e)return!1;let t=GU(e);if(1!==e){if(WV(t,"EXT_color_buffer_float"))return GV(t);let e="EXT_color_buffer_half_float";if(WV(t,e)){let n=t.getExtension(e);return function(e,t){let n=KU(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!(!WV(t,"OES_texture_float")||!WV(t,"WEBGL_color_buffer_float"))&&GV(t)}function GV(e){let t=KU(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function jV(e){return 2===e&&null!=GU(e).fenceSync}function HV(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Jp.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var qV=Cu();function KV(){let e,t,n,r,a,s,i,o,l,u;return 2===Cu().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function XV(e,t,n="index"){let r=Jp.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function ZV(e,t,n="index"){let r=Jp.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function YV(e){let t=Jp.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}qV.registerFlag("HAS_WEBGL",(()=>qV.getNumber("WEBGL_VERSION")>0)),qV.registerFlag("WEBGL_VERSION",(()=>BV(2)?2:BV(1)?1:0)),qV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),qV.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===qV.get("WEBGL_VERSION"))),qV.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),qV.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),qV.registerFlag("WEBGL_PACK",(()=>qV.getBool("HAS_WEBGL"))),qV.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_CLIP",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_PACK_REDUCE",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_LAZILY_UNPACK",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_CONV_IM2COL",(()=>qV.getBool("WEBGL_PACK"))),qV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>OV(qV.getNumber("WEBGL_VERSION")))),qV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>PV(qV.getNumber("WEBGL_VERSION")))),qV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=qV.getNumber("WEBGL_VERSION");return 0===e?0:LV(e)})),qV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>qV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!tf.isMobile())),qV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>UV(qV.getNumber("WEBGL_VERSION")))),qV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!qV.getBool("WEBGL_FORCE_F16_TEXTURES")&&qV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),qV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>VV(qV.getNumber("WEBGL_VERSION")))),qV.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>jV(qV.getNumber("WEBGL_VERSION")))),qV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>qV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),qV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),qV.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>tf.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),qV.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),qV.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),qV.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),qV.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var JV="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:QV}=$v;function eG(e,t,n){let r=[];if(e.forEach((e=>{let t=Jp.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=dG(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let a,s,i=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?nG(e,r):tG(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){let n,r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),s="get"+a+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=QV(e.shapeInfo.logicalShape,t.logicalShape),u=uG(o),d=o-i,c=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", ");let h="return outputValue;",f=1===Jp.sizeFromShape(e.shapeInfo.logicalShape),m=1===Jp.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)h=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?h="return vec4(outputValue.x);":l.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${a}(${p});\n      ${h}\n    }\n  `}(e,t):function(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Jp.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=uG(l),c=QV(e.shapeInfo.logicalShape,t.logicalShape),p=l-o,h=["x","y","z","w","u","v"];u=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=KV(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),c=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${rG}\n    ${aG}\n    ${sG}\n  `}(u);return t.isPacked?(a=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Jp.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;let a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(a=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return Jp.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ZV(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let r=XV(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ZV(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let r=XV(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=XV(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=XV(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),s=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(c+=iG),[c,d,s,i,a,o,n.userCode].join("\n")}function tG(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=oG(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${lG(e)}\n      }\n    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=oG(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Jp.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;let e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=Jp.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${tG(cG(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${pG(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${lG(e)}\n      }\n    `;let u=s[0],d=s[1],c=oG(r);return 1===d?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${c};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Jp.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${tG(cG(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${pG(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${lG(e)}\n      }\n    `;let d=e.shapeInfo.texShape,c=d[0],p=d[1],h=e.shapeInfo.flatOffset;if(p===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${c}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;let f=oG(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${c}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=Jp.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${tG(cG(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${pG(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${lG(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,p=c[0],h=c[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===o&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(h===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;let y=oG(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=Jp.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${tG(cG(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${pG(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${lG(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,p=c[0],h=c[1];return h===o&&null==d?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:h===a&&null==d?`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${oG(n)};\n      vec2 uv = uvFromFlat(${p}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=Jp.squeezeShape(t);if(a.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${tG(cG(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${pG(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${lG(e)}\n      }\n    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];return f===d&&null==c?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==c?`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${oG(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function nG(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${KV().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=KV();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=KV();if(null!=s&&Jp.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let r=[1,2],s=["b","row","col"];return`\n        ${nG(cG(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${pG(s,r)});\n        }\n      `}let o=KV();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;let l=i[0],u=i[1],d=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d*Math.ceil(n[1]/2)}, ${d}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=KV();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],c=Math.ceil(s[i-1]/2),p=c*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${c} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var rG="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aG="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sG="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iG="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function oG(e){return`offset${e}`}function lG(e){let t=e.name,n=Jp.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function uG(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function dG(e,t,n){let{newShape:r,keptDims:a}=Jp.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!Jp.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function cG(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function pG(e,t){return t.map((t=>e[t])).join(", ")}function hG(e,t,n){let r,a,s,i={},o={},l={},u=[],d=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===Cu().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(n,"INFINITY",!1));let p=!1;for(let r=0;r<t.variableNames.length;r++){let a=t.variableNames[r];i[a]=e.getUniformLocation(n,a,p),i[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,p),t.enableShapeUniforms&&(o[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,p),l[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,p))}return t.enableShapeUniforms&&(r=e.getUniformLocation(n,"outShape",p),s=e.getUniformLocation(n,"outShapeStrides",p),a=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{u[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:i,customUniformLocations:u,infLoc:d,nanLoc:c,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:r,outShapeStridesLocation:s,outTexShapeLocation:a}}function fG(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let r=e.logicalShape,a=t[n],s=a.shape;if(!Jp.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!Jp.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function mG(e){return Cu().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var gG=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=KV();this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZV(["r","c","d"],e):XV(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},yG=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=KV();this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZV(["r","c","d"],e):XV(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},AG=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=KV();this.outputShape=e,this.userCode=`\n      ${JV}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},bG=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=KV();this.outputShape=e,this.userCode=`\n      ${JV}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},xG=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=KV();this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YV(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},wG=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=KV();this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YV(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}},vG={};function kG(e){let t=KV();return tV(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function IG(e){return dV(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function SG(e){return cV(e,new Uint16Array([0,1,2,2,1,3]))}function NG(e,t,n,r,a,s){fV(t,n);let i=hV(e),o=e.TEXTURE_2D;return XU(e,(()=>e.bindTexture(o,i))),XU(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),XU(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),XU(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),XU(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Cu().getNumber("WEBGL_VERSION")?XU(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):XU(e,(()=>e.texStorage2D(o,1,r,t,n))),XU(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function TG(e){return e.internalFormatFloat}function CG(e,t,n,r){let[a,s]=jU(t,n);return NG(e,a,s,TG(r),r.textureFormatFloat,e.FLOAT)}function EG(e){return e.internalFormatHalfFloat}function _G(e,t,n,r){let[a,s]=jU(t,n);return NG(e,a,s,EG(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function RG(e){return e.downloadTextureFormat}function MG(e,t,n,r){let[a,s]=jU(t,n);return NG(e,a,s,RG(r),e.RGBA,e.UNSIGNED_BYTE)}function $G(e){return e.internalFormatPackedFloat}function FG(e,t,n,r){let[a,s]=qU(t,n);return NG(e,a,s,$G(r),e.RGBA,e.FLOAT)}function OG(e){return e.internalFormatPackedHalfFloat}function zG(e,t,n,r){let[a,s]=qU(t,n);return NG(e,a,s,OG(r),e.RGBA,r.textureTypeHalfFloat)}function DG(e,t,n){return XU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),gV(e,t,"clipSpacePos",n,3,20,0)&&gV(e,t,"uv",n,2,20,12)}function PG(e,t,n,r,a,s){let i,o,l;XU(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===Cu().getNumber("WEBGL_VERSION")?XU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):XU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),XU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function LG(e,t,n){XU(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Cu().getNumber("WEBGL_VERSION")?XU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):XU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Cu().getNumber("WEBGL_VERSION")?XU(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):XU(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),XU(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function WG(e,t,n,r){let a=e.createBuffer();XU(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));let s=16*t*n;return XU(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),XU(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),XU(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function BG(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function UG(e,t,n,r){let[a,s]=jU(t,n),i=new Uint8Array(function(e){return 4*e}(t*n));return XU(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function VG(e,t,n,r,a,s,i,o){let l=e,u=new Float32Array(function(e,t){let[n,r]=qU(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function GG(e,t,n){let r=new Float32Array(t*n*4);return XU(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}il(vG,{bindVertexProgramAttributeStreams:()=>DG,createBufferFromOutputTexture:()=>WG,createFloat16MatrixTexture:()=>_G,createFloat16PackedMatrixTexture:()=>zG,createFloat32MatrixTexture:()=>CG,createIndexBuffer:()=>SG,createPackedMatrixTexture:()=>FG,createUnsignedBytesMatrixTexture:()=>MG,createVertexBuffer:()=>IG,createVertexShader:()=>kG,downloadByteEncodedFloatMatrixFromOutputTexture:()=>UG,downloadFloat32MatrixFromBuffer:()=>BG,downloadMatrixFromPackedOutputTexture:()=>GG,downloadPackedMatrixFromBuffer:()=>VG,getInternalFormatForFloat16MatrixTexture:()=>EG,getInternalFormatForFloat16PackedMatrixTexture:()=>OG,getInternalFormatForFloat32MatrixTexture:()=>TG,getInternalFormatForPackedMatrixTexture:()=>$G,getInternalFormatForUnsignedBytesMatrixTexture:()=>RG,uploadDenseMatrixToTexture:()=>PG,uploadPixelDataToTexture:()=>LG});var jG=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=Cu().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,VU(t,e)):this.gl=GU(t);let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Cu().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=eV(this.gl,e),WV(this.gl,t))this.textureHalfFloatExtension=eV(this.gl,t);else if(Cu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),WV(this.gl,r))this.colorBufferHalfFloatExtension=eV(this.gl,r);else if(Cu().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",WV(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!WV(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=IG(this.gl),this.indexBuffer=SG(this.gl),this.framebuffer=mV(this.gl),this.textureConfig=KU(this.gl,this.textureHalfFloatExtension)}get debug(){return Cu().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;XU(e,(()=>e.finish())),XU(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),XU(e,(()=>e.deleteFramebuffer(this.framebuffer))),XU(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),XU(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),XU(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),CG(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),_G(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),MG(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),LG(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),PG(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),zG(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),FG(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(IV(this.gl,this.framebuffer),this.outputTexture=null),XU(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>UG(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return VG(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return BG(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=WG(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Cu().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>GG(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=kG(t));let n=oV(t);return XU(t,(()=>t.attachShader(n,this.vertexShader))),XU(t,(()=>t.attachShader(n,e))),lV(t,n),this.debug&&uV(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=DG(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&XU(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&uV(this.gl,this.program),XU(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?bV(this.gl,e,t):xV(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),XU(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),wV(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=qU(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&uV(this.gl,this.program),SV(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),XU(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),XU(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=eV(this.gl,2===Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Jp.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&Jp.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kV(this.gl,e,this.framebuffer),this.debug&&SV(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(kV(this.gl,this.outputTexture,this.framebuffer),this.debug&&SV(this.gl)):IV(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;kV(r,e,this.framebuffer),this.debug&&SV(r),this.outputTexture=e,XU(r,(()=>r.viewport(0,0,t,n))),XU(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),XU(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}},{addImpl:HG,bincountImpl:qG,bincountReduceImpl:KG,ceilImpl:XG,concatImpl:ZG,equalImpl:YG,expImpl:JG,expm1Impl:QG,floorImpl:ej,gatherNdImpl:tj,gatherV2Impl:nj,greaterImpl:rj,greaterEqualImpl:aj,lessImpl:sj,lessEqualImpl:ij,linSpaceImpl:oj,logImpl:lj,maxImpl:uj,maximumImpl:dj,minimumImpl:cj,multiplyImpl:pj,negImpl:hj,notEqualImpl:fj,prodImpl:mj,rangeImpl:gj,rsqrtImpl:yj,sigmoidImpl:Aj,simpleAbsImpl:bj,sliceImpl:xj,sparseFillEmptyRowsImpl:wj,sparseReshapeImpl:vj,sparseSegmentReductionImpl:kj,sqrtImpl:Ij,stridedSliceImpl:Sj,stringNGramsImpl:Nj,stringSplitImpl:Tj,stringToHashBucketFastImpl:Cj,subImpl:Ej,tileImpl:_j,topKImpl:Rj,transposeImpl:Mj,uniqueImpl:$j}=Mz;function Fj(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Oj(e,t){return 1===t?[e]:Fj(e,t)}var zj=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=mG(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=Oj("rc",this.rank),t=uG(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},Dj=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?function(e,t,n="index"){let r=function(e,t){let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):XV(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YV(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}},Pj=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let r=Wj(t,n),a=Bj(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s,i=Lj(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}return 3===r?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):4===r?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):1===r?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):0===r?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):2===r&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;let a=Wj(n,r),s=Bj(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Lj(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Cu().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function Lj(e,t,n,r,a){let s,i=function(e,t){switch(e){case 3:return $G(t);case 4:return OG(t);case 1:return TG(t);case 0:return EG(t);case 2:return RG(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);if(a){let[t,n]=qU(e[0],e[1]);s=t*n}else{let[t,n]=jU(e[0],e[1]);s=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,i);return s*o}function Wj(e,t){if(1===e)return 3;if(0===e||null==e)return function(e){return Cu().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}(t);if(3===e||2===e)return 2;throw new Error(`Unknown logical texture type ${e}`)}function Bj(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Uj=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},Vj="if (isnan(x)) return x;",Gj="return abs(x);",jj=Vj+"\n  return (x < 0.0) ? 0.0 : x;\n",Hj=Vj+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",qj="return x;",Kj=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},Xj=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length);let t=e.length,n=Oj("rc",t),r=uG(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},Zj=Ok.whereImpl,Yj={},Jj=Cu().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Qj=class extends El{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Cu().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof jG)t=e;else{let n=GU(Cu().getNumber("WEBGL_VERSION"),e);t=new jG(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=GU(Cu().getNumber("WEBGL_VERSION"));t=new jG(e),this.binaryCache=function(e){return e in Yj||(Yj[e]={}),Yj[e]}(Cu().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Pj(this.gpgpu),this.numMBBeforeWarning=null==Cu().global.screen?1024:Cu().global.screen.height*Cu().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Cl(this,Ug())}nextDataId(){return Qj.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Cu().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Cu().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:1,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Cu().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:1,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new Kj(i,qj):new Uj(i,qj);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=Jp.now()),"complex64"===r){let e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);u=$v.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=Jp.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new Kj(r,qj):new Uj(r,qj);let n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(Cu().getBool("DEBUG")&&!Cu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Cu().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==s&&Cu().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...HU(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=$v.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=Jp.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;XU(e,(()=>e.deleteBuffer(d)))}let c=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(c))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ug().removeDataId(e,this),this.pendingDeletes--),c}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new Kj(a,qj):new Uj(a,qj);let r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape);return{tensorRef:Ug().makeTensorFromDataId(u.dataId,u.shape,u.dtype),...this.texData.get(u.dataId).texture}}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>Jp.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return lm(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!JU(n))throw Cu().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=Jp.sizeFromShape(t);if(Cu().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...HU(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}let s=Cu().getBool("WEBGL_PACK")&&!0===r,i=s?RV(t):t,o=s?new bG(i):new AG(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=Jp.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Jp.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=Jp.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Jp.now(),endMs:null}}endTimer(e){return Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Jp.now(),e)}async getQueryTime(e){if(Cu().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Jj){return Cu().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Jp.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){$v.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Zj(e.shape,t)}packedUnaryOp(e,t,n){let r=new Kj(e.shape,t),a=this.compileAndRun(r,[e],n);return Ug().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=bj(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Cu().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Gj,e.dtype);let t=new Uj(e.shape,Gj),n=this.compileAndRun(t,[e]);return Ug().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Jp.isString(n[0])){let a=n.map((e=>Jp.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){let{dataId:r}=this.makeTensorInfo(e,t,n);return Ug().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){let t=new Xj(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new zj(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[EV(e.shape),..._V(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[EV(t),..._V(t)],s=new Dj(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(null!=t){let e=Jp.sizeFromShape(a),n=t[0]*t[1]*4;Jp.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=RV(a);i=r?new yG(o):new gG(o);let l=[null!=t?t:HU(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),0===e.outPackingScheme){let t=null!=s?s:HU(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Jp.sizeFromShape(i.shape))return o.values=Jp.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Jp.sizeFromShape(t.shape)<=Cu().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!FV(n.shape,t.shape)){let e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let d,c={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=dG(e.packedInputs,t.shape,s),u="",d="",c="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=Jp.computeStrides(o);c=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let p=t.shape.length,h=2===o.length&&Jp.arraysEqual(t.shape,s),f=1===Jp.sizeFromShape(t.shape),m=$v.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&Jp.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${h}_${u}_${d}_${c}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${Cu().getNumber("WEBGL_VERSION")}`,s}(e,u,c),h=this.getAndSaveBinary(p,(()=>function(e,t,n,r){let a=n.map(((e,n)=>{let r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=eG(a,i,t),l=nV(e.gl,o),u=e.createProgram(l);return Cu().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,...hG(e,t,u)}}(this.gpgpu,e,u,c))),f=null!=this.activeTimers;f&&(d=this.startTimer()),Cu().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(fG(t.inShapeInfos,n),fG([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===Cu().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{let a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){let{uniformShape:r}=dG(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(Jp.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}}));let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){let n=Jp.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{let s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Cu().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=Jp.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Cu().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Cu().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=jg((()=>{if(!Cu().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Cu().getBool("DEBUG");Cu().set("DEBUG",!1);let t=this.abs(yx(1e-8)).dataSync()[0];if(Cu().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=Jp.now());let d=t.texShape;if(null==d&&(d=MV(n,o),t.texShape=d),null!=a){let e,s=RV(n),i=d[1],c=d[0],p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!p)&&([i,c]=qU(d[0],d[1])),e=o?new wG(s,p):new xG(s,p);let h=p?[c,i]:d,f=this.makeTensorInfo(h,r),m=this.texData.get(f.dataId);m.usage=p?2:1,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,c,a);let g=[[c,i]],y=!0,A=this.runWebGLProgram(e,[f],r,g,y),b=this.texData.get(A.dataId);t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,Cu().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=b.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Jp.now()-l)}else{let e=this.acquireTexture(d,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Jp.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Mv(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(iV(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=hG(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}},eH=Qj;eH.nextDataId=0;var tH="0.0.0";function nH(){Cu().set("WEBGL_FORCE_F16_TEXTURES",!0)}tf.isBrowser()&&ty("webgl",(()=>new eH),2);var rH={forceHalfFloat:nH},aH="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",sH=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=$v.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=mG(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},iH="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n",oH=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$v.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=mG(a);let s="";if(r)if(0===a||1===Jp.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${uG(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=Oj("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function lH(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var uH={kernelName:qd,backendName:"webgl",kernelFunc:lH};function dH(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=lH({inputs:{x:r},backend:n}),l=lH({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var cH={kernelName:sd,backendName:"webgl",kernelFunc:dH},pH="return (a < 0.) ? b * a : a;",hH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",fH={kernelName:Qd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Jp.createScalarValue(s,"float32")),o=Cu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oH(hH,a.shape,i.shape):new sH(pH,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},mH="return (a < 0.) ? b * a : a;",gH="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",yH={kernelName:zc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Cu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oH(gH,r.shape,a.shape):new sH(mH,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},AH="if (isnan(x)) return x;";function bH({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let i,{x:o}=a,l=s,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=Cu().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Kj(o.shape,t):new Uj(o.shape,e),l.runWebGLProgram(i,[o],u)}}function xH({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,d=o;if(r&&"complex64"===l.dtype){let t=d.texData.get(l.dataId),n=d.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new sH(e,l.shape,u.shape);return d.runWebGLProgram(i,[a,s],Wh(n.dtype,r.dtype))})),s=dH({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),s}let c,p=s||Wh(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||d.shouldExecuteOnCPU([l,u]))&&null!=a){let e=d.texData.get(l.dataId).values,t=d.texData.get(u.dataId).values,n="string"===l.dtype?$v.fromUint8ToStringArray(e):e,r="string"===l.dtype?$v.fromUint8ToStringArray(t):t,[s,i]=a(l.shape,u.shape,n,r,p),o=d.makeTensorInfo(i,p);return d.texData.get(o.dataId).values=s,o}return c=Cu().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new oH(t,l.shape,u.shape,n):new sH(e,l.shape,u.shape),d.runWebGLProgram(c,[l,u],p)}}function wH(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":jj;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Hj;if("prelu"===e)return t?gH:mH;if("leakyrelu"===e)return t?hH:pH;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var vH=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=mG(this.outputShape.length);let u=r?e[1]:e[2],d=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",b="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${d}; i++) {\n          int batchA = ${A};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},kH=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$v.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},IH="return a * b;";function SH(e){let t,{inputs:n,backend:r}=e,{a,b:s}=n,i=$v.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),n=new kH("return areal * breal - aimag * bimag;",a.shape,s.shape),i=new kH("return areal * bimag + aimag * breal;",a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=r.runWebGLProgram(n,o,"float32"),u=r.runWebGLProgram(i,o,"float32"),d=dH({inputs:{real:l,imag:u},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),d}if(r.shouldExecuteOnCPU([a,s])){let e=r.texData.get(a.dataId),t=r.texData.get(s.dataId),[n,o]=pj(a.shape,s.shape,e.values,t.values,i),l=r.makeTensorInfo(o,i);return r.texData.get(l.dataId).values=n,l}return t=Cu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oH(IH,a.shape,s.shape):new sH(IH,a.shape,s.shape),r.runWebGLProgram(t,[a,s],i)}var NH={kernelName:Ic,backendName:"webgl",kernelFunc:SH};function TH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=Jp.sizeFromShape(a.shape),l=Jp.inferFromImplicitShape(s,o),u=Jp.sizeFromShape(l);Jp.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let d=i.texData.get(a.dataId);return!d.isPacked||FV(a.shape,l)||null!==d.texture&&FV(d.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){let r=[EV(e.shape),..._V(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[EV(t),..._V(t)],i=new Dj(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}var CH={kernelName:Uc,backendName:"webgl",kernelFunc:TH},EH=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${Jp.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},_H=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,c=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",c="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",c="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${2===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${c}\n        } else if (${3===d}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${c}\n        }\n        setOutput(${l});\n      }\n    `}};function RH(e,t,n,r){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],r=$v.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l,{inSize:u,windowSize:d,outSize:c}=a[i];o="mean"===n?0===i?new EH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:c},u):new EH({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:c}):new _H({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:c},n),l=s,s=r.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(l)}return s}var MH=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;let r=uG(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}},$H=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=uG(this.rank),a=Fj("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function FH(e,t,n){let r=Cu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $H(e.shape,t):new MH(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function OH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){let a=t,s=e.shape.length,i=Jp.parseAxisParam(a,e.shape),o=i,l=$v.getAxesPermutation(o,s),u=null!=l,d=e;u&&(d=FH(e,l,r),o=$v.getInnerMostAxes(o.length,s)),$v.assertAxesAreInnerMostDims("sum",o,s);let[c,p]=$v.computeOutAndReduceShapes(d.shape,o),h=c;n&&(h=$v.expandShapeToKeepDim(c,i));let f=Jp.sizeFromShape(p),m=TH({inputs:{x:d},attrs:{shape:[Jp.sizeFromShape(e.shape)/f,f]},backend:r}),g=RH(m,Bh(e.dtype),"sum",r),y=TH({inputs:{x:g},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(d),y}(a,s,i,n)}var zH={kernelName:op,backendName:"webgl",kernelFunc:OH};function DH(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{perm:i}=a,o=r,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=Mj(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=FH(s,i,o);return t}var PH={kernelName:Cp,backendName:"webgl",kernelFunc:DH};function LH({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,c=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[d-1]:t.shape[d-2],h=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Jp.sizeFromShape(m),A=Jp.sizeFromShape(g),b=zm.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);Jp.assert(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let x,w=n?[y,c,h]:[y,h,c],v=r?[A,f,p]:[A,p,f],k=TH({inputs:{x:e},backend:a,attrs:{shape:w}}),I=TH({inputs:{x:t},backend:a,attrs:{shape:v}}),S=[k,I],N=Math.max(y,A),T=n?k.shape[1]:k.shape[2],C=null!=s,E=null!=i,_="leakyrelu"===l,R=null!=l?wH(l,!0):null;if((1===h||1===f)&&T>1e3&&!1===(C||E||_||null!=R)){let e=k,t=I;n&&(e=DH({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=DH({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));let s=1===f,i=e;1!==f&&(i=TH({inputs:{x:e},backend:a,attrs:{shape:[N,T,1]}}),S.push(i));let o=1===f?2:1,l=t;s&&(l=TH({inputs:{x:t},backend:a,attrs:{shape:[N,1,T]}}),S.push(l));let u=SH({inputs:{a:i,b:l},backend:a});x=OH({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{let l=Wh(e.dtype,t.dtype),u=new vH(w,v,[N,h,f],n,r,C,R,E,_),d=[k,I];if(null!=s&&d.push(s),E&&d.push(i),_){let e=a.makeTensorInfo([],"float32",Jp.createScalarValue(o,"float32"));d.push(e),S.push(e)}x=a.runWebGLProgram(u,d,l)}let M=TH({inputs:{x},backend:a,attrs:{shape:b}});S.push(x);for(let e of S)a.disposeIntermediateTensorInfo(e);return M}var WH={kernelName:zp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=r;return LH({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:c,activation:d})}},BH="return abs(x);",UH={kernelName:$u,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=r.texData.get(a.dataId),t=bj(e.values);return r.makeTensorInfo(a.shape,a.dtype,t)}return t=Cu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Kj(a.shape,BH):new Uj(a.shape,BH),r.runWebGLProgram(t,[a],a.dtype)}},VH=bH({opSnippet:Vj+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),GH={kernelName:Fu,backendName:"webgl",kernelFunc:VH},jH=bH({opSnippet:Vj+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),HH={kernelName:Ou,backendName:"webgl",kernelFunc:jH},qH="return a + b;",KH=xH({opSnippet:qH,packedOpSnippet:qH,supportsComplex:!0,cpuKernelImpl:HG}),XH={kernelName:zu,backendName:"webgl",kernelFunc:KH},ZH=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}},YH=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}},JH={kernelName:Du,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,a=n;if(1===a.length)return lH({inputs:{x:a[0]},backend:r});if(a.length>Cu().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}let s=a.map((e=>e.dtype)).reduce(((e,t)=>Wh(e,t))),i=a.map((e=>e.shape)),o=Cu().getBool("WEBGL_PACK")?new YH(a[0].shape,i):new ZH(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},QH={kernelName:Pu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Jp.parseAxisParam(s,a.shape),u=l,d=$v.getAxesPermutation(u,o),c=a;null!=d&&(c=DH({inputs:{x:a},backend:n,attrs:{perm:d}}),u=$v.getInnerMostAxes(u.length,o)),$v.assertAxesAreInnerMostDims("all",u,o);let p,[h,f]=$v.computeOutAndReduceShapes(c.shape,u),m=TH({inputs:{x:c},backend:n,attrs:{shape:[-1,Jp.sizeFromShape(f)]}}),g=RH(m,m.dtype,"all",n);return p=TH(i?{inputs:{x:g},backend:n,attrs:{shape:$v.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(c),p}},eq={kernelName:Lu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Jp.parseAxisParam(s,a.shape),u=l,d=$v.getAxesPermutation(u,o),c=a;null!=d&&(c=DH({inputs:{x:a},backend:n,attrs:{perm:d}}),u=$v.getInnerMostAxes(u.length,o)),$v.assertAxesAreInnerMostDims("any",u,o);let p,[h,f]=$v.computeOutAndReduceShapes(c.shape,u),m=TH({inputs:{x:c},backend:n,attrs:{shape:[-1,Jp.sizeFromShape(f)]}}),g=RH(m,m.dtype,"any",n);return p=TH(i?{inputs:{x:g},backend:n,attrs:{shape:$v.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(c),p}},tq=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},nq=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Jp.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,d=uG(u),c=Oj("coords",u);if(1===s){o=u+1;let e=uG(o);i=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else o=u,i=`\n        ${d} sourceLocR = coords;\n        ++${c[u-1]};\n        ${d} sourceLocG = coords;\n        ++${c[u-2]};\n        ${d} sourceLocA = coords;\n        --${c[u-1]};\n        ${d} sourceLocB = coords;\n        --${c[u-2]};`;let p=["x","y","z","w","u","v"].slice(0,o),h="."+p[o-1],f=p.map((e=>"int "+e)),m=Oj("sourceLocR",o-1).concat("inIdx.r"),g=Oj("sourceLocG",o-1).concat("inIdx.g"),y=Oj("sourceLocB",o-1).concat("inIdx.b"),A=Oj("sourceLocA",o-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",x=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${A.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,v=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${v}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${x}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function rq(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);let i=$v.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new tq(o,n,null==r),u=[t];null!=r&&u.push(r);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let c=rq(e,t,n,d);return e.disposeIntermediateTensorInfo(d),c}function aq(e,t,n,r=null){let a=null!=r?r.shape:t.shape,s=a[a.length-1],i=$v.computeOptimalWindowSize(s),o=new nq(a,i,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let r=aq(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function sq(e,t,n,r){let a=[n];if($v.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Cu().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=$v.computeOutAndReduceShapes(i.shape,a),u=Jp.sizeFromShape(l),d=TH({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(d);let c=rq(e,d,r);n.push(c);let p=TH({inputs:{x:c},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return aq(e,t,r)}var iq={kernelName:Wu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Jp.parseAxisParam(s,a.shape),o=$v.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=DH({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=$v.getInnerMostAxes(i.length,l.shape.length)),$v.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=sq(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},oq={kernelName:Bu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Jp.parseAxisParam(s,a.shape),o=$v.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=DH({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=$v.getInnerMostAxes(i.length,l.shape.length)),$v.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=sq(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},lq=bH({opSnippet:Vj+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),uq={kernelName:Uu,backendName:"webgl",kernelFunc:lq},dq=bH({opSnippet:Vj+"return log(x + sqrt(x * x + 1.0));"}),cq={kernelName:Vu,backendName:"webgl",kernelFunc:dq},pq=bH({opSnippet:Vj+"\n  return atan(x);\n"}),hq={kernelName:Gu,backendName:"webgl",kernelFunc:pq},fq=xH({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),mq={kernelName:Hu,backendName:"webgl",kernelFunc:fq},gq=bH({opSnippet:Vj+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),yq={kernelName:ju,backendName:"webgl",kernelFunc:gq},Aq=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${c};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${c} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(A="avgValue / count");let b=4*Math.floor(s/4),x=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${A});\n      }\n    `}},bq=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,c=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A="avg"===t,b="0.0";if(A||(b="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${c}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");let w=4*Math.floor(s/4),v=s%4,k=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${c};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${c}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${c}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${c}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}},xq={kernelName:qu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;HV(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Jp.assert($v.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=$v.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Jp.arraysEqual(u.inShape,u.outShape))return lH({inputs:{x:a},backend:n});let d=new Aq(u,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},wq={kernelName:Xu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=$v.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),c=new bq(d,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},vq=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,c=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},kq=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=d-1-e.padInfo.front,f=c-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},Iq={kernelName:Zu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,c=$v.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new kq(c);return n.runWebGLProgram(p,[a],i.dtype)}},Sq={kernelName:Ku,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;HV([a,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=r,d=$v.computePool2DInfo(i.shape,o,l,1,u),c=new vq(d);return n.runWebGLProgram(c,[a],i.dtype)}},Nq={kernelName:Yu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return LH({a,b:s,transposeA:i,transposeB:o,backend:n})}},Tq=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],$v.assertAndGetBroadcastShape(e,t),$v.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&($v.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&($v.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},Cq=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$v.assertAndGetBroadcastShape(e,t),$v.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&($v.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&($v.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},Eq={kernelName:Ud,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;Jp.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Jp.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Jp.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[r,a,s],d=null;null!=i&&(d=i.shape,u.push(i));let c=null;null!=o&&(c=o.shape,u.push(o));let p=Cu().getBool("WEBGL_PACK_NORMALIZATION")?new Cq(r.shape,a.shape,s.shape,d,c,l):new Tq(r.shape,a.shape,s.shape,d,c,l);return t.runWebGLProgram(p,u,u[0].dtype)}},_q=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=uG(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Rq.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Rq[t]} = start[${t}] + coords.${Rq[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${r}));\n      }\n    `}},Rq=["x","y","z","w","u","v"],Mq=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=uG(this.rank),n=Oj("coords",this.rank),r=Oj("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function $q(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Qm.parseSliceParams(a,s,i);if(Qm.assertParamsValid(a,o,l),0===Jp.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.texData.get(a.dataId),t=xj(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=n.texData.get(a.dataId),d=Qm.isSliceContinous(a.shape,o,l);if(u||!d){let e=Cu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mq(l):new _q(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Qm.computeFlatOffset(t,Jp.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}var Fq={kernelName:ep,backendName:"webgl",kernelFunc:$q},Oq={kernelName:Ju,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Jp.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=$v.getReshaped(a.shape,s,o),u=$v.getPermuted(l.length,s.length),d=$v.getReshapedPermuted(a.shape,s,o),c=$v.getSliceBeginCoords(i,s.length),p=$v.getSliceSize(d,i,s.length),h=[],f=TH({inputs:{x:a},backend:n,attrs:{shape:l}}),m=DH({inputs:{x:f},backend:n,attrs:{perm:u}}),g=TH({inputs:{x:m},backend:n,attrs:{shape:d}}),y=$q({inputs:{x:g},backend:n,attrs:{begin:c,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},zq={kernelName:Qu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=qG(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},Dq={kernelName:td,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=$v.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Pq=xH({opSnippet:"return float(a != b);",cpuKernelImpl:fj,dtype:"bool"}),Lq={kernelName:Nc,backendName:"webgl",kernelFunc:Pq};function Wq(e){let{inputs:t,backend:n}=e,{input:r}=t;return lH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}var Bq={kernelName:Lc,backendName:"webgl",kernelFunc:Wq},Uq={kernelName:nd,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return lH({inputs:{x:s},backend:r});let t=Tb(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=dH({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){let t=Wq({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Jp.hasEncodingLoss(s.dtype,i)){let e=lH({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new Uj(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",Jp.getTypedArrayFromDType("bool",1)),t=Pq({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},Vq="return ceil(x);",Gq=bH({opSnippet:Vq,packedOpSnippet:Vq,cpuKernelImpl:XG}),jq={kernelName:rd,backendName:"webgl",kernelFunc:Gq},Hq=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},qq=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}},Kq={kernelName:ad,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a;t=Cu().getBool("WEBGL_PACK_CLIP")?new qq(s.shape):new Hq(s.shape);let l=[[i],[o]];return r.runWebGLProgram(t,[s],s.dtype,l)}},Xq=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function Zq(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var Yq={kernelName:id,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Xq(r.shape),i=[Zq(r,a.complexTensorInfos.real),Zq(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}},Jq=class{constructor(e){this.outputShape=[],this.outputShape=$v.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},Qq=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$v.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=uG(r),s=Oj("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),d=i.join(),c=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];c+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${eK(i,l,t)}),\n            vec2(${eK(u,l,t)}));\n        }`}let p=o.length,h=o[o.length-1];c+=`\n        return getChannel(\n          getT${p}(${eK(i,l,h)}),\n          vec2(${eK(u,l,h)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${c}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function eK(e,t,n){let r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function tK(e){let{inputs:t,backend:n}=e,{input:r}=t;return lH({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}var nK={kernelName:Xd,backendName:"webgl",kernelFunc:tK};function rK(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>Wq({inputs:{input:e},backend:n}))),a=e.map((e=>tK({inputs:{input:e},backend:n}))),s=rK(r,t,n),i=rK(a,t,n),o=dH({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=Jp.sizeFromShape(e.shape.slice(t));return TH({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=$v.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=ZG(s,i,r,o),u=$v.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>Cu().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let r=Math.floor(e.length/2),a=rK(e.slice(0,r),t,n),s=rK(e.slice(r),t,n),i=rK([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Cu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let a=new Qq(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}let{tensors2D:s,outShape:i}=function(e,t,n){let r=$v.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>TH({inputs:{x:e},attrs:{shape:[-1,Jp.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new Jq(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));let u=TH({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function aK(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Jp.parseAxisParam(a,t[0].shape)[0],i=$v.computeOutShape(t.map((e=>e.shape)),s);if(0===Jp.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>Jp.sizeFromShape(e.shape)>0));if(1===o.length)return lH({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return $v.assertParamsConsistent(l,s),rK(o,s,n)}var sK={kernelName:od,backendName:"webgl",kernelFunc:aK},iK=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,A=m?3:1,b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${A}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}},oK=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,c=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},lK=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=mG(this.outputShape.length);let{dataFormat:n}=t,r=KV(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}};function uK({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,d=r.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],h=n.outChannels,f="channelsLast"===n.dataFormat,m=!1,g=!1,y=[];if((1!==p&&1!==h||!(c>1e3))&&d.isPacked&&f&&null!=d.texture&&u[2]%2!=0&&Jp.arraysEqual(d.shape.slice(-3),u.slice(-3))){let c=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,Jp.assert(FV(d.shape,p.shape),(()=>`packed reshape ${d.shape} to ${p.shape} isn't free`));let f=TH({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);let A=LH({a:p,b:f,backend:r,transposeA:m,transposeB:g,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(A.dataId);Jp.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=h,b.shape=n.outShape,l=lH({inputs:{x:A},backend:r}),l.shape=n.outShape,y.push(A)}else{let d=TH({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=TH({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=LH({a:d,b:c,transposeA:m,transposeB:g,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=TH({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),y.push(d),y.push(c),y.push(p)}for(let e of y)r.disposeIntermediateTensorInfo(e);return l}function dK({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,outWidth:c,outHeight:p,dataFormat:h}=n,f="channelsLast"===h,m=l*u*d,g=p*c,y=[m,g],A=[],b=TH({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),x=TH({inputs:{x:t},backend:r,attrs:{shape:[1,m,Jp.sizeFromShape(t.shape)/m]}});A.push(b),A.push(x);let w=new lK(y,n),v=[b.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[b],"float32",v),I=TH({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});A.push(k),A.push(I);let S=null!=a,N=null!=s,T="leakyrelu"===o,C=o?wH(o,!0):null,E=new vH(I.shape,x.shape,[1,g,n.outChannels],!0,!1,S,C,N,T),_=[I,x];if(a&&_.push(a),N&&_.push(s),T){let e=r.makeTensorInfo([],"float32",Jp.createScalarValue(i,"float32"));_.push(e),A.push(e)}let R=r.runWebGLProgram(E,_,"float32"),M=TH({inputs:{x:R},backend:r,attrs:{shape:f?[1,p,c,n.outChannels]:[1,n.outChannels,p,c]}});A.push(R);for(let e of A)r.disposeIntermediateTensorInfo(e);return M}var cK={kernelName:ld,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:c}=a,p=$v.convertConv2DDataFormat(u),h=$v.computeConv2DInfo(s.shape,i.shape,o,d,l,c,!1,p);if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Cu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=dK({x:s,filter:i,convInfo:h,backend:r});else{let e=new iK(h);t=r.runWebGLProgram(e,[s,i],"float32")}else t=uK({x:s,filter:i,convInfo:h,backend:r});let f=TH({inputs:{x:t},backend:r,attrs:{shape:h.outShape}});return r.disposeIntermediateTensorInfo(t),f}},pK=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},hK=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,d=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},fK=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},mK=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},gK={kernelName:ud,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,c=$v.convertConv2DDataFormat(l),p=$v.computeConv2DInfo(a.shape,d,i,1,o,u,!1,c),h=new pK(p);return n.runWebGLProgram(h,[a,s],"float32")}},yK={kernelName:dd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,c=$v.convertConv2DDataFormat(u),p=$v.computeConv2DInfo(i,s.shape,o,1,l,d,!1,c),h=new hK(p);return n.runWebGLProgram(h,[a,s],"float32")}},AK={kernelName:cd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=$v.computeConv3DInfo(a.shape,s.shape,i,l,o),d=new oK(u);return n.runWebGLProgram(d,[a,s],"float32")}},bK={kernelName:pd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=$v.computeConv3DInfo(a.shape,l,i,1,o),d=new fK(u);return n.runWebGLProgram(d,[a,s],"float32")}},xK={kernelName:hd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=$v.computeConv3DInfo(l,s.shape,o,1,i),d=new mK(u);return n.runWebGLProgram(d,[a,s],"float32")}},wK=bH({opSnippet:AH+"\n  return cos(x);\n"}),vK={kernelName:fd,backendName:"webgl",kernelFunc:wK},kK=bH({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),IK={kernelName:md,backendName:"webgl",kernelFunc:kK},SK=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[d,c]=n;this.outputShape=[u,d,c,l];let p="bilinear"===r?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=d>1?[""+(i-1)/(d-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[A,b,x]=c>1?[""+(o-1)/(c-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${A});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},NK={kernelName:Ad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new SK(a.shape,s.shape,o,l,u);return n.runWebGLProgram(d,[a,s,i],"float32")}},TK=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"1.0":`getX(${CK(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${uG(r)} coords = getOutputCoords();\n        int end = ${EK(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${EK(r,"coords")} = idx;\n          val *= getX(${CK(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function CK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function EK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}var _K={kernelName:gd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=$v.getAxesPermutation([s],l),d=a;null!=u&&(d=DH({inputs:{x:a},backend:n,attrs:{perm:u}}));let c=$v.getInnerMostAxes(1,l)[0];if(c!==l-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let p=d.shape[c],h=lH({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){let t=new TK(d.shape,!1,o),r=[[e]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new TK(d.shape,i,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=DH({inputs:{x:h},backend:n,attrs:{perm:$v.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),e}return h}},RK=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;let r=e.length,a=t?"0.0":`getX(${MK(r,"coords")})`,s=e[e.length-1],i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${uG(r)} coords = getOutputCoords();\n        int end = ${$K(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${$K(r,"coords")} = idx;\n          val += getX(${MK(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function MK(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function $K(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var FK={kernelName:yd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length,u=$v.getAxesPermutation([s],l),d=a;null!=u&&(d=DH({inputs:{x:a},backend:n,attrs:{perm:u}}));let c=$v.getInnerMostAxes(1,l)[0];if(c!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);let p=d.shape[c],h=lH({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){let t=new RK(d.shape,!1,o),r=[[e]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){let e=new RK(d.shape,i,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){let e=DH({inputs:{x:h},backend:n,attrs:{perm:$v.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),e}return h}},OK={kernelName:bd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){let e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=qG(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){let e=n.bufferSync(a),t=n.bufferSync(s),r=KG(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},zK=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},DK={kernelName:xd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),c=new zK("NHWC"===i?[o,l,u,d]:[o,d,l,u],s,i);return n.runWebGLProgram(c,[a],a.dtype)}},PK=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mG(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},LK=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mG(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,c=d,p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<d;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<d;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(c+1)/2;e++){let t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<d&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<d)){let e=i%2==0?Jp.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<d&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<d&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<d&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<d&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}},WK={kernelName:wd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]),Jp.assert($v.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c,p=$v.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0);c=Cu().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new LK(p):new PK(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(c,[a,s],"float32",h)}},BK=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},UK=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},VK={kernelName:vd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,c=$v.computeConv2DInfo(a.shape,d,i,o,l,u,!0),p=new BK(c);return n.runWebGLProgram(p,[a,s],"float32")}},GK={kernelName:kd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,c=$v.computeConv2DInfo(d,s.shape,i,o,l,u,!0),p=new UK(c);return n.runWebGLProgram(p,[a,s],"float32")}},jK=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}},HK={kernelName:Id,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=Jp.sizeFromShape(r.shape),i=TH({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new jK(s),l=n.runWebGLProgram(o,[i],i.dtype),u=TH({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},qK=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:c}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}},KK={kernelName:Sd,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=a,d=$v.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),c=new qK(d);t=r.runWebGLProgram(c,[s,i],"float32");let p=TH({inputs:{x:t},backend:r,attrs:{shape:d.outShape}});return r.disposeIntermediateTensorInfo(t),p}},XK={kernelName:Ed,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=$v.decodeEinsumEquation(a,s.length);$v.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=$v.getEinsumComputePath(o,l),c=d.length,p=null,h=i.length,f=[];for(let e=0;e<c;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=$v.getEinsumPermutation(h,l[t]);$v.isIdentityPermutation(r)?e=s[t]:(e=DH({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Jp.arraysEqual(e.shape,i)||(e=TH({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=SH({inputs:{a:e,b:p},backend:n}),f.push(p))}e<c-1&&(u[e]>=0&&(p=OH({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},ZK=bH({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),YK={kernelName:_d,backendName:"webgl",kernelFunc:ZK},JK={kernelName:Rd,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Cu().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new oH("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new sH("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},QK=xH({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:YG}),eX={kernelName:$d,backendName:"webgl",kernelFunc:QK},tX=bH({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${$v.ERF_P};\n  float a1 = ${$v.ERF_A1};\n  float a2 = ${$v.ERF_A2};\n  float a3 = ${$v.ERF_A3};\n  float a4 = ${$v.ERF_A4};\n  float a5 = ${$v.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),nX={kernelName:Md,backendName:"webgl",kernelFunc:tX},rX=bH({opSnippet:AH+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:JG,dtype:"float32"}),aX={kernelName:Fd,backendName:"webgl",kernelFunc:rX};function sX(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(Jp.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),TH({inputs:{x:s},backend:r,attrs:{shape:o}})}var iX={kernelName:Od,backendName:"webgl",kernelFunc:sX},oX="return exp(x) - 1.0;",lX=bH({opSnippet:oX,packedOpSnippet:oX,cpuKernelImpl:QG}),uX={kernelName:zd,backendName:"webgl",kernelFunc:lX},dX=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function cX(e,t,n){let r=n.texData.get(e.dataId),a=Jp.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=TH({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new dX("real",o,t),u=new dX("imag",o,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],c=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(u,d,"float32"),h=dH({inputs:{real:c,imag:p},backend:n});n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p);let f=TH({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(h),f}var pX={kernelName:Dd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return cX(r,!1,n)}},hX=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function fX(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||Jp.inferDtype(a),"string"===s){let e=Jp.getArrayFromDType(s,Jp.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new hX(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}var mX,gX={kernelName:Pd,backendName:"webgl",kernelFunc:fX},yX=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},AX={kernelName:Ld,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new yX(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},bX="return floor(x);",xX=bH({opSnippet:bX,packedOpSnippet:bX,cpuKernelImpl:ej}),wX={kernelName:Wd,backendName:"webgl",kernelFunc:xX},vX=xH({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),kX={kernelName:Bd,backendName:"webgl",kernelFunc:vX},IX=class{constructor(e){this.variableNames=["A"];let t=KV(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},SX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=KV(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},NX={kernelName:Fp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[u,l],c=[u,l,s];(o||i)&&(null==mX&&(mX=document.createElement("canvas").getContext("2d")),mX.canvas.width=l,mX.canvas.height=u,mX.drawImage(a,0,0,l,u),a=mX.canvas);let p=n.makeTensorInfo(d,"int32");n.texData.get(p.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);let h=Cu().getBool("WEBGL_PACK")?new SX(c):new IX(c),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}},TX={kernelName:Dp,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:c,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,g=$v.convertConv2DDataFormat(c),y=$v.computeConv2DInfo(s.shape,i.shape,u,p,d,h,!1,g),A=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(Cu().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])t=dK({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=null!=o,n=null!=l,a="leakyrelu"===f,u=f?wH(f,!1):null,d=new iK(y,e,u,n,a),c=[s,i];if(o&&c.push(o),l&&c.push(l),a){let e=r.makeTensorInfo([],"float32",Jp.createScalarValue(m,"float32"));c.push(e),A.push(e)}t=r.runWebGLProgram(d,c,"float32")}else t=uK({x:s,filter:i,convInfo:y,backend:r,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let b=TH({inputs:{x:t},backend:r,attrs:{shape:y.outShape}});return A.push(t),A.forEach((e=>r.disposeIntermediateTensorInfo(e))),b}},CX={kernelName:Pp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:h}=r,f=[],m=d;null==m&&(m=[1,1]),Jp.assert($v.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,y=$v.computeConv2DInfo(a.shape,s.shape,l,m,u,c,!0),A=Cu().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,b=p?wH(p,A):null,x=[a,s],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){let e=n.makeTensorInfo([],"float32",Jp.createScalarValue(h,"float32"));x.push(e),f.push(e)}g=A?new LK(y,w,b,v,k):new PK(y,w,b,v,k);let I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],S=n.runWebGLProgram(g,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}},EX=class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;let r=uG(t.length),a=uG(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}},_X={kernelName:Gd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=Jp.sizeFromShape(r.shape),[l,u,d,c]=$v.prepareAndValidate(r,a),p=TH({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),h=TH({inputs:{x:r},backend:n,attrs:{shape:[Jp.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=tj(e,t,r.dtype,u,i,d,c,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new EX(i,c,[u,d]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=TH({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}},RX=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=uG(this.rank),r=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}};function MX(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=Jp.parseAxisParam(i,a.shape)[0];if(Cu().get("DEBUG")){let e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){let r=e[n];Jp.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}let u=$v.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=Jp.sizeFromShape(s.shape),c=[],p=TH({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=TH({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});c.push(p),c.push(h);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=n.bufferSync(h),t=n.bufferSync(p),r=nj(t,e,f);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}let m=new RX(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);c.push(g);let y=TH({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}var $X={kernelName:Vd,backendName:"webgl",kernelFunc:MX},FX=xH({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:rj,dtype:"bool"}),OX={kernelName:jd,backendName:"webgl",kernelFunc:FX},zX=xH({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:aj}),DX={kernelName:Hd,backendName:"webgl",kernelFunc:zX},PX={kernelName:Kd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:r}=t;return cX(r,!0,n)}},LX=bH({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),WX={kernelName:Zd,backendName:"webgl",kernelFunc:LX},BX=bH({opSnippet:"return float(isinf(x));",dtype:"bool"}),UX={kernelName:Yd,backendName:"webgl",kernelFunc:BX},VX=bH({opSnippet:"return float(isnan(x));",dtype:"bool"}),GX={kernelName:Jd,backendName:"webgl",kernelFunc:VX},jX=xH({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:sj,dtype:"bool"}),HX={kernelName:ec,backendName:"webgl",kernelFunc:jX},qX=xH({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:ij,dtype:"bool"}),KX={kernelName:tc,backendName:"webgl",kernelFunc:qX},XX={kernelName:nc,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=oj(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},ZX=bH({opSnippet:AH+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:lj}),YX={kernelName:rc,backendName:"webgl",kernelFunc:ZX},JX=bH({opSnippet:AH+"\n  return log(1.0 + x);\n"}),QX={kernelName:ac,backendName:"webgl",kernelFunc:JX},eZ=xH({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),tZ={kernelName:sc,backendName:"webgl",kernelFunc:eZ},nZ=bH({opSnippet:"return float(!(x >= 1.0));"}),rZ={kernelName:ic,backendName:"webgl",kernelFunc:nZ},aZ=xH({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),sZ={kernelName:oc,backendName:"webgl",kernelFunc:aZ},iZ=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},oZ=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},lZ={kernelName:uc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=Cu().getBool("WEBGL_PACK_NORMALIZATION")?new oZ(a.shape,s,i,o,l):new iZ(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}},uZ=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},dZ={kernelName:dc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=r,c=new uZ(a.shape,o,l,u,d);return n.runWebGLProgram(c,[a,s,i],a.dtype)}};function cZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=Jp.parseAxisParam(s,a.shape),u=l,d=$v.getAxesPermutation(u,o),c=null!=d,p=n.shouldExecuteOnCPU([a]),h=a;if(c){if(p){let e=n.texData.get(h.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];let r=Mj(e,a.shape,a.dtype,d,t);h=n.makeTensorInfo(t,a.dtype),n.texData.get(h.dataId).values=r}else h=FH(a,d,n);u=$v.getInnerMostAxes(u.length,o)}$v.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=$v.computeOutAndReduceShapes(h.shape,u),y=m;if(i&&(y=$v.expandShapeToKeepDim(m,l)),p){let e=n.texData.get(h.dataId).values,t=uj(e,Jp.sizeFromShape(g),y,a.dtype);f=n.makeTensorInfo(y,a.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,r){let a=Jp.sizeFromShape(t),s=TH({inputs:{x:e},attrs:{shape:[Jp.sizeFromShape(e.shape)/a,a]},backend:r}),i=RH(s,e.dtype,"max",r),o=TH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(h,g,y,n);return c&&n.disposeIntermediateTensorInfo(h),f}var pZ={kernelName:cc,backendName:"webgl",kernelFunc:cZ},hZ=xH({opSnippet:aH+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+iH+"\n  return result;\n",cpuKernelImpl:dj}),fZ={kernelName:pc,backendName:"webgl",kernelFunc:hZ},mZ={kernelName:hc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;HV(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;Jp.assert($v.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=$v.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Jp.arraysEqual(u.inShape,u.outShape))return lH({inputs:{x:a},backend:n});let d=new Aq(u,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},gZ={kernelName:mc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=$v.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),c=new bq(d,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},yZ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},AZ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,c=l-1-e.padInfo.top,p=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${c}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},bZ={kernelName:gc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,c=$v.computePool3DInfo(i.shape,o,l,[1,1,1],u,d),p=new bq(c,"max",!0),h=n.runWebGLProgram(p,[i],i.dtype),f=new AZ(c),m=n.runWebGLProgram(f,[a,h],i.dtype);return n.disposeIntermediateTensorInfo(h),m}},xZ={kernelName:fc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;HV([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:c}=r,p=$v.computePool2DInfo(o.shape,l,u,1,d,c),h=new Aq(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new yZ(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},wZ={kernelName:yc,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;Jp.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));let u=[1,1];Jp.assert($v.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let d=$v.computePool2DInfo(r.shape,a,s,u,i),[c,p]=function(e,t,n,r){let a=new Aq(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Aq(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,d,l);return[c,p]}},vZ={kernelName:Ac,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=Jp.parseAxisParam(s,r.shape),u=l,d=$v.getAxesPermutation(u,o),c=null!=d,p=i.shouldExecuteOnCPU([r]),h=[],f=r;if(c){if(p){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];let n=Mj(e,r.shape,r.dtype,d,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=FH(r,d,i);h.push(f),u=$v.getInnerMostAxes(u.length,o)}$v.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=$v.computeOutAndReduceShapes(f.shape,u),y=m;a&&(y=$v.expandShapeToKeepDim(m,l));let A=function(e,t,n,r){let a=Jp.sizeFromShape(t),s=TH({inputs:{x:e},attrs:{shape:[Jp.sizeFromShape(e.shape)/a,a]},backend:r}),i=RH(s,"float32","mean",r),o=TH({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(let e of h)i.disposeIntermediateTensorInfo(e);return A}},kZ={kernelName:bc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=Jp.parseAxisParam(s,a.shape),u=l,d=$v.getAxesPermutation(u,o),c=a;null!=d&&(c=DH({inputs:{x:a},backend:n,attrs:{perm:d}}),u=$v.getInnerMostAxes(u.length,a.shape.length)),$v.assertAxesAreInnerMostDims("min",u,o);let p,[h,f]=$v.computeOutAndReduceShapes(c.shape,u),m=TH({inputs:{x:c},backend:n,attrs:{shape:[-1,Jp.sizeFromShape(f)]}}),g=RH(m,m.dtype,"min",n);return p=TH(i?{inputs:{x:g},backend:n,attrs:{shape:$v.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(c),p}},IZ=xH({opSnippet:aH+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+iH+"\n  return result;\n",cpuKernelImpl:cj}),SZ={kernelName:xc,backendName:"webgl",kernelFunc:IZ},NZ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=uG(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},TZ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=uG(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Oj("rc",r),l=Oj("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,c="reflect"===n?0:1,p="";if(1===r){let e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${c};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${c};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${c}) +\n                gte * ((end - 1) * 2 - source + ${c});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}},CZ={kernelName:wc,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=Cu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TZ(r.shape,a,s):new NZ(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},EZ=xH({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+iH+"\n  return result;\n"}),_Z={kernelName:vc,backendName:"webgl",kernelFunc:EZ},RZ=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},MZ=xH({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),$Z={kernelName:Cd,backendName:"webgl",kernelFunc:MZ},FZ="return a - b;",OZ=xH({opSnippet:FZ,packedOpSnippet:FZ,supportsComplex:!0,cpuKernelImpl:Ej}),zZ={kernelName:vp,backendName:"webgl",kernelFunc:OZ};function DZ(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Jp.parseAxisParam([s],a.shape),o=cZ({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=$v.expandShapeToKeepDim(o.shape,i),u=TH({inputs:{x:o},backend:n,attrs:{shape:l}}),d=OZ({inputs:{a,b:u},backend:n}),c=rX({inputs:{x:d},backend:n}),p=OH({inputs:{x:c},backend:n,attrs:{axis:i,keepDims:!1}}),h=TH({inputs:{x:p},backend:n,attrs:{shape:l}}),f=MZ({inputs:{a:c,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var PZ={kernelName:dp,backendName:"webgl",kernelFunc:DZ},LZ={kernelName:kc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:DZ({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],d=l.shape[1],c=new RZ(u,d,s),p=[[i]],h=n.runWebGLProgram(c,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),h}},WZ=Vj+"\n  return -x;\n",BZ={kernelName:Sc,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r}=e,{x:a}=n;if(r.shouldExecuteOnCPU([a])){let e=r.texData.get(a.dataId),[t,n]=hj(e.values,a.shape,a.dtype);return r.makeTensorInfo(n,a.dtype,t)}return t=Cu().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Kj(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Uj(a.shape,WZ),r.runWebGLProgram(t,[a],a.dtype)}},UZ=Ok.nonMaxSuppressionV3Impl,VZ={kernelName:Tc,backendName:"webgl",kernelFunc:function(e){$v.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:c}=UZ(u,d,i,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},GZ=Ok.nonMaxSuppressionV4Impl,jZ={kernelName:Cc,backendName:"webgl",kernelFunc:function(e){$v.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=GZ(d,c,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},HZ=Ok.nonMaxSuppressionV5Impl,qZ={kernelName:Ec,backendName:"webgl",kernelFunc:function(e){$v.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),c=n.readSync(s.dataId),p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=HZ(d,c,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},KZ=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},XZ={kernelName:Rc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=Jp.sizeFromShape(a.shape),u=new KZ(l,s,i,o),d=TH({inputs:{x:a},backend:n,attrs:{shape:[l]}}),c=n.runWebGLProgram(u,[d],a.dtype);n.disposeIntermediateTensorInfo(d);let p=TH({inputs:{x:c},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(c),p}};function ZZ(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=Wq({inputs:{input:r},backend:n}),t=ZZ({inputs:{x:e},backend:n}),a=tK({inputs:{input:r},backend:n}),s=ZZ({inputs:{x:a},backend:n}),i=dH({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return fX({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var YZ={kernelName:Mp,backendName:"webgl",kernelFunc:ZZ},JZ={kernelName:_c,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=Wq({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=tK({inputs:{input:a},backend:r}),i=ZZ({inputs:{x:s},backend:r}),o=dH({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return fX({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},QZ={kernelName:Mc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return sX({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Jp.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Jp.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=aK({inputs:t.map((e=>{let t=sX({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},eY=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=uG(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},tY=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let r=e.length,a=uG(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Oj("rc",r),l=Oj("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,d=1===r?"source":`vec2(${l.slice(-2).join()})`,c=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${c[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}},nY=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===Jp.sizeFromShape(a.shape))return fX({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});let o=Cu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tY(a.shape,s,i):new eY(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},rY={kernelName:$c,backendName:"webgl",kernelFunc:nY},aY=xH({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+iH+"\n  return result;\n"}),sY={kernelName:Oc,backendName:"webgl",kernelFunc:aY},iY={kernelName:Dc,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],d=Jp.parseAxisParam(i,s.shape),c=d,p=$v.getAxesPermutation(c,l),h=s;if(null!=p&&(h=DH({inputs:{x:s},backend:r,attrs:{perm:p}}),c=$v.getInnerMostAxes(c.length,l),u.push(h)),$v.assertAxesAreInnerMostDims("prod",c,l),r.shouldExecuteOnCPU([h])){let e=r.texData.get(h.dataId).values,{outVals:n,outShape:a,outDtype:s}=mj(h.shape,h.dtype,e,c);t=r.makeTensorInfo(a,s,n)}else{let[e,n]=$v.computeOutAndReduceShapes(h.shape,c),a=Jp.sizeFromShape(n),i=TH({inputs:{x:h},backend:r,attrs:{shape:[-1,a]}}),o=RH(i,Bh(s.dtype),"prod",r);t=TH({inputs:{x:o},backend:r,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=$v.expandShapeToKeepDim(t.shape,d);t=TH({inputs:{x:t},backend:r,attrs:{shape:e}})}return u.forEach((e=>r.disposeIntermediateTensorInfo(e))),t}},oY=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=gj(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},lY={kernelName:Pc,backendName:"webgl",kernelFunc:oY},uY=bH({opSnippet:"return 1.0 / x;"}),dY={kernelName:Wc,backendName:"webgl",kernelFunc:uY},cY=bH({opSnippet:Vj+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),pY={kernelName:Bc,backendName:"webgl",kernelFunc:cY},hY=bH({opSnippet:Vj+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fY={kernelName:qc,backendName:"webgl",kernelFunc:hY},mY=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/c[0]},\n          ${d[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},gY=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/c[0]},\n          ${d[1]/c[1]},\n          ${d[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}},yY={kernelName:jc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Cu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gY(a.shape,l,u,s,i):new mY(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],"float32")}},AY=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],c=1/u,p=1/d,h=2*Math.ceil(c)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}},bY={kernelName:Hc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new AY(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},xY=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/c[0]},\n          ${d[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},wY=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,d=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/c[0]},\n          ${d[1]/c[1]},\n          ${d[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}},vY={kernelName:Vc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=Cu().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wY(a.shape,l,u,s,i):new xY(a.shape,l,u,s,i);return n.runWebGLProgram(d,[a],a.dtype)}},kY=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],d=o[1]/l[1],c=1/u,p=1/d,h=2*Math.ceil(c)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${c});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}},IY={kernelName:Gc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new kY(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}},SY=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=uG(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}},NY=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=Oj("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=uG(n);var o;function l(n){let r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=r.slice(),l(o)};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}},TY={kernelName:Kc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=Jp.parseAxisParam(s,a.shape);if(0===i)return lH({inputs:{x:a},backend:n});let l=Cu().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NY(a.shape,o):new SY(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}},CY=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},EY={kernelName:Op,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new CY(r.shape,s),[u,d]=$v.getImageCenter(i,r.shape[1],r.shape[2]),c=[[u,d,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,c)}},_Y=bH({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),RY={kernelName:Xc,backendName:"webgl",kernelFunc:_Y},MY=bH({opSnippet:"return inversesqrt(x);",cpuKernelImpl:yj}),$Y={kernelName:Zc,backendName:"webgl",kernelFunc:MY},FY=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=uG(a.length),l=uG(s.length),u="";1===n?u="i":2===n&&(u="i, j");let d=`getIndices(${u})`,c="";1===r?c="i":2===r&&(c="i, coords[1]");let p=`getUpdates(${c})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}},OY={kernelName:Yc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:c}=$v.calculateShapes(s,a,i),p=[c/u,u];if(0===c)return n.makeTensorInfo(i,a.dtype);let h=TH({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=TH({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new FY(l,o,h.shape.length,f.shape.length,d,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),A=TH({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),A}},zY=class{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}let s=uG(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}},DY={kernelName:Jc,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new zY(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Wh(a.dtype,s.dtype))}},PY=bH({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${$v.SELU_SCALEALPHA};\n  float scale = ${$v.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),LY={kernelName:Qc,backendName:"webgl",kernelFunc:PY},WY=bH({opSnippet:AH+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Aj}),BY={kernelName:ap,backendName:"webgl",kernelFunc:WY},UY=bH({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),VY={kernelName:rp,backendName:"webgl",kernelFunc:UY},GY=bH({opSnippet:AH+"\n  return sin(x);\n"}),jY={kernelName:tp,backendName:"webgl",kernelFunc:GY},HY=bH({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),qY={kernelName:np,backendName:"webgl",kernelFunc:HY},KY=bH({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),XY={kernelName:sp,backendName:"webgl",kernelFunc:KY},ZY={kernelName:lp,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Jp.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],d=nY({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=$v.getReshaped(d.shape,s,o,!1),p=$v.getPermuted(c.length,s.length,!1),h=$v.getReshapedPermuted(d.shape,s,o,!1),f=TH({inputs:{x:d},backend:n,attrs:{shape:c}}),m=DH({inputs:{x:f},backend:n,attrs:{perm:p}}),g=TH({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},YY={kernelName:cp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),d=n.readSync(i.dataId)[0],[c,p,h,f,m]=wj(o,r.shape,r.dtype,l,a.dtype,u,d);return[n.makeTensorInfo(p,r.dtype,c),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},JY={kernelName:pp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,d,c]=vj(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(d,r.dtype,u),n.makeTensorInfo([c.length],s.dtype,new Int32Array(c))]}},QY={kernelName:hp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=kj(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(d,r.dtype,u)}},eJ={kernelName:fp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,d]=kj(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(d,r.dtype,u)}},tJ={kernelName:mp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:c}=$v.calculateShapes(s,a,o),p=new FY(u,l,a.shape.length,s.shape.length,d,[c,1],!1),h=n.runWebGLProgram(p,[s,a,i],s.dtype),f=TH({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),f}},nJ={kernelName:up,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Jp.parseAxisParam(i,a.shape)[0],l=$v.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),c=a.shape.slice();return l.map((e=>{let t=[...c];t[o]=e;let r=$q({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},rJ="return sqrt(x);",aJ=bH({opSnippet:rJ,packedOpSnippet:rJ,cpuKernelImpl:Ij}),sJ={kernelName:ip,backendName:"webgl",kernelFunc:aJ},iJ=bH({opSnippet:"return x * x;"}),oJ={kernelName:yp,backendName:"webgl",kernelFunc:iJ},lJ="return (a - b) * (a - b);",uJ=xH({opSnippet:lJ,packedOpSnippet:lJ}),dJ={kernelName:gp,backendName:"webgl",kernelFunc:uJ},cJ={kernelName:$p,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=Vj+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Uj(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}},pJ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=uG(n.length),s=uG(n.length),i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}},hJ={kernelName:Ap,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:w}=Qm.sliceInfo(s.shape,i,o,l,u,d,c,p,h);if(g)t=TH({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||A){Jp.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Qm.computeOutShape(b,x,w),n=$q({inputs:{x:s},backend:r,attrs:{begin:b,size:e}});t=TH({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeIntermediateTensorInfo(n)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=lm(s.shape,s.dtype,e),a=Sj(f,n,w,b);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new pJ(b,w,f);t=r.runWebGLProgram(e,[s],s.dtype)}let v=TH({inputs:{x:t},backend:r,attrs:{shape:m}});return r.disposeIntermediateTensorInfo(t),v}},fJ={kernelName:bp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:c}=t,p=n.readSync(d.dataId),h=n.readSync(c.dataId),[f,m]=Nj(p,h,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}},mJ={kernelName:xp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,d,c]=Tj(o,l,a),p=d.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(c))]}},gJ={kernelName:wp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=Cj(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},yJ=bH({opSnippet:"return tan(x);"}),AJ={kernelName:kp,backendName:"webgl",kernelFunc:yJ},bJ=bH({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),xJ={kernelName:Ip,backendName:"webgl",kernelFunc:bJ},wJ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;let r=uG(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}};function vJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Jp.decodeString(e))):e,r=lm(a.shape,a.dtype,t),i=_j(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new wJ(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var kJ={kernelName:Sp,backendName:"webgl",kernelFunc:vJ},IJ=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},SJ=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function NJ(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function TJ(e){let t=1;for(;t<e;)t*=2;return t}var CJ={kernelName:Np,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Cu().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Cu().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([a])||d<o||s>l){let e=n.readSync(a.dataId),[t,r]=Rj(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[a,fX({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let c=n.texData.get(a.dataId),p=null!==c&&c.isPacked,h=p?n.unpackTensor(a):a,f=Jp.sizeFromShape(u)/d,m=TH({inputs:{x:h},attrs:{shape:[f,d]},backend:n});p&&NJ(n,h);let g=TJ(s),y=TJ(d),A=null,b=()=>null===A?[m,m]:[m,A],x=(e,t,r)=>{let a=b(),s=new IJ(r),i=[[d],[null===A?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=A;A=n.runWebGLProgram(s,a,"int32",i),NJ(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)x(t,n,[f,y])}for(let e=y;e>g;e/=2){let t=b(),r=new SJ([f,e/2]),a=[[d],[null===A?1:0],[g]],s=A;A=n.runWebGLProgram(r,t,"int32",a),NJ(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)x(o,e,A.shape)}let w=A;A=$q({inputs:{x:A},backend:n,attrs:{begin:0,size:[f,s]}}),NJ(n,w);let v=MX({inputs:{x:m,indices:A},backend:n,attrs:{axis:1,batchDims:1}});NJ(n,m);let k=u.slice(0,-1);k.push(s),w=A,A=TH({inputs:{x:A},attrs:{shape:k},backend:n}),NJ(n,w);let I=v;return v=TH({inputs:{x:v},attrs:{shape:k},backend:n}),NJ(n,I),[v,A]}},EJ=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}},_J={kernelName:Tp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[d,c,p,h]=a.shape,[f,m]=null!=u?u:[c,p],g=new EJ(c,p,i,o,l,[d,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}},RJ={kernelName:Ep,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;HV(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=$j(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},MJ={kernelName:_p,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let c=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;let t=$q({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=TH({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,c.push(t)}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},$J=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${c}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}},FJ={kernelName:Rp,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[],u=0,d=$v.getAxesPermutation([u],o),c=a;null!=d&&(c=DH({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(c),u=$v.getInnerMostAxes(1,o)[0]);let p=$v.segment_util.computeOutShape(c.shape,u,i),h=Jp.sizeFromShape([c.shape[u]]),f=TH({inputs:{x:c},backend:n,attrs:{shape:[-1,h]}});l.push(f);let m=Bh(a.dtype),g=(e,t,r,a,s)=>{let i=e.shape[0],o=e.shape[1],u=$v.segment_util.segOpComputeOptimalWindowSize(o,s),d=new $J({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),c=n.compileAndRun(d,[e,r],a);if(l.push(c),c.shape[1]===s)return c;let p=oY({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=vJ({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(h),g(c,t,h,a,s)},y=TH({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}}),A=y;if(null!=d){l.push(y);let e=$v.getUndoAxesPermutation(d);A=DH({inputs:{x:A},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}},OJ=[WH,UH,GH,HH,XH,JH,QH,eq,iq,oq,uq,cq,hq,mq,yq,xq,wq,Iq,Sq,Nq,Eq,Oq,zq,Dq,Uq,jq,Kq,cH,Yq,sK,cK,gK,yK,AK,bK,xK,vK,IK,NK,_K,FK,OK,DK,WK,VK,GK,HK,KK,XK,YK,JK,eX,nX,aX,iX,uX,pX,gX,AX,wX,kX,NX,TX,CX,_X,$X,OX,DX,uH,PX,nK,WX,UX,GX,fH,HX,KX,XX,YX,QX,tZ,rZ,sZ,lZ,dZ,pZ,fZ,mZ,gZ,bZ,xZ,wZ,vZ,kZ,SZ,CZ,_Z,LZ,NH,BZ,VZ,jZ,qZ,Lq,XZ,JZ,QZ,rY,sY,yH,iY,lY,Bq,$Z,dY,pY,fY,CH,yY,bY,vY,IY,TY,EY,RY,$Y,OY,DY,LY,BY,VY,jY,qY,Fq,PZ,XY,ZY,YY,JY,QY,eJ,tJ,nJ,sJ,oJ,dJ,cJ,hJ,fJ,mJ,gJ,zZ,zH,AJ,xJ,kJ,CJ,_J,PH,RJ,MJ,FJ,YZ];for(let e of OJ)Hp(e);var zJ=Cu();zJ.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),zJ.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),zJ.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",(()=>4)),zJ.registerFlag("WEBGPU_USE_NAIVE_CONV2D",(()=>!1)),zJ.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),zJ.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),zJ.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),zJ.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),zJ.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),zJ.registerFlag("WEBGPU_USE_IMPORT",(()=>!1));var DJ="\n  if (isNaN.r) {\n    resultTemp.r = uniforms.NAN;\n  }\n  if (isNaN.g) {\n    resultTemp.g = uniforms.NAN;\n  }\n  if (isNaN.b) {\n    resultTemp.b = uniforms.NAN;\n  }\n  if (isNaN.a) {\n    resultTemp.a = uniforms.NAN;\n  }\n  ",PJ=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;\n  ${DJ}\n  return resultTemp;\n  `;function LJ(e,t){let n=t?DJ:"\n  if (isnan(a)) { return a; }\n  if (isnan(b)) { return b; }\n  ";return t?`\n    var resultTemp = vec4<f32>(${e}(a, b));\n    let isNaN = isnanVec4(a) | isnanVec4(b);\n    `+n+"\n    return resultTemp;\n  ":n+`\n    return ${e}(a, b);\n  `}function WJ(e,t){switch(e){case 0:return"return a * b;";case 1:return"return a + b;";case 2:return"return a - b;";case 3:return"return a / b;";case 4:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case 5:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case 6:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case 7:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case 8:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case 9:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(f32(a) >= 1.0 && f32(b) >= 1.0);";case 10:return t?"return vec4<f32>(a != b);":"return f32(a != b);";case 11:return"return (a - b) * (a - b);";case 12:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n  ":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n  ";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n  ":"if (a < 0.0) { return b * a; }  return a;";case 15:return LJ("max",t);case 16:return LJ("min",t);case 13:return t?PJ:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n  ";case 17:return"return areal * breal - aimag * bimag;";case 18:return"return areal * bimag + aimag * breal;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function BJ(e,t){switch(e){case 0:return"return abs(a);";case 2:return"return cos(a);";case 3:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case 1:return"return ceil(a);";case 4:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case 5:return"return exp(a);";case 6:return"return exp(a) - 1.0;";case 7:return"return floor(a);";case 8:return"return a;";case 9:return"if (a < 0.0) { return 1.0/0.0; }\n  return log(a);";case 10:return"return f32(!(a >= 1.0));";case 11:return"return -a;";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case 12:return t?"\n  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));\n  let isNaN = isnanVec4(a);\n\n  if (isNaN.r) {\n    resFloat.r = a.r;\n  }\n  if (isNaN.g) {\n    resFloat.g = a.g;\n  }\n  if (isNaN.b) {\n    resFloat.b = a.b;\n  }\n  if (isNaN.a) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if(a < 0.0) { return 0.0; } return a;";case 13:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case 15:return"return 1.0/sqrt(a);";case 18:return"return 1.0 / (1.0 + exp(-1.0 * a));";case 16:return"return sin(a);";case 17:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case 19:return"return sqrt(a);";case 20:return"return a * a;";case 21:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case 22:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function UJ(e,t=!1){if(null===e)return null;if("linear"===e)return BJ(8);if("relu"===e)return BJ(12,t);if("elu"===e)return BJ(4,t);if("relu6"===e)return BJ(13,t);if("prelu"===e)return WJ(14,t);if("sigmoid"===e)return BJ(18,t);if("leakyrelu"===e)return BJ(14,t);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function VJ(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}function GJ(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function jJ(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}var HJ="\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let mod: i32 = a % b;\n    if (sign < 0. && mod != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));\n  }\n";function qJ(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;default:Jp.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function KJ(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=Jp.computeStrides(e),r=GJ(t),a=[];for(let e=0;e<t;e++)a.push(`d${e}`);return 1===n.length?"    fn getCoordsFromIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }":`\n    fn getCoordsFromIndex(index : i32) -> ${r} {\n      ${"var index2 = index;"+n.map(((e,t)=>`let ${a[t]} = index2 / uniforms.outShapeStrides[${t}]; ${t===n.length-1?`let ${a[t+1]} = index2 - ${a[t]} * uniforms.outShapeStrides[${t}]`:`index2 = index2 - ${a[t]} * uniforms.outShapeStrides[${t}]`};`)).join("")}\n      return ${r}(${a.join(",")});\n    }\n  `}var XJ={};il(XJ,{ArrayBufferToTypedArray:()=>aQ,GPUBytesPerElement:()=>rQ,computeDispatch:()=>JJ,computeWorkGroupSizeForConv2d:()=>QJ,computeWorkGroupSizeForMatMul:()=>eQ,computeWorkPerThreadForConv2d:()=>tQ,flatDispatchLayout:()=>nQ,isWebGPUSupported:()=>sQ,tilesFitEvenlyIntoShape:()=>YJ});var ZJ=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function YJ(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]==0))}function JJ(e,t,n=[1,1,1],r=[1,1,1]){let[a,s,i]=[Math.ceil(ZJ(e.x.map((e=>t[e])))/(n[0]*r[0])),e.y?Math.ceil(ZJ(e.y.map((e=>t[e])))/(n[1]*r[1])):1,e.z?Math.ceil(ZJ(e.z.map((e=>t[e])))/(n[2]*r[2])):1];return[a,s,i]}function QJ(e,t){let n=ZJ(e.x.map((e=>t[e]))),r=ZJ(e.y.map((e=>t[e])));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function eQ(e,t,n){return 1===e?[32,1,1]:1===n?[1,32,1]:[8,8,1]}function tQ(e,t){let n=ZJ(e.x.map((e=>t[e]))),r=ZJ(e.y.map((e=>t[e])));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function nQ(e){return{x:e.map(((e,t)=>t))}}function rQ(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function aQ(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function sQ(){return("undefined"!=typeof window||"undefined"!=typeof WorkerGlobalScope)&&!!navigator.gpu}function iQ(e,t,n,r){return Jp.assert(r%4==0&&4===e[0],(()=>"tileInner must be divisible by 4. And ColPerThread must be 4")),`\n  var<workgroup> mm_Asub : array<array<vec4<f32>, ${r/e[0]}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${r}>;\n\n  let RowPerThread = ${e[1]};\n  let ColPerThread = ${e[0]};\n  let TileInner = ${r};\n\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n\n    let tileRow = ${1===t?"0":"i32(localId.y) * RowPerThread"};\n    let tileCol = i32(localId.x);\n\n    let globalRow = ${1===t?"0":"i32(globalId.y) * RowPerThread"};\n    let globalCol = i32(globalId.x);\n    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n    var acc: array<vec4<f32>, RowPerThread>;\n    var ACached : vec4<f32>;\n    var BCached : array<vec4<f32>, 4>;\n\n    // Loop over shared dimension.\n    var globalColA = tileCol;\n    let RowPerThreadB = TileInner / i32(workGroupSizeY);\n    let tileRowB = i32(localId.y) * RowPerThreadB;\n    for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);\n        }\n        globalColA = globalColA + TileInner / ColPerThread;\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {\n            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];\n            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];\n            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];\n            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];\n\n            for (var i = 0; i < RowPerThread; i = i + 1) {\n                ACached = mm_Asub[tileRow + i][k];\n                acc[i] = BCached[0] * ACached.x + acc[i];\n                acc[i] = BCached[1] * ACached.y + acc[i];\n                acc[i] = BCached[2] * ACached.z + acc[i];\n                acc[i] = BCached[3] * ACached.w + acc[i];\n            }\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        mm_write(globalRow + innerRow,\n                 globalCol,\n                 acc[innerRow], globalId);\n    }\n  }`}var oQ=class{constructor(e,t,n,r=null,a=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},1===t[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let i=null!=r,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=1===t[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],r=[this.tileAOuter,this.tileInner],a=[this.tileInner,this.tileBOuter];return[YJ(r,this.aShape.slice(1)),YJ(a,n.slice(1))]}getUserCode(){let e=this.fitA?"return A[batch * batchASize + row * uniforms.dimInner / 4 + col]":"if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n            return A[batch * batchASize + row * uniforms.dimInner / 4 + col];\n        }\n        return vec4<f32>(0.0)",t=this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];\n        }\n        return vec4<f32>(0.0)",n="",r="";if(this.activation){let e=UJ(this.activation,this.isVec4);n=this.hasPreluActivationWeights?`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n              ${e}\n            }`,r="value = activation(value, outCoord);"}return`\n      ${n}\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${e};\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / 4;\n        let batch = i32(globalId.z);\n        ${t};\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {\n        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])\n        {\n          var value = valueIn;\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col * 4);\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${r}\n          setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], value);\n        }\n      }\n      ${iQ(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner)}\n    `}};function lQ(e,t){let n=t[1]*e[1],r=t[0]*e[0],a=n>r?n:r;return`\n    var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${a}>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileRow = i32(localId.y) * ${e[1]};\n      let tileCol = i32(localId.x) * ${e[0]};\n\n      let globalRow = i32(globalId.y) * ${e[1]};\n      let globalCol = i32(globalId.x) * ${e[0]};\n\n      let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n\n      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;\n      var ACached : f32;\n      var BCached : array<f32, ${e[0]}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n\n      let ColPerThreadA = ${a} / ${t[0]};\n      let tileColA = i32(localId.x) * ColPerThreadA;\n      let RowPerThreadB = ${a} / ${t[1]};\n      let tileRowB = i32(localId.y) * RowPerThreadB;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileColA + innerCol;\n\n            mm_Asub[inputRow][inputCol] = mm_readA(\n                globalRow + innerRow,\n                t * ${a} + inputCol, globalId);\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n\n            mm_Bsub[inputRow][inputCol] = mm_readB(\n              t * ${a} + inputRow,\n              globalCol + innerCol, globalId);\n          }\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${a}; k = k + 1) {\n          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n            ACached = mm_Asub[tileRow + innerRow][k];\n            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        workgroupBarrier();\n      }\n\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n\n          if ((globalCol + innerCol) < uniforms.dimBOuter &&\n              (globalRow + innerRow) < uniforms.dimAOuter) {\n            mm_write(globalRow + innerRow,\n                     globalCol + innerCol,\n                     acc[innerRow][innerCol], globalId);\n          }\n        }\n      }\n    }\n  `}var uQ=class{constructor(e,t,n,r=!1,a=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=r?e[1]:e[2];this.workGroupSize=eQ(t[1],0,t[2]),(1===t[1]||1===t[2])&&(n=1),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),Jp.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let u=null!=s,d=null!=o;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=r,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d;let c=this.outputShape[2],p=this.transposeB?[this.outputShape[0],c,l]:[this.outputShape[0],l,c];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${r}_${a}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){let t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread,r=t>n?t:n;1===this.outputShape[1]&&(r*=4),Jp.assert(r%this.workGroupSize[0]==0&&r%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));let a=[r,n];return[YJ([t,r],this.aShape.slice(1)),YJ(a,e.slice(1))]}getUserCode(){let e,t;e=!1===this.transposeA?this.fitA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A[batch * batchASize + row * uniforms.dimInner + col];\n           }\n           return 0.0;":this.fitA?"return A[batch * batchASize + col * uniforms.dimAOuter + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A[batch* batchASize + col * uniforms.dimAOuter + row];\n           }\n           return 0.0;",t=!1===this.transposeB?this.fitB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + row * uniforms.dimBOuter + col];\n           }\n           return 0.0;":this.fitB?"return B[batch * batchBSize + col * uniforms.dimInner + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B[batch * batchBSize + col * uniforms.dimInner + row];\n           }\n           return 0.0;";let n="",r="";if(this.activation){let e=UJ(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        ${e}\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        var value = valueIn;\n        let batch = i32(globalId.z);\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      ${this.outputShape[1]>1?lQ([this.workPerThread,this.workPerThread,1],this.workGroupSize):function(e){return`\n    let TileSize = ${4*e[0]};\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;\n\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        let colA = t * TileSize + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),\n                                mm_readA(globalRow, colA + 1, globalId),\n                                mm_readA(globalRow, colA + 2, globalId),\n                                mm_readA(globalRow, colA + 3, globalId));\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileSize / 4; k = k + 1) {\n          let rowB = t * TileSize + k * 4;\n          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),\n                              mm_readB(rowB + 1, globalCol, globalId),\n                              mm_readB(rowB + 2, globalCol, globalId),\n                              mm_readB(rowB + 3, globalCol, globalId));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {\n        mm_write(globalRow, globalCol, acc, globalId);\n      }\n    }\n  `}(this.workGroupSize)}\n    `}},dQ=class{constructor(e,t=!1,n=!1,r=null,a=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize);let i=null!=r,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e,t;e=!1===this.transposeA?"return A[batch * batchASize + row * uniforms.dimInner + col];":"return A[batch * batchASize + col * uniforms.dimAOuter + row];",t=!1===this.transposeB?"return B[batch * batchBSize + row * uniforms.dimBOuter + col];":"return B[batch * batchBSize + col * uniforms.dimInner + row];";let n="",r="";if(this.activation){let e=UJ(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,r="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        ${e}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {\n        var value = valueIn;\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n        ${r}\n        setOutputAtCoords(batch, row, col, value);\n      }\n      \n    var<workgroup> sumValues : array<f32, workGroupSizeX>;\n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {\n        let dataA = mm_readA(batch, row, k);\n        let dataB = mm_readB(batch, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  \n    `}},cQ=class{constructor(e,t,n,r=null,a=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,16,1],Jp.assert(e[1]<=16||t[2]<=16,(()=>"This program can be only used when A width or B Height are small")),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(2*n[1]/this.workGroupSize[1]),n[0]];let i=null!=r;i&&this.variableNames.push("bias");let o=null!=s;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=UJ(this.activation,!1);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            let b = getPreluActivationWeightsByOutputCoords(outCoord);\n            ${n}\n            }`:`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            ${n}\n        }`,t="value = activation(value, outCoord);"}return`\n      ${e}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n          return A[batch * batchASize + row * uniforms.dimInner + col];\n        }\n        return 0.0;\n      }\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return B[batch * batchBSize + row * uniforms.dimBOuter + col];\n         }\n         return 0.0;\n      }\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col);\n          var value = valueIn;\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, value);\n        }\n      }\n      ${function(e){let t=e[1]/2,n=e[0],r=t>n?t:n;return`\n  var<workgroup> mm_Asub1 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${r}>;\n  var<workgroup> mm_Asub2 : array<array<f32, ${r}>, ${t}>;\n  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${r}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Introduces two shared memory buffers, some logical threads could handle\n  // arithmetic operations and others handle IO operations between barrier api,\n  // makes ALUs and load/store units work simultaneously, could improves\n  // the performance.\n  \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = tileRow;\n    for (var t = 0; t < numTiles; t = t + 1) {\n      if (t == 0) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        }\n      } else {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n      if (t != 0) {\n        t = t + 1;\n      }\n\n      if (t < numTiles) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub2[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${r};\n          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${r};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${r}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};\n    if (tileRow >= ${t} && writeCol >= 0) {\n      mm_write(writeCol, globalCol, acc, globalId);\n    }\n  }\n  `}(this.workGroupSize)}\n    `}};function pQ(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Jp.sizeFromShape(r.shape),i=Jp.inferFromImplicitShape(a,s),o=Jp.sizeFromShape(i);return Jp.assert(s===o,(()=>`The new shape (${i}) has ${o} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var hQ={kernelName:Uc,backendName:"webgpu",kernelFunc:pQ};function fQ({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,d=t.shape.length,c=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[d-1]:t.shape[d-2],h=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Jp.sizeFromShape(m),A=Jp.sizeFromShape(g),b=zm.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);Jp.assert(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));let x,w=n?[y,c,h]:[y,h,c],v=r?[A,f,p]:[A,p,f],k=pQ({inputs:{x:e},backend:a,attrs:{shape:w}}),I=pQ({inputs:{x:t},backend:a,attrs:{shape:v}}),S=[k,I],N=Math.max(y,A),T=c%4==0&&f%4==0&&!n&&!r&&f>=32;x=h*f<=32?new dQ([N,h,f],n,r,s,l,i):n||r||!(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||c>=2*h))?T?new oQ(w,[N,h,f],Cu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,l,i):new uQ(w,[N,h,f],Cu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,r,s,l,i):new cQ(w,v,[N,h,f],s,l,i);let C=[k,I];s&&C.push(s),i&&C.push(i);let E=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[c]}];"leakyrelu"===l&&(E.push({type:"float32",data:[o]}),x.uniforms+=" alpha : f32,");let _=a.runWebGPUProgram(x,C,e.dtype,E),R=pQ({inputs:{x:_},backend:a,attrs:{shape:b}});S.push(_);for(let e of S)a.disposeData(e.dataId);return R}var mQ={kernelName:zp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=r;return fQ({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:c,activation:d})}},gQ=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=$v.assertAndGetBroadcastShape(t,n),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${WJ(this.op,!1)}\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},yQ=class{constructor(e,t,n,r){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[256,1,1],this.outputShape=$v.assertAndGetBroadcastShape(t,n),this.dispatchLayout=nQ(this.outputShape),this.lastDimensionSize=r?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=r,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){let e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);\n         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];\n         let b = getBByOutputCoords(coords);`;return`\n        fn binaryOperation(a : f32, b : f32) -> f32 {\n          ${WJ(this.op,!1)}\n        }\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          // Fill in the shared memory buffer. Here we need a loop to make sure\n          // that all data in A|B are uploaded when |sharedMemorySize| is larger\n          // than work group size.\n          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n            let flatIndex = index * ${this.workPerThread} + i;\n            if(flatIndex < uniforms.size) {\n              let coords = getCoordsFromIndex(flatIndex);\n\n              ${t}\n              setOutputAtIndex(flatIndex, binaryOperation(a, b));\n            }\n          }\n        }\n        `}},AQ=class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=$v.assertAndGetBroadcastShape(t,n),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`\n      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n        ${WJ(this.op,this.isVec4)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n    `}},bQ=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=$v.assertAndGetBroadcastShape(t,n),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOperation(a : f32, b : f32) -> f32 {\n        ${WJ(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          let b = getBByOutputIndex(index);\n          setOutputAtIndex(index, binaryOperation(a, b));\n        }\n      }\n      `}};function xQ(e,t,n){if(Jp.arraysEqual(t,n)&&Jp.sizeFromShape(t)%4==0)return new AQ(e,t,n);let r=1===t.length&&n.length>1&&t[0]<1024,a=1===n.length&&t.length>1&&n[0]<1024;return r||a?new yQ(e,t,n,a):new bQ(e,t,n)}function wQ(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var vQ={kernelName:qd,backendName:"webgpu",kernelFunc:wQ};function kQ(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.tensorMap.get(s.dataId),o=wQ({inputs:{x:r},backend:n}),l=wQ({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var IQ={kernelName:sd,backendName:"webgpu",kernelFunc:kQ},SQ=class{constructor(e,t){this.variableNames=["A"],this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${BJ(this.op,!1)}\n      }\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}};function NQ({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:r,backend:a})=>{let{x:s}=r,i=a,o=n||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=t){let e=i.tensorMap.get(s.dataId),n=t(e.values,o);return i.makeTensorInfo(s.shape,o,n)}let l=new SQ(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function TQ({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:r}){return({inputs:a,backend:s})=>{let{a:i,b:o}=a,l=s;if(n&&"complex64"===i.dtype){let t,n,r=l.tensorMap.get(i.dataId),a=l.tensorMap.get(o.dataId);if(0!==e)[t,n]=[[r.complexTensorInfos.real,a.complexTensorInfos.real],[r.complexTensorInfos.imag,a.complexTensorInfos.imag]].map((t=>{let[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:i.shape},s={dataId:r.dataId,dtype:r.dtype,shape:o.shape},u=xQ(e,i.shape,o.shape);return l.runWebGPUProgram(u,[a,s],Wh(n.dtype,r.dtype))}));else{let e=new gQ(17,i.shape,o.shape),s=new gQ(18,i.shape,o.shape),u=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape}];t=l.runWebGPUProgram(e,u,"float32"),n=l.runWebGPUProgram(s,u,"float32")}let s=kQ({inputs:{real:t,imag:n},backend:l});return l.disposeData(t.dataId),l.disposeData(n.dataId),s}let u=r||Wh(i.dtype,o.dtype);if(("string"===i.dtype||"string"===o.dtype||l.shouldExecuteOnCPU([i,o]))&&null!=t){let e=l.tensorMap.get(i.dataId).values,n=l.tensorMap.get(o.dataId).values,r="string"===i.dtype?$v.fromUint8ToStringArray(e):e,a="string"===i.dtype?$v.fromUint8ToStringArray(n):n,[s,d]=t(i.shape,o.shape,r,a,u);return l.makeTensorInfo(d,u,s)}let d=xQ(e,i.shape,o.shape);return l.runWebGPUProgram(d,[i,o],u)}}var{addImpl:CQ,ceilImpl:EQ,concatImpl:_Q,equalImpl:RQ,expImpl:MQ,expm1Impl:$Q,floorImpl:FQ,gatherNdImpl:OQ,gatherV2Impl:zQ,greaterEqualImpl:DQ,greaterImpl:PQ,lessEqualImpl:LQ,lessImpl:WQ,logImpl:BQ,maxImpl:UQ,maximumImpl:VQ,minimumImpl:GQ,multiplyImpl:jQ,negImpl:HQ,notEqualImpl:qQ,prodImpl:KQ,rangeImpl:XQ,rsqrtImpl:ZQ,simpleAbsImpl:YQ,sliceImpl:JQ,stridedSliceImpl:QQ,stringNGramsImpl:e1,subImpl:t1,tileImpl:n1,topKImpl:r1,transposeImpl:a1,uniqueImpl:s1}=Mz,i1=NQ({opType:0,cpuKernelImpl:YQ}),o1={kernelName:$u,backendName:"webgpu",kernelFunc:i1},l1=TQ({opSnippet:1,cpuKernelImpl:CQ,supportsComplex:!0}),u1={kernelName:zu,backendName:"webgpu",kernelFunc:l1},d1=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)}));let t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}},c1={kernelName:Du,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,r=t;if(1===r.length)return wQ({inputs:{x:r[0]},backend:n});let a=r.map((e=>e.dtype)).reduce(((e,t)=>Wh(e,t))),s=r.map((e=>e.shape)),i=new d1(s);return n.runWebGPUProgram(i,r,a)}},p1=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32, infinityValue : f32,",this.size=!0;let r=[t];$v.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.length),this.op="min"===n?"<":">";let[a]=$v.computeOutAndReduceShapes(e,r);this.outputShape=0===a.length?[1]:a,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=e=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape[${e}]`;return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;\n      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n    \n\n      // In order to get a flattened index into the input tensor, we need to\n      // add back the index along the reduced dimension to |outputCoords|.\n      // This function outputs the offset to the first value along\n      // |axis| and the stride to get the next value of the input along |axis|.\n      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        var i = ${this.outputShape.length-1};\n\n        var stride = 1;\n        var inputStride = 1;\n        var offset = 0;\n\n        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {\n          let length = ${e(`${this.inputShape.length} - r`)};\n          if (${this.inputShape.length} - r == uniforms.axis) {\n            inputStride = stride;\n          } else {\n            offset = offset + ${(e=>1===this.outputShape.length?e:`${e}[i]`)("outputCoords")} * stride;\n            i = i - 1;\n          }\n          stride = stride * length;\n        }\n\n        return vec2<i32>(offset, inputStride);\n      }\n\n      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{\n        return coordInfo[0] + coordInfo[1] * index;\n      }\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let outputIndex = index / i32(workGroupSizeX);\n        let coordInfo = getInputCoordInfo(outputIndex);\n        let Length = ${e("uniforms.axis")};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n\n        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n            k = k + i32(workGroupSizeX)) {\n          let candidate = f32(x[getInputIndex(coordInfo, k)]);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(Length), workGroupSizeX);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}},h1=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`\n      let TILE_DIM = ${this.workGroupSize[0]};\n      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(local_invocation_id) localId : vec3<u32>,\n              @builtin(workgroup_id) workgroupId : vec3<u32>) {\n        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);\n        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = A[y * width + x];\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);\n        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}},f1=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=GJ(this.outputShape.length),t=function(e){let t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let t=0;t<e.length;t++)n[e[t]]=`resRC[${t}]`;return n.join()}(this.newDim);return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}};function m1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=a.shape[s[e]];if(n.shouldExecuteOnCPU([a])){let e=i.tensorMap.get(a.dataId).values,t=a1(e,a.shape,a.dtype,s,l);return n.makeTensorInfo(l,a.dtype,t)}if(2===a.shape.length&&Jp.arraysEqual(s,[1,0])){let e=new h1(a.shape,s);return i.runWebGPUProgram(e,[a],a.dtype)}let u=new f1(a.shape,s);return i.runWebGPUProgram(u,[a],a.dtype)}var g1={kernelName:Cp,backendName:"webgpu",kernelFunc:m1},y1={kernelName:Wu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Jp.parseAxisParam(s,a.shape),o=$v.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=m1({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=$v.getInnerMostAxes(i.length,l.shape.length)),$v.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let d=new p1(l.shape,i[0],"max"),c=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",c);return u.forEach((e=>n.disposeData(e.dataId))),p}},A1={kernelName:Bu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=Jp.parseAxisParam(s,a.shape),o=$v.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(l=m1({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=$v.getInnerMostAxes(i.length,l.shape.length)),$v.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let d=new p1(l.shape,i[0],"min"),c=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(d,[l],"int32",c);return u.forEach((e=>n.disposeData(e.dataId))),p}},b1=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return"avg"===this.poolType&&(t="resultValue / count"),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputAtIndex(index, ${t});\n        }\n      }\n    `}},x1=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    "}},w1={kernelName:qu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r,u=$v.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Jp.arraysEqual(u.inShape,u.outShape))return wQ({inputs:{x:a},backend:n});let d,c=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return 1===u.filterHeight&&1===u.filterWidth?d=new x1(u):(d=new b1(u,"avg"),c.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(d,[a],a.dtype,c)}},v1={kernelName:Yu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return fQ({a,b:s,transposeA:i,transposeB:o,backend:n})}},k1=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${GJ(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e,t=GJ(this.rank),n=function(e){if(1===e)return"sourceLoc";if(e<=6)return I1.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${I1[t]} = uniforms.start[${t}] + coords.${I1[t]};`)),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          var sourceLoc : ${t};\n          let coords = getCoordsFromIndex(index);\n          ${e.join("\n")}\n          setOutputAtIndex(index, getSource(${n}));\n        }\n      }\n    `}},I1=["x","y","z","w","u","v"];function S1(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=Qm.parseSliceParams(a,s,i);if(Qm.assertParamsValid(a,o,l),n.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=n.tensorMap.get(a.dataId),t=JQ(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}if(0===Jp.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);let u=new k1(o,l),d=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[a],a.dtype,d)}var N1={kernelName:ep,backendName:"webgpu",kernelFunc:S1},T1={kernelName:Ju,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Jp.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=$v.getReshaped(a.shape,s,o),u=$v.getPermuted(l.length,s.length),d=$v.getReshapedPermuted(a.shape,s,o),c=$v.getSliceBeginCoords(i,s.length),p=$v.getSliceSize(d,i,s.length),h=[],f=pQ({inputs:{x:a},backend:n,attrs:{shape:l}}),m=m1({inputs:{x:f},backend:n,attrs:{perm:u}}),g=pQ({inputs:{x:m},backend:n,attrs:{shape:d}}),y=S1({inputs:{x:g},backend:n,attrs:{begin:c,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeData(e.dataId))),y}},C1=TQ({opSnippet:10,dtype:"bool",cpuKernelImpl:qQ}),E1={kernelName:Nc,backendName:"webgpu",kernelFunc:C1};function _1(e){let{inputs:t,backend:n}=e,{input:r}=t;return wQ({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.real},backend:n})}var R1={kernelName:Lc,backendName:"webgpu",kernelFunc:_1},M1={kernelName:nd,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return wQ({inputs:{x:s},backend:r});let t=Tb(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=kQ({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeData(n.dataId),a}if("complex64"===s.dtype){let t=_1({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeData(t.dataId),n}if(!Jp.hasEncodingLoss(s.dtype,i)){let e=wQ({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){let n=new SQ(e.shape,22),r=t.runWebGPUProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){let e=r.makeTensorInfo([],"bool",Jp.getTypedArrayFromDType("bool",1)),t=C1({inputs:{a:s,b:e},backend:r});return r.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},$1=NQ({opType:1,cpuKernelImpl:EQ}),F1={kernelName:rd,backendName:"webgpu",kernelFunc:$1},O1=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue : vec4<f32>;\n          for (var i = 0; i < 4; i = i + 1) {\n            if (isnan(value[i])) {\n              clampedValue[i] = value[i];\n            } else {\n              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);\n            }\n          }\n\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    "}},z1=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    "}},D1={kernelName:ad,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=a,l=[{type:"float32",data:[i]},{type:"float32",data:[o]}];return t=Jp.sizeFromShape(s.shape)%4==0?new O1(s.shape):new z1(s.shape),r.runWebGPUProgram(t,[s],s.dtype,l)}},P1=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=$v.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}};function L1(e){let{inputs:t,backend:n}=e,{input:r}=t;return wQ({inputs:{x:n.tensorMap.get(r.dataId).complexTensorInfos.imag},backend:n})}var W1={kernelName:Xd,backendName:"webgpu",kernelFunc:L1};function B1(e,t,n){let r=e[0].dtype;if("complex64"===r){let r=e.map((e=>_1({inputs:{input:e},backend:n}))),a=e.map((e=>L1({inputs:{input:e},backend:n}))),s=B1(r,t,n),i=B1(a,t,n),o=kQ({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeData(e.dataId))),a.forEach((e=>n.disposeData(e.dataId))),n.disposeData(s.dataId),n.disposeData(i.dataId),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){let a=e.map((e=>{let r=Jp.sizeFromShape(e.shape.slice(t));return pQ({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=$v.computeOutShape(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=_Q(s,i,r,o),u=$v.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeData(e.dataId))),d}let{tensors2D:s,outShape:i}=function(e,t,n){let r=$v.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>pQ({inputs:{x:e},backend:n,attrs:{shape:[Jp.sizeFromShape(e.shape.slice(0,t)),Jp.sizeFromShape(e.shape.slice(t))]}}))),outShape:r}}(e,t,n),o=s.map((e=>e.shape)),l=new P1(o),u=[],d=new Array(o.length-1);if(d.length>0){d[0]=o[0][1],u.push({type:"int32",data:[d[0]]});for(let e=1;e<d.length;e++)d[e]=d[e-1]+o[e][1],u.push({type:"int32",data:[d[e]]})}let c=n.runWebGPUProgram(l,s,s[0].dtype,u);s.forEach((e=>n.disposeData(e.dataId)));let p=pQ({inputs:{x:c},backend:n,attrs:{shape:i}});return n.disposeData(c.dataId),p}function U1(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=Jp.parseAxisParam(a,t[0].shape)[0],i=$v.computeOutShape(t.map((e=>e.shape)),s);if(0===Jp.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter((e=>Jp.sizeFromShape(e.shape)>0));if(1===o.length)return wQ({inputs:{x:o[0]},backend:n});let l=o.map((e=>e.shape));return $v.assertParamsConsistent(l,s),B1(o,s,n)}var V1={kernelName:od,backendName:"webgpu",kernelFunc:U1},G1=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,\n      dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=e.outShape,Jp.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},1===this.outputShape[1]?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.hasLeakyreluAlpha=a,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),this.tileAOuter=1===this.outputShape[1]?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}_${this.elementsPerThread}`}getShapeFit(){let e=[this.tileAOuter,this.tileInner],t=[this.tileInner,this.tileBOuter],n=this.outputShape[1]*this.outputShape[2],r=this.outputShape[3],a=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[YJ(e,[n,a]),YJ(t,[a,r])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getIndexFromCoords4D(coord, uniforms.xShape);\n    let divBy4Remainder${e} = flatIndex${e} % 4;\n    let divBy4Index${e} = flatIndex${e} / 4;\n    let curData${e} = x[divBy4Index${e}];\n    if (divBy4Remainder${e} == 0) {\n      temp = curData${e};\n    } else {\n      // TODO: This could end up being a redundant load with another one in\n      // the same shader invocation. Perhaps there's an opportunity for\n      // optimization\n      let nextData${e} = x[divBy4Index${e} + 1];\n      if (divBy4Remainder${e} == 1) {\n        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);\n      } else if (divBy4Remainder${e} == 2) {\n        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);\n      } else if (divBy4Remainder${e} == 3) {\n        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);\n      }\n    }\n    `}getUserCode(){let e=iQ(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner),t=`let outRow = r / uniforms.outShape[2];\n        let outCol = r % uniforms.outShape[2];\n        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);\n        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];\n        let inChCoord = c % uniforms.xShape[3];\n        var coord = vec4<i32>(\n            batch,\n            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n            inChCoord);\n        var resData = vec4<f32>(0.0);\n        ${this.convInfo.inChannels%4==0?"// The bounds checking is always needed since we use it to pad zero for\n          // the 'same' padding type.\n          if (coordsInBounds4D(coord, uniforms.xShape)) {\n            resData = x[getIndexFromCoords4D(coord, uniforms.xShape) / 4];\n          } else {\n            resData = vec4<f32>(0.0); }":`var temp = vec4<f32>(0.0);\n          ${this.getSampleAWithRemainder(1)}\n          resData = temp;\n          if (WCol == (uniforms.filterDims[1] - 1)) {\n            coord = vec4<i32>(\n              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);\n              ${this.getSampleAWithRemainder(2)}\n            if (inChCoord == 0) {\n              resData = vec4<f32>(resData.xyz, temp.x);\n            } else if (inChCoord == 1) {\n              resData = vec4<f32>(resData.xy, temp.xy);\n            } else {\n              resData = vec4<f32>(resData.x, temp.xyz);\n            }\n          }\n          `}\n        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {\n          ${t}\n         }\n         return vec4<f32>(0.0);\n        `,r=this.fitB?"return W[row * uniforms.dimBOuter / 4 + col];":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W[row * uniforms.dimBOuter / 4 + col];\n         }\n         return vec4<f32>(0.0);\n        ",a="",s="";if(this.activation){let e=UJ(this.activation,this.isVec4);if(this.hasPreluActivationWeights)a=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${e}\n        }`;else{if(this.hasLeakyreluAlpha)throw a=`fn activation(outCoord: vec4<f32>) -> vec4<f32> {\n          let b = getLeakyreluAlphaByOutputCoords(outCoord);\n          ${e}\n        }`,new Error("Leakyrelu is not supported.");a=`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          ${e}\n        }`}s="value = activation(value, outCoord);"}return`\n        ${a}\n        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          let r = row;\n          let c = col * 4;\n          var batch = i32(globalId.z);\n          ${n}\n        }\n\n        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          ${r}\n        }\n\n        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {\n          var batch = i32(globalId.z);\n          var value = valueInput;\n          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)\n          {\n            let outCoord = vec4<i32>(\n              batch,\n              row / uniforms.outShape[2],\n              row % uniforms.outShape[2],\n              col * 4);\n            ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n            ${s}\n            setOutputAtCoords(outCoord[0], outCoord[1], outCoord[2], outCoord[3],\n              value);\n          }\n        }\n        ${e}\n      `}},j1=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,Jp.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=QJ(this.dispatchLayout,this.outputShape),this.elementsPerThread=tQ(this.dispatchLayout,this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;Jp.assert(n%this.workGroupSize[0]==0&&n%this.workGroupSize[1]==0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));let r=[e,n],a=[n,t],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[YJ(r,[s,o]),YJ(a,[o,i])]}getUserCode(){let e=lQ(this.elementsPerThread,this.workGroupSize),t="\n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);\n    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];\n    let coord = vec4<i32>(\n        batch,\n        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n        col % uniforms.xShape[3]);\n    // The bounds checking is always needed since we use it to pad zero for the\n    // 'same' padding type.\n    if(coordsInBounds4D(coord, uniforms.xShape)) {\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;",n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${t}\n    }\n    return 0.0;\n    `,r=this.fitB?"return W[row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W[row * uniforms.dimBOuter + col];\n\t }\n\t return 0.0;\n\t ",a="",s="";if(this.activation){let e=UJ(this.activation,!1);a=this.hasPreluActivationWeights?`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {\n                  let b = getPreluActivationWeightsByOutputCoords(outCoord);\n                  ${e}\n                }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n                    ${e}\n                  }\n                `,s="value = activation(value, outCoord);"}return`\n    ${a}\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      ${n}\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      ${r}\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n      ${s}\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n    ${e}\n  `}},H1=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),Jp.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=r,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=UJ(this.activation);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n               let b = getPreluActivationWeightsByOutputCoords(outCoord);\n               ${n}\n             }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n                    ${n}\n                  }\n                `,t="value = activation(value, outCoord);"}return`\n      ${e}\n      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if(coordsInBounds4D(coord, uniforms.xShape)) {\n          return getX(batch, row, col, chan);\n        }\n        return 0.0;\n      }\n\n      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n        let coord = vec4<i32>(row, col, xChannel, outChannel);\n        if(coordsInBounds4D(coord, uniforms.wShape)) {\n          return getW(row, col, xChannel, outChannel);\n        }\n        return 0.0;\n      }\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          ${this.addBias?"value = value + getBiasByOutputCoords(outCoord);":""}\n          ${t}\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let outChannel = coords[3];\n\n        var acc = 0.0;\n\n        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {\n              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n              let v = readInp(batch, coordRow, coordCol, xChannel);\n              let f = readFilt(row, col, xChannel, outChannel);\n              acc = acc + v * f;\n            }\n          }\n        }\n\n        writeResult(batch, coords[1], coords[2], outChannel, acc);\n      }\n    `}},q1=class{constructor(e,t){this.variableNames=["A"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n      inChannels : i32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n      for(var i = 0; i<${this.workPerThread}; i = i + 1) {\n        let flatIndex = index * ${this.workPerThread} + i;\n\n        let rc = getCoordsFromIndex(flatIndex);\n\n        if(flatIndex < uniforms.size) {\n          let blockIndex = rc[0];\n          let pos = rc[1];\n\n          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];\n          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;\n          var value = 0.0;\n          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {\n            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -\n              uniforms.pad[0];\n            let d1 = offsetX + uniforms.dilation[0] * ((pos %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n            let ch = pos % uniforms.inChannels;\n            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {\n              value = getA(d0, d1, ch);\n            }\n          }\n          setOutputAtIndex(flatIndex, value);\n        }\n      }\n    }\n  `}};function K1({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=null!=a,d=null!=s;if(n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type||1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return function({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u,d=e.shape,c="channelsLast"===n.dataFormat;if(n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&"VALID"===n.padInfo.type){let a=n.inHeight*n.inWidth*n.inChannels;l=pQ({inputs:{x:e},backend:r,attrs:{shape:[1,n.batchSize,a]}}),u=pQ({inputs:{x:t},backend:r,attrs:{shape:[1,a,n.outChannels]}})}else l=pQ({inputs:{x:e},backend:r,attrs:{shape:[1,c?d[0]*d[1]*d[2]:d[0]*d[2]*d[3],n.inChannels]}}),u=pQ({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});let p=fQ({a:l,b:u,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),h=pQ({inputs:{x:p},backend:r,attrs:{shape:n.outShape}});return r.disposeData(l.dataId),r.disposeData(u.dataId),r.disposeData(p.dataId),h}({x:e,filter:t,convInfo:n,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});if(Cu().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&1===e.shape[0])return function({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:d,strideWidth:c,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:A}=n,b="channelsLast"===A,x=l*u*d,w=m*f,v=[w,x],k=[],I=pQ({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),S=pQ({inputs:{x:t},backend:r,attrs:{shape:[1,x,-1]}});k.push(I),k.push(S);let N=new q1(v,b),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[c,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[d*l]},{type:"int32",data:[d]}],C=r.runWebGPUProgram(N,[I],I.dtype,T),E=pQ({inputs:{x:C},backend:r,attrs:{shape:[1,v[0],v[1]]}});k.push(C),k.push(E);let _=[1,v[0],v[1]],R=new uQ(_,[1,w,n.outChannels],Cu().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!1,!1,a,o,s),M=_[2],$=[{type:"int32",data:[_[1]]},{type:"int32",data:[n.outChannels]},{type:"int32",data:[M]}],F=[E,S];a&&F.push(a),s&&F.push(s),"leakyrelu"===o&&(T.push({type:"float32",data:[i]}),R.uniforms+=" alpha : f32,");let O=r.runWebGPUProgram(R,F,E.dtype,$),z=pQ({inputs:{x:O},backend:r,attrs:{shape:b?[1,m,f,n.outChannels]:[1,n.outChannels,m,f]}});k.push(O);for(let e of k)r.disposeData(e.dataId);return z}({x:e,filter:t,convInfo:n,backend:r,bias:a,preluActivationWeights:s,leakyreluAlpha:i,activation:o});let c=Cu().getBool("WEBGPU_USE_NAIVE_CONV2D"),p=(n.inChannels%4==0||3===n.inChannels&&"VALID"===n.padInfo.type)&&n.outChannels%4==0,h=[n.padInfo.top,n.padInfo.left],f=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...h]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(c)l=new H1(n,u,o,d);else{l=p?new G1(n,u,o,d):new j1(n,u,o,d);let e=n.outShape[1]*n.outShape[2],t=n.outShape[3],r=n.filterHeight*n.filterWidth*n.inShape[3];f.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[r]})}let m=[e,t];return u&&m.push(a),d&&m.push(s),"leakyrelu"===o&&(f.push({type:"float32",data:[i]}),l.uniforms+=" alpha : f32,"),r.runWebGPUProgram(l,m,e.dtype,f)}var X1={kernelName:ld,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,c=$v.convertConv2DDataFormat(l);return K1({x:a,filter:s,convInfo:$v.computeConv2DInfo(a.shape,s.shape,i,u,o,d,!1,c),backend:r})}},Z1=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,Jp.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=QJ(this.dispatchLayout,this.outputShape),this.elementsPerThread=tQ(this.dispatchLayout,this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      \n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n      return 0.0;\n    }\n    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n      return 0.0;\n    }\n    let coord = vec4<i32>(\n        batch,\n        i32(xR),\n        i32(xC),\n        col % uniforms.outBackprop[3]);\n    return x[getIndexFromCoords4D(coord, uniforms.xShape)];\n    }\n    return 0.0;\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      let coordX = uniforms.filterDims.x - 1 -\n          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let coordY = uniforms.filterDims.y - 1 -\n          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n          coordX >= 0 && coordY >= 0) {\n        let coord = vec4<i32>(coordX, coordY, col,\n            row % uniforms.outBackprop[3]);\n        return W[getIndexFromCoords4D(coord, uniforms.wShape)];\n      }\n      return 0.0;\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)] = value;\n    }\n\n    ${lQ(this.elementsPerThread,this.workGroupSize)}\n  `}},Y1=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3;return`\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${this.isChannelsLast?3:1}];\n\n        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = dyR;\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = dyC;\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},J1={kernelName:dd,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{dy:s,filter:i}=n,{inputShape:o,strides:l,pad:u,dataFormat:d,dimRoundingMode:c}=a,p=$v.convertConv2DDataFormat(d),h=$v.computeConv2DInfo(o,i.shape,l,1,u,c,!1,p),f=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}];if(Cu().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))t=new Y1(h);else{t=new Z1(h);let e=h.inShape[1]*h.inShape[2],n=h.inShape[3],r=h.filterHeight*h.filterWidth*h.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[n]},{type:"uint32",data:[r]})}return r.runWebGPUProgram(t,[s,i],"float32",f)}},Q1=NQ({opType:2}),e0={kernelName:fd,backendName:"webgpu",kernelFunc:Q1},t0=NQ({opType:3}),n0={kernelName:md,backendName:"webgpu",kernelFunc:t0},r0=class{constructor(e,t,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[a]=t;this.outputShape=[a,n[0],n[1],e],this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===r?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,r,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${s});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${r};\n        let width_scale = ${i};\n        let in_y = ${a};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}},a0={kernelName:Ad,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,d=new r0(a.shape[3],s.shape,o,l),c=[{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[a,s,i],"float32",c)}},s0=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}},i0={kernelName:xd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),c=[{type:"int32",data:[s]}],p=new s0("NHWC"===i?[o,l,u,d]:[o,d,l,u],i);return n.runWebGPUProgram(p,[a],a.dtype,c)}},o0=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),Jp.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){let n=UJ(this.activation,this.isVec4);e=this.hasPreluActivation?`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n            ${n}\n          }\n        `,t="dotProd[i] = activation(dotProd[i], coords);"}return`\n      ${e}\n\n      \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {\n        let batch = 0;\n        let r = i32(globalId.x);\n        let c = i32(globalId.y) * 4;\n        let d2 = i32(globalId.z) * 4;\n        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;\n        let d1 = d2;\n        let q = 0;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n\n        var wVals : array<vec4<f32>, 9>;\n        wVals[0] = getW(0, 0, d1, q);\n        wVals[1] = getW(0, 1, d1, q);\n        wVals[2] = getW(0, 2, d1, q);\n        wVals[3] = getW(1, 0, d1, q);\n        wVals[4] = getW(1, 1, d1, q);\n        wVals[5] = getW(1, 2, d1, q);\n        wVals[6] = getW(2, 0, d1, q);\n        wVals[7] = getW(2, 1, d1, q);\n        wVals[8] = getW(2, 2, d1, q);\n\n        var xVals : array<array<vec4<f32>, 6>, 3>;\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          let xR = xRCorner + wR * uniforms.dilation[0];\n          for (var wC = 0; wC < 6; wC = wC + 1) {\n            let xC = xCCorner + wC * uniforms.dilation[1];\n            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {\n              xVals[wR][wC] = vec4<f32>(0.0);\n            } else {\n              xVals[wR][wC] = getX(batch, xR, xC, d1);\n            }\n          }\n        }\n\n        var dotProd : array<vec4<f32>, 4>;\n        dotProd[0] = vec4<f32>(0.0);\n        dotProd[1] = vec4<f32>(0.0);\n        dotProd[2] = vec4<f32>(0.0);\n        dotProd[3] = vec4<f32>(0.0);\n\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          for (var wC = 0; wC < 3; wC = wC + 1) {\n            let indexW = wR * 3 + wC;\n            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];\n            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];\n            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];\n            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];\n          }\n        }\n\n        for (var i = 0; i < 4; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d2);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            ${this.addBias?"dotProd[i] = dotProd[i] + getBiasByOutputCoords(coords);":""}\n            ${t}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n          }\n        }\n      }\n    `}},l0=class{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>,\n      inDims : vec2<i32>, filterHeight : i32, filterWidth : i32,\n      channelMul : i32,",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),Jp.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){let n=UJ(this.activation,!1);e=this.hasPreluActivation?`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n          let b = getPreluActivationWeightsByOutputCoords(outCoord);\n          ${n}\n        }`:`\n          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n            ${n}\n          }\n        `,t="dotProd = activation(dotProd, coords);"}return`\n      ${e}\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,\n          value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          setOutputAtCoords(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n        let d2 = coords[3];\n        let d1 = d2 / uniforms.channelMul;\n        let q = d2 - d1 * uniforms.channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n        let inputRowEnd = inputRowStart + uniforms.filterHeight *\n            uniforms.dilation[0];\n        let inputColEnd = inputColStart + uniforms.filterWidth *\n            uniforms.dilation[1];\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n\n        // Extract if checking out of for loop for performance.\n        if (inputRowStart >= 0 && inputColStart >= 0 &&\n          inputRowEnd < uniforms.inDims[0] &&\n              inputColEnd < uniforms.inDims[1]) {\n            // Here using a constant value |this.convInfo.filterHeight| instead\n            // of uniform value is in order to loop unrolling.\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          } else {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              if (xR < 0 || xR >= uniforms.inDims[0]) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                if (xC < 0 || xC >= uniforms.inDims[1]) {\n                  continue;\n                }\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          }\n\n        ${this.addBias?"dotProd = dotProd + getBiasByOutputCoords(coords);":""}\n        ${t}\n        writeResult(batch, coords[1], coords[2], d2, dotProd);\n      }\n    `}},u0={kernelName:wd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r,d=l;null==d&&(d=[1,1]);let c,p=$v.computeConv2DInfo(a.shape,s.shape,i,d,o,u,!0),h=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]}];return 1===p.batchSize&&p.inHeight===p.outHeight&&p.inWidth===p.outWidth&&1===p.strideHeight&&1===p.strideWidth&&p.filterHeight===p.filterWidth&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&3===p.filterHeight&&p.inChannels%4==0?c=new o0(p):(c=new l0(p),h.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.outChannels/p.inChannels]})),n.runWebGPUProgram(c,[a,s],a.dtype,h)}},d0=TQ({opSnippet:0,cpuKernelImpl:jQ,supportsComplex:!0}),c0={kernelName:Ic,backendName:"webgpu",kernelFunc:d0},p0=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=$v.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         let outputIndex = index / i32(workGroupSizeX);\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + i32(workGroupSizeX)) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), workGroupSizeX);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${n}\n        }\n       }\n     `}};function h0(e,t,n,r,a){let s=e.shape.length,i=[],o=Jp.parseAxisParam(t,e.shape),l=o,u=$v.getAxesPermutation(l,s),d=e;null!=u&&(d=m1({inputs:{x:e},attrs:{perm:u},backend:a}),l=$v.getInnerMostAxes(l.length,s),i.push(d)),$v.assertAxesAreInnerMostDims(r,l,s);let c,[p,h]=$v.computeOutAndReduceShapes(d.shape,l),f=p;if(n&&(f=$v.expandShapeToKeepDim(p,o)),"max"!==r&&"prod"!==r||!a.shouldExecuteOnCPU([d])){let t=Jp.sizeFromShape(h),n={windowSize:t,inSize:t,batchSize:Jp.sizeFromShape(d.shape)/t,outSize:1},s="mean"===r?"float32":Bh(e.dtype),o=[{type:"int32",data:[t]}],l=new p0(n,r),u=a.runWebGPUProgram(l,[d],s,o);i.push(u),c=pQ({inputs:{x:u},attrs:{shape:f},backend:a})}else{let t=a.tensorMap.get(d.dataId).values;switch(r){case"max":let n=UQ(t,Jp.sizeFromShape(h),f,e.dtype);c=a.makeTensorInfo(f,e.dtype,n);break;case"prod":let{outVals:s,outShape:i,outDtype:o}=KQ(d.shape,d.dtype,t,l);c=a.makeTensorInfo(i,o,s);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}return i.forEach((e=>a.disposeData(e.dataId))),c}function f0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return h0(a,s,i,"sum",n)}var m0={kernelName:op,backendName:"webgpu",kernelFunc:f0},g0={kernelName:Ed,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=$v.decodeEinsumEquation(a,s.length);$v.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:d}=$v.getEinsumComputePath(o,l),c=d.length,p=null,h=i.length,f=[];for(let e=0;e<c;++e){for(let t of d[e]){let e,{permutationIndices:r,expandDims:a}=$v.getEinsumPermutation(h,l[t]);$v.isIdentityPermutation(r)?e=s[t]:(e=m1({inputs:{x:s[t]},backend:n,attrs:{perm:r}}),f.push(e));let i=e.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);Jp.arraysEqual(e.shape,i)||(e=pQ({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===p?p=e:(p=d0({inputs:{a:e,b:p},backend:n}),f.push(p))}e<c-1&&(u[e]>=0&&(p=f0({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(let e of f)e!==p&&n.disposeData(e.dataId);return p}},y0=NQ({opType:4}),A0={kernelName:_d,backendName:"webgpu",kernelFunc:y0},b0=TQ({opSnippet:4,dtype:"bool",cpuKernelImpl:RQ}),x0={kernelName:$d,backendName:"webgpu",kernelFunc:b0},w0=NQ({opType:5,cpuKernelImpl:MQ,dtype:"float32"}),v0={kernelName:Fd,backendName:"webgpu",kernelFunc:w0};function k0(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(Jp.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),pQ({inputs:{x:s},backend:r,attrs:{shape:o}})}var I0={kernelName:Od,backendName:"webgpu",kernelFunc:k0},S0=NQ({opType:6,cpuKernelImpl:$Q}),N0={kernelName:zd,backendName:"webgpu",kernelFunc:S0},T0=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return"\n    \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  "}};function C0(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||Jp.inferDtype(a),"string"===s){let e=Jp.getArrayFromDType(s,Jp.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{let e=new T0(r),n=[{type:"float32",data:[a]}];return t.runWebGPUProgram(e,[],s,n)}}var E0={kernelName:Pd,backendName:"webgpu",kernelFunc:C0},_0=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    "}},R0={kernelName:Ld,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new _0(n.shape);return r.runWebGPUProgram(a,[n],n.dtype)}},M0=NQ({opType:7,cpuKernelImpl:FQ}),$0={kernelName:Wd,backendName:"webgpu",kernelFunc:M0},F0=TQ({opSnippet:12,dtype:"int32"}),O0={kernelName:Bd,backendName:"webgpu",kernelFunc:F0},z0=(e,t,n,r,a,s=!1)=>{let i=function(e,t,n,r=!1){let a=[];if(a.push(`\n    let workGroupSizeX = ${n.workGroupSize[0]}u;\n    let workGroupSizeY = ${n.workGroupSize[1]}u;\n    let workGroupSizeZ = ${n.workGroupSize[2]}u;\n\n    var<private> localId: vec3<u32>;\n    var<private> globalId: vec3<u32>;\n    var<private> numWorkgroups: vec3<u32>;\n\n    // Only used when the y/z dimension of workgroup size is 1.\n    fn getGlobalIndex() -> i32 {\n      if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {\n        return i32(globalId.x);\n      }\n\n      let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +\n          localId.y * workGroupSizeX + localId.x;\n      let workGroupID = (globalId - localId)/vec3<u32>(\n          workGroupSizeX, workGroupSizeY, workGroupSizeZ);\n\n      return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +\n        workGroupID.y * numWorkgroups.x + workGroupID.x) *\n        (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +\n        localInvocationIndex);\n    }\n  `),!0===r)return a.push(`\n      struct Uniform {\n        size            : i32,\n        numChannels     : i32,\n        outShapeStrides : vec2<i32>,\n        dispatchSize    : vec3<u32>,\n      };\n\n      @group(0) @binding(0) var<storage, write> result: array<${jJ(t.dtype,n.isVec4)}>;\n      @group(0) @binding(2) var<uniform> uniforms: Uniform;\n    `),[HJ,a.join("\n"),KJ(t.shape),n.getUserCode()].join("\n");let s="struct Uniforms { NAN : f32, ";n.variableNames.forEach(((t,n)=>{s+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${GJ(e[n].shape.length)}, `})),s+=`outShape : ${GJ(t.shape.length)}, `;let i=t.shape.length-1;s+=`\n       outShapeStrides: ${GJ(i)}, `,n.size&&(s+="size : i32, "),n.uniforms&&(s+=n.uniforms),s+="};",a.push(s),n.atomic?a.push("\n    @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n  "):a.push(`\n    @group(0) @binding(0) var<storage, write> result: array<${jJ(t.dtype,n.isVec4)}>;\n  `),n.variableNames.forEach(((t,r)=>{a.push(`\n    @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${jJ(e[r].dtype,n.isVec4)}>;\n    `)})),""!==s&&a.push(`\n    @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n    `);let[o,l]=function(e,t){let{x:n,y:r=[],z:a=[]}=t,s=e.length;if(n.length===s)return[`fn getOutputCoords() -> ${GJ(s)}{\n      let globalIndex = getGlobalIndex();\n      return getCoordsFromIndex(globalIndex);\n    }\n    `,s];let i="",o=[n,r,a],l=0;for(let e=0;e<o.length;e++){let t=o[e];if(0!==t.length)if(l+=t.length,1===t.length)i+=`let d${t[0]} = i32(globalId[${e}]);`;else{let n=VJ(t,"uniforms.outShape");i+=`var index${e} = i32(globalId[${e}]);`;for(let r=0;r<n.length;r++)i+=`let d${t[r]} = index${e} / ${n[r]};`,r===n.length-1?i+=`let d${t[r+1]} = index${e} - d${t[r]} * ${n[r]};`:i+=`index${e} = index${e} - d${t[r]} * ${n[r]};`}}let u=[];for(let e=0;e<l;e++)u.push(`d${e}`);let d=GJ(l),c=`fn getOutputCoords() -> ${d} {\n    ${i}\n  `;return 0===u.length?c+=`return ${d}(0); }`:c+=`return ${d}(${u.join(",")}); }`,[c,l]}(t.shape,n.dispatchLayout),u=[HJ,a.join("\n"),KJ(t.shape),o,qJ(t.shape.length)];if(n.atomic||u.push(function(e,t,n){let r,a=e.length,s=jJ(t,n);if(r=n?`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {\n      result[flatIndex] = ${s}(value);\n    }`:`fn setOutputAtIndex(flatIndex : i32, value : f32) {\n      result[flatIndex] = ${s}(value);\n    }\n    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {\n      result[flatIndex] = ${s}(value);\n    }`,a>=2){let e=["d0","d1","d2","d3"].slice(0,a),t=GJ(a);r+=n?`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex / 4, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutputAtCoords(${e.map((e=>`${e} : i32`)).join(", ")}, value : f32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex, value);\n      }\n      fn setOutputAtCoordsI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : i32) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex, value);\n      }\n    `}return r}(t.shape,t.dtype,n.isVec4)),l===t.shape.length){let r=e.map((e=>function(e,t,n,r){let a=function(e,t){let n=e.name,r=e.shape.length,a=GJ(r),s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3"].slice(0,r),o=i.map((e=>`${e} : i32`)).join(", ");if(r<1)return t?`\n        fn ${s}() -> vec4<f32> {\n          return vec4<f32>(${n}[0]);\n        }\n      `:`\n      fn ${s}() ->f32 {\n        return f32(${n}[0]);\n      }\n    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${r}D`;return 0===r&&(u="1D"),t?`\n      fn ${s}(${o}) -> vec4<f32> {\n        return vec4<f32>(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),\n          ${l}) / 4]);\n      }\n      `:`\n    fn ${s}(${o}) -> f32 {\n      return f32(${n}[getIndexFromCoords${u}(${a}(${i.join(",")}),\n        ${l})]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(a+=function(e,t,n,r){let a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),i="get"+s+"ByOutput",o=e.shape.length,l=t.length,u=GJ(l);if(Jp.arraysEqual(e.shape,t)&&r)return n?`\n        fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n          return vec4<f32>(${a}[globalIndex]);\n        }\n\n        fn ${i}Coords(coords : ${u}) -> vec4<f32> {\n          return vec4<f32>(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);\n        }\n        `:`\n      fn ${i}Index(globalIndex : i32) -> f32 {\n        return f32(${a}[globalIndex]);\n      }\n\n      fn ${i}Coords(coords : ${u}) -> f32 {\n        return f32(${a}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}]);\n      }\n      `;let d=$v.getBroadcastDims(e.shape,t),c=l-o,p="";if(0===o)return n?`\n      fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n        return get${s}();\n      }\n\n      fn ${i}Coords(coords : ${u}) -> vec4<f32> {\n        return get${s}();\n      }\n    `:`\n      fn ${i}Index(globalIndex : i32) -> f32{\n        return get${s}();\n      }\n\n      fn ${i}Coords(coords : ${u}) -> f32{\n        return get${s}();\n      }\n    `;p=l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords[${e+c}] = 0;`)).join("\n");let h="";h=l<2&&o>0?"coords":l>1?`${GJ(o)}(${e.shape.map(((e,t)=>`coords[${t+c}]`)).join(", ")})`:"coords";let f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return n?`\n      fn ${i}Index(globalIndex : i32) -> vec4<f32> {\n        var coords = getCoordsFromIndex(globalIndex);\n        ${p}\n        return ${a}[getIndexFromCoords${m}(${h}, ${f}) / 4];\n      }\n\n      fn ${i}Coords(coordsIn : ${u}) -> vec4<f32> {\n        var coords = coordsIn;\n        ${p}\n        return ${a}[getIndexFromCoords${m}(${h}, ${f}) / 4];\n      }\n    `:`\n    fn ${i}Index(globalIndex : i32) -> f32 {\n      var coords = getCoordsFromIndex(globalIndex);\n      ${p}\n      return f32(${a}[getIndexFromCoords${m}(${h}, ${f})]);\n    }\n\n    fn ${i}Coords(coordsIn : ${u}) -> f32 {\n      var coords = coordsIn;\n      ${p}\n      return f32(${a}[getIndexFromCoords${m}(${h}, ${f})]);\n    }\n  `}(e,t,n,r)),a}(e,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");u.push(r)}return u.push(n.getUserCode()),u.join("\n")}(r,{dtype:a.dtype,shape:a.shape},t,s),o=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:o,entryPoint:"main"},label:t.constructor.name})};function D0(e,t,n,r="",a=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map((e=>e.length)).join(",")+n.join(",")+e.variableNames.join(",")+r+a}function P0(e){let{externalImage:t,backend:n,attrs:r,outShape:a,useImport:s}=e,{numChannels:i}=r,o=Jp.sizeFromShape(a),l=Jp.computeStrides(a),u=n.makeTensorInfo(a,"int32"),d=n.getFromPixelsProgram(s?"import":"copyExternal");d.updateOutputShape(a);let c=[u.shape],p=[u.dtype,s?"import":"copyExternal"],h=D0(d,c,p),f=d.getLayout(n.device),m=n.getAndSavePipeline(h,(()=>z0(n.device,d,f.pipelineLayout,[],u,!0)));d.setPipeline(m),s||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:d.makeInputTexture(n.device,a[1],a[0])},[a[1],a[0]]);let g=n.tensorMap.get(u.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);let y,A=[o,i,...l,...d.dispatch];if(d.setUniform(n.device,A),s){let e={source:t};y=n.device.importExternalTexture(e)}else y=d.inputTexture.createView();return n.runFromPixelsProgram(d,g.bufferInfo.buffer,f,y,u.dataId),u}var L0,W0={kernelName:Fp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r;if(null==a)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&a instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,[d,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[c,d,s];if(Cu().getBool("WEBGPU_USE_IMPORT")&&i)return P0({externalImage:a,backend:n,attrs:r,outShape:p,useImport:!0});if((i||o)&&(null==L0&&(L0=document.createElement("canvas").getContext("2d")),L0.canvas.width=d,L0.canvas.height=c,L0.drawImage(a,0,0,d,c),a=L0.canvas),u||l||i||o)return P0({externalImage:a,backend:n,attrs:r,outShape:p,useImport:!1});let h=a.data,f=h;if(null!=s&&4!==s){f=new Uint8Array(a.width*a.height*s);let e=h.length,t=0;for(let n=0;n<e;n++)n%4<s&&(f[t++]=h[n])}let m=n.makeTensorInfo(p,"int32");return n.tensorMap.get(m.dataId).values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}},B0=class{constructor(e,t,n,r,a){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],$v.assertAndGetBroadcastShape(e,t),$v.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=r&&($v.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset")),null!=a&&($v.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=a,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}},U0={kernelName:Ud,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r,scale:a,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,u=n,d=[r,i,o],c=null;null!=s&&(c=s.shape,d.push(s));let p=null;null!=a&&(p=a.shape,d.push(a));let h=new B0(r.shape,i.shape,o.shape,c,p),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,d,r.dtype,f)}},V0={kernelName:Dp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=$v.convertConv2DDataFormat(d);return K1({x:a,filter:s,convInfo:$v.computeConv2DInfo(a.shape,s.shape,l,c,u,p,!1,m),backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}},G0={kernelName:Pp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:c,activation:p,leakyreluAlpha:h}=r,f=d;null==f&&(f=[1,1]),Jp.assert($v.eitherStridesOrDilationsAreOne(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));let m=$v.computeConv2DInfo(a.shape,s.shape,l,f,u,c,!0),g=[a,s],y=null!=i,A=null!=o;y&&g.push(i),A&&g.push(o);let b,x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]},{type:"int32",data:[m.inHeight,m.inWidth]}];return 1===m.batchSize&&m.inHeight===m.outHeight&&m.inWidth===m.outWidth&&1===m.strideHeight&&1===m.strideWidth&&m.filterHeight===m.filterWidth&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&3===m.filterHeight&&m.inChannels%4==0?b=new o0(m,y,p,A):(b=new l0(m,y,p,A),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.outChannels/m.inChannels]})),"leakyrelu"===p&&(x.push({type:"float32",data:[h]}),b.uniforms+=" alpha : f32,"),n.runWebGPUProgram(b,g,"float32",x)}},j0=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${GJ(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}},H0={kernelName:Gd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=Jp.sizeFromShape(r.shape),[l,u,d,c]=$v.prepareAndValidate(r,a),p=pQ({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),h=pQ({inputs:{x:r},backend:n,attrs:{shape:[Jp.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){let e=n.readSync(a.dataId),t=n.bufferSync(r),s=OQ(e,t,r.dtype,u,i,d,c,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}let f=new j0(i,[u,d]),m=[{type:"int32",data:[i]},{type:"int32",data:c}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=pQ({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}},q0=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("indexZ"):n.push(`${t[r]}`);return n.join()}(this.aShape)}));\n        }\n      }\n    `}};function K0(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=Jp.parseAxisParam(i,a.shape)[0],u=$v.segment_util.collectGatherOpShapeInfo(a,s,l,o),d=Jp.sizeFromShape(s.shape),c=[],p=pQ({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=pQ({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});c.push(p),c.push(h);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])){let e=n.tensorMap.get(h.dataId).values,t=lm(h.shape,h.dtype,e),r=n.tensorMap.get(p.dataId).values,a=lm(p.shape,p.dtype,r),s=zQ(a,t,f);return c.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}let m=new q0(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);c.push(g);let y=pQ({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return c.forEach((e=>n.disposeData(e.dataId))),y}var X0={kernelName:Vd,backendName:"webgpu",kernelFunc:K0},Z0=TQ({opSnippet:5,cpuKernelImpl:PQ,dtype:"bool"}),Y0={kernelName:jd,backendName:"webgpu",kernelFunc:Z0},J0=TQ({opSnippet:6,dtype:"bool",cpuKernelImpl:DQ}),Q0={kernelName:Hd,backendName:"webgpu",kernelFunc:J0},e2={kernelName:Qd,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=[{type:"float32",data:[s]}],o=new SQ(a.shape,14);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[a],"float32",i)}},t2=TQ({opSnippet:7,dtype:"bool",cpuKernelImpl:WQ}),n2={kernelName:ec,backendName:"webgpu",kernelFunc:t2},r2=TQ({opSnippet:8,dtype:"bool",cpuKernelImpl:LQ}),a2={kernelName:tc,backendName:"webgpu",kernelFunc:r2},s2=NQ({opType:9,cpuKernelImpl:BQ}),i2={kernelName:rc,backendName:"webgpu",kernelFunc:s2},o2=TQ({opSnippet:9,dtype:"bool"}),l2={kernelName:sc,backendName:"webgpu",kernelFunc:o2},u2=NQ({opType:10}),d2={kernelName:ic,backendName:"webgpu",kernelFunc:u2};function c2(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r;return h0(a,s,i,"max",n)}var p2={kernelName:cc,backendName:"webgpu",kernelFunc:c2},h2=TQ({opSnippet:15,cpuKernelImpl:VQ}),f2={kernelName:pc,backendName:"webgpu",kernelFunc:h2},m2={kernelName:hc,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a,d=$v.computePool2DInfo(s.shape,i,o,1,l,u),c=[];if(1===d.filterHeight&&1===d.filterWidth){if(Jp.arraysEqual(d.inShape,d.outShape))return wQ({inputs:{x:s},backend:r});t=new x1(d),c.push({type:"int32",data:[d.strideHeight,d.strideWidth]})}else t=new b1(d,"max"),c.push({type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]});return r.runWebGPUProgram(t,[s],s.dtype,c)}},g2={kernelName:Ac,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{keepDims:s,axis:i}=r;return h0(a,i,s,"mean",n)}},y2={kernelName:bc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return h0(a,s,i,"min",n)}},A2=TQ({opSnippet:16,cpuKernelImpl:GQ}),b2={kernelName:xc,backendName:"webgpu",kernelFunc:A2},x2=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),r=1===e?"start":"start[i]",a=1===e?"end":"end[i]",s=1===e?"outC":"outC[i]",i=GJ(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${i}(${t});\n          let end = ${i}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${s} < ${r}) {\n              ${s} = ${r} * 2 - ${s} - ${this.offset};\n            } else if(${s} >= ${a}) {\n              ${s} = (${a} - 1) * 2 - ${s} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}},w2={kernelName:wc,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{paddings:a,mode:s}=t,i=n,o=a.map((e=>({type:"int32",data:[e[0],e[1]]}))),l=new x2(r.shape,a,s);return i.runWebGPUProgram(l,[r],r.dtype,o)}},v2={kernelName:Sc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let e=n.tensorMap.get(r.dataId),[t,a]=HQ(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a=new SQ(r.shape,11);return n.runWebGPUProgram(a,[r],r.dtype)}},k2={kernelName:Tc,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:c}=Ok.nonMaxSuppressionV3Impl(u,d,i,o,l);return n.makeTensorInfo([c.length],"int32",new Int32Array(c))}},I2={kernelName:Ec,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=n.readSync(a.dataId),c=n.readSync(s.dataId),p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Ok.nonMaxSuppressionV5Impl(d,c,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};function S2(e){let{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){let e=_1({inputs:{input:r},backend:n}),t=S2({inputs:{x:e},backend:n}),a=L1({inputs:{input:r},backend:n}),s=S2({inputs:{x:a},backend:n}),i=kQ({inputs:{real:t,imag:s},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(a.dataId),n.disposeData(s.dataId),i}return C0({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}var N2={kernelName:Mp,backendName:"webgpu",kernelFunc:S2},T2={kernelName:_c,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let t=_1({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=L1({inputs:{input:a},backend:r}),i=S2({inputs:{x:s},backend:r}),o=kQ({inputs:{real:n,imag:i},backend:r});return r.disposeData(t.dataId),r.disposeData(n.dataId),r.disposeData(s.dataId),r.disposeData(i.dataId),o}return C0({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},C2={kernelName:Mc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return k0({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Jp.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Jp.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=U1({inputs:t.map((e=>{let t=k0({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}},E2=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=GJ(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),r=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(",");return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${e>1?`${t}(${n})`:`${n}`};\n          let end = ${e>1?`${t}(${r})`:`${r}`};\n          let outC = getCoordsFromIndex(index);\n\n          if (${e>1?"any(outC < start)":"outC < start"} || ${e>1?"any(outC >= end)":"outC >= end"}) {\n            setOutputAtIndex(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputAtIndex(index, getX(${e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords"}));\n          }\n        }\n      }\n    `}},_2=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(s.every((e=>Jp.arraysEqual(e,[0,0]))))return wQ({inputs:{x:a},backend:n});if(0===Jp.sizeFromShape(a.shape))return C0({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}});let o=[{type:"float32",data:[i]}];s.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));let l=new E2(a.shape,s);return n.runWebGPUProgram(l,[a],a.dtype,o)},R2={kernelName:$c,backendName:"webgpu",kernelFunc:_2},M2=TQ({opSnippet:13}),$2={kernelName:Oc,backendName:"webgpu",kernelFunc:M2},F2={kernelName:zc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=new bQ(14,r.shape,a.shape);return n.runWebGPUProgram(s,[r,a],"float32")}},O2={kernelName:Dc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return h0(a,s,i,"prod",n)}},z2={kernelName:Pc,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=XQ(r,a,s,i);return t.makeTensorInfo([o.length],i,o)}},D2=TQ({opSnippet:3}),P2={kernelName:Cd,backendName:"webgpu",kernelFunc:D2},L2=NQ({opType:12}),W2={kernelName:Bc,backendName:"webgpu",kernelFunc:L2},B2=NQ({opType:13}),U2={kernelName:qc,backendName:"webgpu",kernelFunc:B2},V2=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    "}},G2={kernelName:jc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,size:i,halfPixelCenters:o}=r,[l,u]=i,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],c=new V2(a.shape,l,u);return n.runWebGPUProgram(c,[a],"float32",d)}},j2=class{constructor(e,t,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}},H2={kernelName:Vc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,d=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[s?.5:0]}],c=new j2(a.shape,l,u,i);return n.runWebGPUProgram(c,[a],a.dtype,d)}},q2=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}},K2={kernelName:Op,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new q2(r.shape,s),[u,d]=$v.getImageCenter(i,r.shape[1],r.shape[2]),c=[{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[Math.sin(a)]},{type:"float32",data:[Math.cos(a)]}];return"number"==typeof s?c.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):c.push({type:"float32",data:s}),o.runWebGPUProgram(l,[r],r.dtype,c)}},X2=NQ({opType:15,cpuKernelImpl:ZQ}),Z2={kernelName:Zc,backendName:"webgpu",kernelFunc:X2},Y2=class{constructor(e,t,n,r,a,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=nQ(e),this.dispatch=JJ(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${r}_${this.sliceDimGreaterThanOne}_${i}`;let o=GJ(a.length);this.uniforms=`sliceDim : i32, strides: ${o}, size: i32,`,this.updatesRank=r,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",r="",a="",s="";return 1===this.updatesRank?(r="coords[0]",a="flattenedIndex",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.updatesRank&&(r="coords[0], coords[1]",a="vec2<i32>(flattenedIndex, coords[1])",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        let d0 = index / uniforms.updatesShape[1];\n        let d1 = index - d0 * uniforms.updatesShape[1];\n        return vec2<i32>(d0, d1);\n      }\n      "),`\n    ${s}\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        if (index < uniforms.size) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue = getUpdates(${r});\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n         ${"int32"===this.type?"atomicAdd(&(result[flatIndex]), i32(updateValue));":"\n     var assumed = atomicLoad(&(result[flatIndex]));\n     var success = 0;\n     for (; success == 0;) {\n       let new = bitcast<f32>(assumed) + updateValue;\n       let newI32 = bitcast<i32>(new);\n       let resValue = atomicCompareExchangeWeak(&(result[flatIndex]), assumed, newI32);\n       assumed = resValue[0];\n       success = resValue[1];\n     }\n     "}\n        }\n      }`}},J2={kernelName:Yc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:c}=$v.calculateShapes(s,a,i),p=[c/u,u];if(0===c)return n.makeTensorInfo(i,a.dtype);let h=pQ({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=pQ({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=C0({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[Jp.sizeFromShape(f.shape)]}],A=new Y2(f.shape,o,h.shape.length,f.shape.length,d,p,m),b=n.runWebGPUProgram(A,[f,h],m,y,g),x=pQ({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(b.dataId),x}},Q2=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let e=0;e<this.outputShape.length;e++)a.push(`${n[e]}`),e<this.cRank&&r.push(`${n[e]}`);e=r.join(),t=a.join()}return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}},e5={kernelName:Jc,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new Q2(r.shape.length,a.shape,a.shape.length);return n.runWebGPUProgram(i,[r,a,s],Wh(a.dtype,s.dtype))}},t5=NQ({opType:18}),n5={kernelName:ap,backendName:"webgpu",kernelFunc:t5},r5=NQ({opType:16}),a5={kernelName:tp,backendName:"webgpu",kernelFunc:r5},s5=NQ({opType:17}),i5={kernelName:np,backendName:"webgpu",kernelFunc:s5},o5=TQ({opSnippet:2,cpuKernelImpl:t1,supportsComplex:!0}),l5={kernelName:vp,backendName:"webgpu",kernelFunc:o5},u5={kernelName:dp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=Jp.parseAxisParam([s],a.shape),o=c2({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=$v.expandShapeToKeepDim(o.shape,i),u=pQ({inputs:{x:o},backend:n,attrs:{shape:l}}),d=o5({inputs:{a,b:u},backend:n}),c=w0({inputs:{x:d},backend:n}),p=f0({inputs:{x:c},backend:n,attrs:{axis:i,keepDims:!1}}),h=pQ({inputs:{x:p},backend:n,attrs:{shape:l}}),f=D2({inputs:{a:c,b:h},backend:n});return n.disposeData(o.dataId),n.disposeData(u.dataId),n.disposeData(d.dataId),n.disposeData(c.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}},d5={kernelName:lp,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Jp.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],d=_2({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=$v.getReshaped(d.shape,s,o,!1),p=$v.getPermuted(c.length,s.length,!1),h=$v.getReshapedPermuted(d.shape,s,o,!1),f=pQ({inputs:{x:d},backend:n,attrs:{shape:c}}),m=m1({inputs:{x:f},backend:n,attrs:{perm:p}}),g=pQ({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(d),u.push(f),u.push(m),u.forEach((e=>n.disposeData(e.dataId))),g}},c5=class{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let o=t>1;this.shaderKey=`scatter_${n}_${r}_${o}`;let l=GJ(a.length);this.uniforms=`updateSize : i32, sliceDim : i32, strides: ${l},`;let u="";1===n?u="i":2===n&&(u="i, j"),this.indicesSnippet=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]"),this.updatesSnippet=`getUpdates(${d})`,this.strideString=o?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        let globalIndex = index * ${this.workPerThread};\n        if (globalIndex < uniforms.size) {\n          var sum = vec4<f32>(0.0);\n          var found = vec4<bool>(false);\n          for (var i = 0; i < uniforms.updateSize; i = i + 1) {\n            var flattenedIndex = 0;\n            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n              let indexInside = i32(round(${this.indicesSnippet}));\n              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};\n            }\n            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n              let curIndex = globalIndex + innerIndex;\n              let coords = getCoordsFromIndex(curIndex);\n              if (flattenedIndex == coords[0]) {\n                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};\n                found[innerIndex] = true;\n              }\n            }\n          }\n          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n            let curIndex = globalIndex + innerIndex;\n            if (curIndex < uniforms.size)\n            {\n              setOutputAtIndex(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));\n            }\n          }\n        }\n      }`}},p5={kernelName:mp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,strides:d,outputSize:c}=$v.calculateShapes(s,a,o),p=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:d}],h=new c5(u,l,a.shape.length,s.shape.length,d,[c,1],!1),f=n.runWebGPUProgram(h,[s,a,i],s.dtype,p),m=pQ({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}},h5={kernelName:up,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=Jp.parseAxisParam(i,a.shape)[0],l=$v.prepareSplitSize(a,s,o),u=a.shape.length,d=new Array(u).fill(0),c=a.shape.slice();return l.map((e=>{let t=[...c];t[o]=e;let r=S1({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,r}))}},f5=NQ({opType:19}),m5={kernelName:ip,backendName:"webgpu",kernelFunc:f5},g5={kernelName:yp,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t,a=new SQ(n.shape,20);return r.runWebGPUProgram(a,[n],n.dtype)}},y5=TQ({opSnippet:11}),A5={kernelName:gp,backendName:"webgpu",kernelFunc:y5},b5=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=GJ(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}},x5={kernelName:Ap,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:w}=Qm.sliceInfo(s.shape,i,o,l,u,d,c,p,h);if(g)t=pQ({inputs:{x:s},backend:r,attrs:{shape:m}});else if(y||A){Jp.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Qm.computeOutShape(b,x,w),n=S1({inputs:{x:s},backend:r,attrs:{begin:b,size:e}});t=pQ({inputs:{x:n},backend:r,attrs:{shape:m}}),r.disposeData(n.dataId)}else if(r.shouldExecuteOnCPU([s])){let e=r.readSync(s.dataId),n=lm(s.shape,s.dtype,e),a=QQ(f,n,w,b);t=r.makeTensorInfo(m,s.dtype,a.values)}else{let e=new b5(f),n=[{type:"int32",data:b},{type:"int32",data:w}],a=r.runWebGPUProgram(e,[s],s.dtype,n);t=pQ({inputs:{x:a},backend:r,attrs:{shape:m}}),r.disposeData(a.dataId)}return t}},w5={kernelName:bp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:c}=t,p=n.readSync(d.dataId),h=n.readSync(c.dataId),[f,m]=e1(p,h,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(c.shape,"int32",m)]}},v5=NQ({opType:21}),k5={kernelName:Ip,backendName:"webgpu",kernelFunc:v5},I5=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){return`\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e;a++)r.push(`(${n[a]} % ${t}aShape[${a}])`);return r.join()}(this.rank,"uniforms.")}));\n        }\n      }\n    `}},S5={kernelName:Sp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(n.shouldExecuteOnCPU([a])||"string"===a.dtype||a.shape.length>=5){let e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Jp.decodeString(e))):e,r=lm(a.shape,a.dtype,t),i=n1(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new I5(a.shape,s);return n.runWebGPUProgram(i,[a],a.dtype)}},N5=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}},T5=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return"\n        \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      "}};function C5(e,t){null!==t&&e.disposeData(t.dataId)}function E5(e){let t=1;for(;t<e;)t*=2;return t}var _5={kernelName:Np,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=a.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([a])){let e=n.readSync(a.dataId),[t,r]=r1(e,o,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return o[o.length-1]=0,[n.makeTensorInfo(o,a.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[a,C0({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let u=Jp.sizeFromShape(o)/l,d=pQ({inputs:{x:a},attrs:{shape:[u,l]},backend:n}),c=E5(s),p=E5(l),h=null,f=()=>null===h?[d,d]:[d,h],m=(e,t,r)=>{let a=f(),s=new N5(r),i=[{type:"int32",data:[l]},{type:"int32",data:[null===h?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=h;h=n.runWebGPUProgram(s,a,"int32",i),C5(n,o)};for(let e=1;e<c;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)m(t,n,[u,p])}for(let e=p;e>c;e/=2){let t=f(),r=new T5([u,e/2]),a=[{type:"int32",data:[l]},{type:"int32",data:[null===h?1:0]},{type:"int32",data:[c]}],s=h;h=n.runWebGPUProgram(r,t,"int32",a),C5(n,s);let i=c/2,o=2*i;for(let e=i;e>=1;e/=2)m(o,e,h.shape)}let g=h;h=S1({inputs:{x:h},backend:n,attrs:{begin:0,size:[u,s]}}),C5(n,g);let y=K0({inputs:{x:d,indices:h},backend:n,attrs:{axis:1,batchDims:1}});C5(n,d);let A=o.slice(0,-1);A.push(s),g=h,h=pQ({inputs:{x:h},attrs:{shape:A},backend:n}),C5(n,g);let b=y;return y=pQ({inputs:{x:y},attrs:{shape:A},backend:n}),C5(n,b),[y,h]}},R5=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        "}},M5={kernelName:Tp,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:r,attrs:a}=e,{image:s,transforms:i}=n,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[c,p,h,f]=s.shape,[m,g]=null!=d?d:[p,h],y=new R5([c,m,g,f]),A="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let b=[{type:"int32",data:[A]},{type:"int32",data:[t]},{type:"float32",data:[u]}];return r.runWebGPUProgram(y,[s,i],"float32",b)}},$5={kernelName:_p,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1),d=0;for(let e=0;e<o;e++)e!==s&&(u[d++]=i.shape[e]);let c=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;let t=S1({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=pQ({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,c.push(t)}return c.forEach((e=>n.disposeData(e.dataId))),f}},F5=[mQ,o1,u1,c1,y1,A1,w1,v1,T1,M1,F1,D1,IQ,V1,X1,J1,e0,n0,a0,i0,u0,g0,A0,x0,v0,I0,N0,E0,R0,W0,$0,O0,U0,V0,G0,H0,X0,Y0,Q0,vQ,W1,e2,n2,a2,i2,l2,d2,p2,f2,m2,g2,y2,b2,w2,c0,v2,k2,I2,E1,T2,C2,R2,$2,F2,O2,z2,R1,P2,W2,U2,hQ,G2,H2,K2,Z2,J2,e5,n5,a5,i5,N1,x5,w5,u5,d5,p5,h5,m5,g5,A5,l5,m0,k5,S5,_5,M5,g1,$5,N2];for(let e of F5)Hp(e);var O5=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let r=z5(e,t);if(this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.usedBuffers.has(r)||this.usedBuffers.set(r,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(r).length>0){this.numFreeBuffers--;let e=this.freeBuffers.get(r).shift();return this.usedBuffers.get(r).push(e),e}this.numBytesAllocated+=e;let a=this.device.createBuffer({mappedAtCreation:n,size:e,usage:t});return this.usedBuffers.get(r).push(a),a}releaseBuffer(e,t,n){if(0===this.freeBuffers.size)return;let r=z5(t,n);this.freeBuffers.has(r)||this.freeBuffers.set(r,[]),this.freeBuffers.get(r).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let a=this.usedBuffers.get(r),s=a.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");a.splice(s,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then((()=>{this.releaseBuffer(e,t,n)}),(e=>{}))}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function z5(e,t){return`${e}_${t}`}var D5=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){Jp.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=nQ(this.outputShape),this.dispatch=JJ(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){let e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.useImport?"texture_external":"texture_2d<f32>"};\n\n      \n    \n  \n  @stage(compute) @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)\n\n  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,\n          @builtin(global_invocation_id) GlobalId : vec3<u32>,\n          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let flatIndexBase = index * uniforms.numChannels;\n        for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n          let flatIndex = flatIndexBase + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndexBase);\n            let values = ${e};\n            result[flatIndex] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){let n=e.createBuffer({size:4*t.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every(((e,t)=>e===this.lastUniformData[t]))||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return(!this.inputTexture||this.lastPixelSize.width!==t||this.lastPixelSize.height!==n)&&(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return null===this.layout&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},P5=class extends D5{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return null===this.layout&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});let n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},L5=Cu().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),W5=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,r=t.dispatchLayout,a=t.dispatch;if(a.every((e=>e<=n)))return a;Jp.assert(a[0]>n&&void 0===r.y&&void 0===r.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let s=Math.ceil(Math.sqrt(a[0]));return s>n?(s=Math.ceil(Math.cbrt(a[0])),Jp.assert(s<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[s,s,s]):[s,s,1]},B5=class extends El{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!sQ())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new O5(this.device),this.tensorMap=new Cl(this,Ug()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Cu().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return B5.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach((e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)})),this.uniformDisposalQueue.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage))),this.stagingDisposalQueue.forEach((e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.byteSize,e.usage))),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.stagingDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){let n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);let{complexTensorInfos:r}=this.tensorMap.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){let t=this.tensorMap.get(e);null!=t&&null!=t.bufferInfo.buffer&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){this.tensorMap.has(e)&&this.tensorMap.get(e).refCount--}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()},a=Jp.sizeFromShape(t)*rQ(n);return this.tensorMap.set(r,{dtype:n,values:e,bufferInfo:{byteSize:a,usage:this.defaultGpuBufferUsage()},refCount:1}),r}move(e,t,n,r,a){if("complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s=Jp.sizeFromShape(n)*rQ(r);this.tensorMap.set(e,{dtype:r,values:t,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:a})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new D5),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new P5),this.fromPixelImportProgram;default:return void Jp.assert(!1,(()=>"Unsupported fromPixels shape"))}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(null!=e.values)return e.values;let t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let n=t.getMappedRange().slice(0);return t.unmap(),null!=t&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Cu().getBool("WEBGPU_USE_PROFILE_TOOL")&&(Jp.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t,n=this.tensorMap.get(e),{values:r}=n;if(null!=r)return this.convertAndCacheOnCPU(e,r);if("complex64"===n.dtype){let e=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),r=e[0],a=e[1];t=$v.mergeRealAndImagArrays(r,a)}else t=aQ(await this.getBufferData(n),n.dtype);return this.convertAndCacheOnCPU(e,t),t}bufferSync(e){let t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((e=>Jp.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return lm(e.shape,e.dtype,n)}async time(e){let t=this.activeTimers,n=[],r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=Jp.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Jp.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(a);return i.kernelMs=Jp.sum(o),i.getExtraProfileInfo=()=>o.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Jp.isString(n[0])){let a=n.map((e=>Jp.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(null==t.bufferInfo.buffer&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values)){let e=this.bufferManager.acquireUploadBuffer(t.bufferInfo.byteSize,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),n=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(n).set(t.values):new Float32Array(n).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,t.bufferInfo.buffer,0,t.bufferInfo.byteSize);let r={byteSize:t.bufferInfo.byteSize,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:e};this.stagingDisposalQueue.push(r)}}makeUniforms(e){let t=0,n=[];e.forEach((e=>{let r;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:r=4;break;case 2:r=8;break;case 3:case 4:r=16;break;default:Jp.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}t=Math.ceil(t/r)*r,n.push(t),t+=4*e.data.length}));let r=new ArrayBuffer(t);e.forEach(((e,t)=>{let a=n[t];"int32"===e.type?new Int32Array(r,a,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(r,a,e.data.length).set(e.data):new Float32Array(r,a,e.data.length).set(e.data)}));let a=this.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,r,0,t),{offset:0,size:t,buffer:a}}createLayout(e){let t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let n=0;n<e;n++)t.push({binding:n+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});let n=this.device.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:this.device.createPipelineLayout({bindGroupLayouts:[n]})}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,r,a){if(!a){if(a=this.makeTensorInfo(e.outputShape,n),0===Jp.sizeFromShape(a.shape))return this.tensorMap.get(a.dataId).values=Jp.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId)}e.dispatch=W5(this.device,e);let s=[{type:"float32",data:[NaN]}],i=t.concat(a).map((e=>e.shape)),o="int32";i.map((e=>{s.push({type:o,data:e})}));let l=Jp.computeStrides(a.shape);if(s.push({type:o,data:l}),e.size){let t=Jp.sizeFromShape(e.outputShape);s.push({type:o,data:[e.isVec4?t/4:t]})}r&&(s=[...s,...r]);let u=this.makeUniforms(s),d=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),c=d.map((e=>e.dtype)).concat(a.dtype),p=d.map((e=>$v.getBroadcastDims(e.shape,a.shape))),h=d.map((e=>Jp.arraysEqual(e.shape,a.shape))).join("_"),f=p.map((e=>e.join("_"))).join(";"),m=D0(e,i,c,f,h),{bindGroupLayout:g,pipelineLayout:y}=this.getCachedOrCreateLayout(e.variableNames.length),A=this.getAndSavePipeline(m,(()=>z0(this.device,e,y,d,a))),b=null!=this.activeTimers,x=((e,t,n,r,a)=>{let s=[r,...n];return a&&s.push(a),e.createBindGroup({layout:t,entries:s.map(((e,t)=>({binding:t,resource:e})))})})(this.device,g,t.map((e=>this.tensorToBinding(e))),this.tensorToBinding(a),u);this.ensureCommandEncoderReady();let w=this.getComputePass();b&&this.supportTimeQuery&&w.writeTimestamp(this.querySet,0),w.setPipeline(A),w.setBindGroup(0,x),w.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),b&&this.supportTimeQuery&&w.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(a.dataId);let v={byteSize:u.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:u.buffer};return this.uniformDisposalQueue.push(v),Cu().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),b&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),a}runFromPixelsProgram(e,t,n,r,a){e.dispatch=W5(this.device,e);let s=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:r},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();let i=this.getComputePass(),o=null!=this.activeTimers;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,s),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(a),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){let t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let r=new BigUint64Array(n.getMappedRange()),a=Number(r[1]-r[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),a/1e6}shouldExecuteOnCPU(e,t=L5){return Cu().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).bufferInfo.buffer&&Jp.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},U5=B5;U5.nextDataId=0;var V5={};il(V5,{WebGPUBackend:()=>U5,webgpu_util:()=>XJ}),sQ()&&ty("webgpu",(async()=>{Cu().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:Cu().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,r={},a=t.features.has("timestamp-query");r.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension},a?r.requiredFeatures=["timestamp-query"]:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");let s=await t.requestDevice(r);return new U5(s,a)}),3);var G5,j5=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(j5||{}),H5=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(H5||{}),q5={kernelName:zp,backendName:"wasm",setupFunc:function(e){G5=e.wasm.cwrap(zp,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:c}=r,p=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=H5[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?a.shape[2]:a.shape[1],A=u?s.shape[1]:s.shape[2],b=zm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),x=n.makeOutput([...b,y,A],a.dtype),w=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(a.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return G5(p,v,a.shape.length,h,k,s.shape.length,l,u,g,f,m,c||0,w),x}};function K5(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===Jp.sizeFromShape(i.shape)||n(s,j5[a.dtype],o),i}}}var X5=K5($u);function Z5(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:a}=e,{a:s,b:i}=a,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,d=$v.assertAndGetBroadcastShape(s.shape,i.shape),c=t.makeOutput(d,u);if(0===Jp.sizeFromShape(d))return c;let p=new Uint8Array(new Int32Array(s.shape).buffer),h=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(c.dataId).id;return r(o,p,s.shape.length,l,h,i.shape.length,j5[s.dtype],f),c}}}var Y5,J5=Z5(zu),Q5={kernelName:Du,backendName:"wasm",setupFunc:function(e){Y5=e.wasm.cwrap(Du,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===Jp.sizeFromShape(r.shape))return r;let a=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return Y5(s,a.length,j5[r.dtype],i),r}};function e3(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var t3,n3={kernelName:qd,backendName:"wasm",kernelFunc:e3};function r3(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=function(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),l={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let e=e3({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,c=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return t3(d,h,l.shape.length,j5[l.dtype],c,p,s.length),u}var a3,s3={kernelName:Cp,backendName:"wasm",kernelFunc:r3,setupFunc:function(e){t3=e.wasm.cwrap(Cp,null,["number","array","number","number","number","array","number"])}};function i3(e,t,n){let r=e.shape,a=e.shape.length,s=Jp.parseAxisParam(t,r),i=s,o=$v.getAxesPermutation(i,a),l=null,u=!1;if(null!=o){let t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=$v.getInnerMostAxes(i.length,a),l=r3({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var o3,l3,u3,d3={kernelName:Pu,backendName:"wasm",setupFunc:function(e){a3=e.wasm.cwrap(Pu,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:c,inputWasTransposed:p}=i3(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let h=l.shape.length;$v.assertAxesAreInnerMostDims("all",d,h);let[f,m]=$v.computeOutAndReduceShapes(l.shape,d),g=Jp.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Jp.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;a3(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=$v.expandShapeToKeepDim(y.shape,c);y.shape=e}return y}},c3={kernelName:Lu,backendName:"wasm",setupFunc:function(e){o3=e.wasm.cwrap(Lu,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:c,inputWasTransposed:p}=i3(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let h=l.shape.length;$v.assertAxesAreInnerMostDims("any",d,h);let[f,m]=$v.computeOutAndReduceShapes(l.shape,d),g=Jp.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Jp.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;o3(o,g,e)}if(p&&t.disposeData(u.dataId),s){let e=$v.expandShapeToKeepDim(y.shape,c);y.shape=e}return y}},p3={kernelName:Wu,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:d,inputWasTransposed:c}=i3(s,a,t);if(c){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=Jp.sizeFromShape(h.shape),g=l.shape[d[0]];return l3(o,j5[l.dtype],m,g,f),c&&t.disposeData(u.dataId),h},setupFunc:function(e){l3=e.wasm.cwrap(Wu,null,["number","number","number","number","number"])}},h3={kernelName:qu,backendName:"wasm",setupFunc:function(e){u3=e.wasm.cwrap(qu,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=$v.computePool2DInfo(a.shape,i,o,1,l,u),c=d.filterHeight,p=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,b=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let x=r.makeOutput(d.outShape,"float32"),w=r.dataIdMap.get(x.dataId).id;return u3(s,a.shape[0],a.shape[1],a.shape[2],c,p,h,f,m,g,y,A,b,w),x}};function f3(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=Jp.sizeFromShape(r.shape),i=Jp.inferFromImplicitShape(a,s);return Jp.assert(s===Jp.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var m3,g3={kernelName:Uc,backendName:"wasm",kernelFunc:f3},y3={kernelName:Yu,backendName:"wasm",setupFunc:function(e){m3=e.wasm.cwrap(Yu,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=a.shape.length,u=s.shape.length,d=i?a.shape[l-2]:a.shape[l-1],c=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Jp.sizeFromShape(f),y=Jp.sizeFromShape(m),A=zm.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);Jp.assert(d===c,(()=>`Error in matMul: inner shapes (${d}) and (${c}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let b=o?[y,h,c]:[y,c,h],x=f3({inputs:{x:a},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),w=f3({inputs:{x:s},backend:n,attrs:{shape:b}}),v=n.dataIdMap.get(x.dataId).id,k=n.dataIdMap.get(w.dataId).id,I=i?x.shape[2]:x.shape[1],S=o?w.shape[1]:w.shape[2],N=Math.max(g,y),T=n.makeOutput([N,I,S],x.dtype),C=n.dataIdMap.get(T.dataId).id,E=new Uint8Array(new Int32Array(x.shape).buffer),_=new Uint8Array(new Int32Array(w.shape).buffer);return m3(v,E,x.shape.length,k,_,w.shape.length,i,o,C),n.disposeData(x.dataId),n.disposeData(w.dataId),T.shape=A,T}};function A3(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=Qm.parseSliceParams(t,n,r),o=Qm.isSliceContinous(t.shape,s,i),l=a.readSync(t.dataId),u=a.makeOutput(i,t.dtype),d=Jp.computeStrides(t.shape),c=a.dataIdMap.get(u.dataId);if(o){let e=Qm.computeFlatOffset(s,d);return"string"===t.dtype?c.stringBytes=l.slice(e,e+Jp.sizeFromShape(i)):a.typedArrayFromHeap(u).set(l.subarray(e,e+Jp.sizeFromShape(i))),u}if("string"===t.dtype){let e=dP(l,s,i,t.shape,t.dtype);return c.stringBytes=e,u}let p=a.typedArrayFromHeap(u),h=t.shape.length;if(2===h)!function(e,t,n,r,a){let s=0,i=r[0],o=r[1],l=i+a[0];for(let r=i;r<l;r++){let i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,d[0],p,s,i);else if(3===h)!function(e,t,n,r,a,s){let i=0,o=a[0],l=a[1],u=a[2],d=o+s[0],c=l+s[1];for(let a=o;a<d;a++)for(let o=l;o<c;o++){let l=a*t+o*n+u;r.set(e.subarray(l,l+s[2]),i),i+=s[2]}}(l,d[0],d[1],p,s,i);else if(4===h)!function(e,t,n,r,a,s,i){let o=0,l=s[0],u=s[1],d=s[2],c=l+i[0],p=u+i[1],h=d+i[2],f=s[3];for(let s=l;s<c;s++)for(let l=u;l<p;l++)for(let u=d;u<h;u++){let d=s*t+l*n+u*r+f;a.set(e.subarray(d,d+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],p,s,i);else{let e=dP(l,s,i,t.shape,t.dtype);p.set(e)}return u}var b3={kernelName:ep,backendName:"wasm",kernelFunc:A3},x3={kernelName:Ju,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce(((e,t)=>e*t)),l=$v.getReshaped(a.shape,s,o),u=$v.getPermuted(l.length,s.length),d=$v.getReshapedPermuted(a.shape,s,o),c=$v.getSliceBeginCoords(i,s.length),p=$v.getSliceSize(d,i,s.length),h=f3({inputs:{x:a},backend:n,attrs:{shape:l}}),f=r3({inputs:{x:h},backend:n,attrs:{perm:u}}),m=A3({inputs:{x:f3({inputs:{x:f},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:c,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),m}};function w3(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var v3,k3={kernelName:nd,backendName:"wasm",kernelFunc:w3},I3=K5(rd),S3={kernelName:ad,backendName:"wasm",setupFunc:function(e){v3=e.wasm.cwrap(ad,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(l.dataId).id;return v3(o,s,i,u),l}};function N3(e){let{inputs:t,backend:n}=e,r=Jp.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=$v.computeOutShape(t.map((e=>e.shape)),r),s=t.filter((e=>Jp.sizeFromShape(e.shape)>0));if(1===s.length)return e3({inputs:{x:s[0]},backend:n});let i=n.makeOutput(a,t[0].dtype);if(0===Jp.sizeFromShape(a))return i;let o=s.map((e=>e.shape));if($v.assertParamsConsistent(o,r),"string"===s[0].dtype){let e=s.map((e=>{let t=Jp.sizeFromShape(e.shape.slice(r));return f3({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=$v.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=sD(o,a,t[0].dtype,l),d=$v.computeOutShape(s.map((e=>e.shape)),r);return i.shape=d,n.dataIdMap.get(i.dataId).stringBytes=$v.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}let l=Jp.sizeFromShape(s[0].shape.slice(0,r)),u=0,d=s.map((e=>{let t=Jp.sizeFromShape(e.shape.slice(r));return u+=t,t})),c=s.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(i);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<c.length;n++){let r=d[n],a=e*r,s=c[n].subarray(a,a+r);p.set(s,t),t+=r}}return i}var T3,C3,E3,_3,R3,M3,$3,F3={kernelName:od,backendName:"wasm",kernelFunc:N3},O3={kernelName:ld,backendName:"wasm",setupFunc:function(e){T3=e.wasm.cwrap(ld,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:c,dataFormat:p}=n,h=$v.convertConv2DDataFormat(p),f=$v.computeConv2DInfo(a.shape,s.shape,l,u,d,c,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,b=f.padInfo.bottom,x=f.padInfo.left,w=f.dilationHeight,v=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return T3(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,A,b,x,T,w,v,k,I,S,N,E),C}},z3={kernelName:dd,backendName:"wasm",setupFunc:function(e){C3=e.wasm.cwrap(dd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=r,c=$v.convertConv2DDataFormat(l),p=$v.computeConv2DInfo(d,s.shape,i,1,o,u,!1,c),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:A,outChannels:b,outHeight:x,outWidth:w,strideHeight:v,strideWidth:k}=p,I=f-1-p.padInfo.top,S=m-1-p.padInfo.left,N="channelsLast"===p.dataFormat,T=Jp.computeStrides(p.inShape),C=Jp.computeStrides(a.shape),[E,_,R]=Jp.computeStrides(s.shape),M=T[0],$=N?T[1]:T[2],F=N?T[2]:1,O=N?1:T[1],z=C[0],D=N?C[1]:C[2],P=N?C[2]:1,L=N?1:C[1],W=t.makeOutput(p.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(a.dataId).id,V=t.dataIdMap.get(s.dataId).id;return C3(U,V,h,f,m,y,A,g,x,w,b,v,k,I,S,E,_,R,M,$,F,O,z,D,P,L,B),W}},D3=K5(fd),P3=K5(md),L3=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(L3||{}),W3={kernelName:Ad,backendName:"wasm",setupFunc:function(e){E3=e.wasm.cwrap(Ad,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{method:s,extrapolationValue:i,cropSize:o}=a,{image:l,boxes:u,boxInd:d}=r,c=u.shape[0],[p,h]=o,f=[c,p,h,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=w3({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,A=n.dataIdMap.get(d.dataId).id,b=n.makeOutput(f,"float32"),x=n.dataIdMap.get(b.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return E3(g,y,A,c,w,p,h,L3[s],i,x),null!=t&&n.disposeData(t.dataId),b}},B3={kernelName:gd,backendName:"wasm",setupFunc:function(e){_3=e.wasm.cwrap(gd,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Jp.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`));let u=$v.getAxesPermutation([s],l),d=a;null!==u&&(d=r3({inputs:{x:a},attrs:{perm:u},backend:n}));let c=$v.getInnerMostAxes(1,l)[0];$v.assertAxesAreInnerMostDims("cumprod",[c],l);let p=n.makeOutput(d.shape,d.dtype),h=d.shape[c],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;_3(f,i?1:0,o?1:0,h,m,j5[a.dtype]);let g=p;return null!==u&&(g=r3({inputs:{x:p},attrs:{perm:$v.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),g}},U3={kernelName:yd,backendName:"wasm",setupFunc:function(e){R3=e.wasm.cwrap(yd,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,l=a.shape.length;Jp.assert("float32"===a.dtype||"int32"===a.dtype,(()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`));let u=$v.getAxesPermutation([s],l),d=a;null!==u&&(d=r3({inputs:{x:a},attrs:{perm:u},backend:n}));let c=$v.getInnerMostAxes(1,l)[0];$v.assertAxesAreInnerMostDims("cumsum",[c],l);let p=n.makeOutput(d.shape,d.dtype),h=d.shape[c],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(p.dataId).id;R3(f,i?1:0,o?1:0,h,m,j5[a.dtype]);let g=p;return null!==u&&(g=r3({inputs:{x:p},attrs:{perm:$v.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(p.dataId)),g}},V3={kernelName:xd,backendName:"wasm",setupFunc:function(e){M3=e.wasm.cwrap(xd,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,d=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),c="NHWC"===i?[o,l,u,d]:[o,d,l,u],p=t.makeOutput(c,"float32"),h=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(Jp.computeStrides(a.shape)).buffer),m=new Uint8Array(new Int32Array(c).buffer),g=new Uint8Array(new Int32Array(Jp.computeStrides(c)).buffer),y=t.dataIdMap.get(p.dataId).id;return M3(h,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,c.length,y),p}},G3={kernelName:wd,backendName:"wasm",setupFunc:function(e){$3=e.wasm.cwrap(wd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:c}=n,p=null==u?[1,1]:u,h=$v.computeConv2DInfo(a.shape,s.shape,l,p,d,c,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,A=h.padInfo.bottom,b=h.padInfo.left,x=h.dilationHeight,w=h.dilationWidth,v=h.strideHeight,k=h.strideWidth,I=h.inChannels,S=h.outChannels,N="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let T=r.makeOutput(h.outShape,"float32"),C=r.dataIdMap.get(T.dataId).id;return $3(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,A,b,N,x,w,v,k,I,S,C),T}},j3=K5(_d),H3=Z5($d,0,"bool"),q3=K5(Fd,"float32");function K3(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(Jp.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),f3({inputs:{x:a},backend:r,attrs:{shape:o}})}var X3={kernelName:Od,backendName:"wasm",kernelFunc:K3};function Z3(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var Y3,J3,Q3,e7,t7,n7,r7,a7,s7,i7,o7,l7,u7,d7={kernelName:Pd,backendName:"wasm",kernelFunc:Z3},c7={kernelName:Ld,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,l,u,d]=r.shape;return Y3(s,o,l,u,d,i),a},setupFunc:function(e){Y3=e.wasm.cwrap(Ld,null,["number","number","number","number","number","number"])}},p7=K5(Wd),h7=Z5(Bd),f7={kernelName:Ud,backendName:"wasm",setupFunc:function(e){J3=e.wasm.cwrap(Ud,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(s.dataId).id,c=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===Jp.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return J3(d,c,p,h,f,a,g),m}},m7={kernelName:Dp,backendName:"wasm",setupFunc:function(e){Q3=e.wasm.cwrap(Dp,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=$v.computeConv2DInfo(a.shape,s.shape,l,d,u,p),g=H5[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels,x=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}let w=m.filterHeight,v=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==c)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return Q3(y,$,F,O,A,w,v,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}},g7={kernelName:Pp,backendName:"wasm",setupFunc:function(e){e7=e.wasm.cwrap(Pp,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:c,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=$v.computeConv2DInfo(a.shape,s.shape,l,d,u,p,!0),g=H5[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,A=r.dataIdMap.get(s.dataId).id,b=m.outChannels,x=0;if(null!=i){let e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==b)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${b})`);x=e.id}let w=m.filterHeight,v=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,R=m.inChannels,M="SAME"===m.padInfo.type?1:0,$=m.batchSize,F=m.inHeight,O=m.inWidth;if("NHWC"!==c)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${c}'. Please use 'NHWC'.`);let z=r.makeOutput(m.outShape,"float32"),D=r.dataIdMap.get(z.dataId).id,P=null==o?0:r.dataIdMap.get(o.dataId).id;return e7(y,$,F,O,A,w,v,x,k,I,S,N,M,T,C,E,_,R,b,g,P,f||0,D),z}},y7={kernelName:Gd,backendName:"wasm",setupFunc:function(e){t7=e.wasm.cwrap(Gd,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,l]=qm.prepareAndValidate(r,a),u=t.makeOutput(s,r.dtype);if(0===i)return u;let d=a.shape,c=d[d.length-1],p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return t7(p,j5[r.dtype],h,i,c,o,f,m),u}},A7={kernelName:Vd,backendName:"wasm",setupFunc:function(e){n7=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,l=Jp.parseAxisParam(i,a.shape)[0],u=t.readSync(s.dataId),d=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];Jp.assert(t<=d-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${d-1}]`))}let c=$v.segment_util.collectGatherOpShapeInfo(a,s,l,o),p=f3({inputs:{x:a},attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]},backend:t}),h=Jp.sizeFromShape(s.shape),f=f3({inputs:{x:s},attrs:{shape:[c.batchSize,h/c.batchSize]},backend:t}),m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],g=t.makeOutput(m,a.dtype);if(0===Jp.sizeFromShape(a.shape))return g;let y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,b=t.dataIdMap.get(f.dataId).id,x=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(Jp.computeStrides(p.shape)).buffer),v=new Uint8Array(new Int32Array(Jp.computeStrides(m)).buffer);return n7(A,j5[a.dtype],w,y,b,c.batchSize,v,x),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=c.outputShape,g}},b7=Z5(jd,0,"bool"),x7=Z5(Hd,0,"bool"),w7={kernelName:Qd,backendName:"wasm",setupFunc:function(e){r7=e.wasm.cwrap(Qd,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==Jp.sizeFromShape(t.shape)){let e=r.dataIdMap.get(s.dataId).id;r7(a,j5[t.dtype],n,e)}return s}},v7=Z5(ec,0,"bool"),k7=Z5(tc,0,"bool"),I7=K5(rc),S7=Z5(sc,0,"bool"),N7={kernelName:cc,backendName:"wasm",setupFunc:function(e){a7=e.wasm.cwrap(cc,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:d,originalAxes:c,inputWasTransposed:p}=i3(i,a,t);p&&(l=u,o=t.dataIdMap.get(u.dataId).id);let h=l.shape.length;$v.assertAxesAreInnerMostDims("max",d,h);let[f,m]=$v.computeOutAndReduceShapes(l.shape,d),g=Jp.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==Jp.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;a7(o,j5[i.dtype],g,e)}if(p&&t.disposeData(u.dataId),s){let e=$v.expandShapeToKeepDim(y.shape,c);y.shape=e}return y}},T7=Z5(pc),C7={kernelName:hc,backendName:"wasm",setupFunc:function(e){s7=e.wasm.cwrap(hc,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;Jp.assert("float32"===a.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,d=$v.computePool2DInfo(a.shape,i,o,1,l,u),c=d.filterHeight,p=d.filterWidth,h=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,A=d.dilationWidth,b=d.strideHeight,x=d.strideWidth,w=d.inChannels,v=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let k=r.makeOutput(d.outShape,"float32"),I=r.dataIdMap.get(k.dataId).id;return s7(s,a.shape[0],a.shape[1],a.shape[2],c,p,h,f,m,g,y,A,b,x,w,v,I),k}},E7={kernelName:Ac,backendName:"wasm",setupFunc:function(e){i7=e.wasm.cwrap(Ac,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=i3(i,a,t),f=c;if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=$v.getInnerMostAxes(f.length,u.shape.length))}$v.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=$v.computeOutAndReduceShapes(u.shape,f),y=Jp.sizeFromShape(g),A=u;"float32"!==u.dtype&&(A=w3({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let b=t.makeOutput(m,"float32");if(0!==Jp.sizeFromShape(u.shape)){let e=t.dataIdMap.get(b.dataId).id;i7(l,y,e)}if(h&&t.disposeData(d.dataId),s){let e=$v.expandShapeToKeepDim(b.shape,p);b.shape=e}return"float32"!==u.dtype&&t.disposeData(A.dataId),b}},_7={kernelName:bc,backendName:"wasm",setupFunc:function(e){o7=e.wasm.cwrap(bc,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=i3(i,a,t);if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;$v.assertAxesAreInnerMostDims("min",c,f);let[m,g]=$v.computeOutAndReduceShapes(u.shape,c),y=Jp.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==Jp.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;o7(l,j5[i.dtype],y,e)}if(h&&t.disposeData(d.dataId),s){let e=$v.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},R7=Z5(xc),M7=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(M7||{}),$7={kernelName:wc,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),c=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(c).buffer);return l7(i,u,t.shape.length,j5[t.dtype],p,h,M7[a],l),o},setupFunc:function(e){l7=e.wasm.cwrap(wc,null,["number","array","number","number","array","array","number","number"])}},F7=Z5(Ic),O7=K5(Sc);function z7(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var D7,P7,L7,W7,B7,U7,V7,G7,j7,H7,q7,K7,X7,Z7,Y7,J7,Q7={kernelName:Tc,backendName:"wasm",setupFunc:function(e){u7=e.wasm.cwrap(Tc,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,c=u7(u,d,s,a,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=z7(t,c);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}},e6={kernelName:Cc,backendName:"wasm",setupFunc:function(e){D7=e.wasm.cwrap(Cc,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=D7(d,c,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=z7(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}},t6={kernelName:Ec,backendName:"wasm",setupFunc:function(e){P7=e.wasm.cwrap(Ec,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=P7(d,c,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=z7(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},n6=Z5(Nc,0,"bool"),r6={kernelName:Rc,backendName:"wasm",setupFunc:function(e){L7=e.wasm.cwrap(Rc,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=n.makeOutput([...a.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(a.dataId).id;return L7(d,s,i,o,u),l}},a6={kernelName:_c,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},s6={kernelName:Mc,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return K3({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{Jp.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Jp.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=N3({inputs:t.map((e=>{let t=K3({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeData(e.dataId))),l}},i6={kernelName:$c,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===Jp.sizeFromShape(t.shape))return Z3({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=r.map((e=>e[0])),c=r.map((e=>e[1])),p=new Uint8Array(new Int32Array(d).buffer),h=new Uint8Array(new Int32Array(c).buffer);return W7(i,u,t.shape.length,j5[t.dtype],p,h,a,l),o},setupFunc:function(e){W7=e.wasm.cwrap($c,null,["number","array","number","number","array","array","number","number"])}},o6=Z5(Oc),l6={kernelName:zc,backendName:"wasm",setupFunc:function(e){B7=e.wasm.cwrap(zc,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,l=r,u=l;"float32"!==l.dtype&&(u=w3({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(r.shape,"float32"),c=n.dataIdMap.get(d.dataId).id;return B7(o,i,c),"float32"!==l.dtype&&n.disposeData(u.dataId),d}},u6={kernelName:Dc,backendName:"wasm",setupFunc:function(e){U7=e.wasm.cwrap(Dc,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=i3(i,a,t),f=c;if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=$v.getInnerMostAxes(f.length,u.shape.length))}$v.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=$v.computeOutAndReduceShapes(u.shape,f),y=Jp.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==Jp.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;U7(l,y,j5[A.dtype],e)}if(h&&t.disposeData(d.dataId),s){let e=$v.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},d6={kernelName:Pc,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=rP(r,a,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},c6=Z5(Cd),p6=K5(Bc),h6=K5(qc),f6={kernelName:jc,backendName:"wasm",setupFunc:function(e){V7=e.wasm.cwrap(jc,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{images:s}=r,{alignCorners:i,halfPixelCenters:o,size:l}=a,[u,d]=l,[c,p,h,f]=s.shape,m=[c,u,d,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=w3({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,A=n.makeOutput(m,"float32");if(0===Jp.sizeFromShape(s.shape))return A;let b=n.dataIdMap.get(A.dataId).id;return V7(y,c,p,h,f,u,d,i?1:0,o?1:0,b),null!=t&&n.disposeData(t.dataId),A}},m6={kernelName:Kc,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=Jp.parseAxisParam(s,a.shape);if(0===a.shape.length)return e3({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),c=new Uint8Array(new Int32Array(a.shape).buffer);G7(l,d,i.length,c,a.shape.length,u);let p=f3({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){G7=e.wasm.cwrap(Kc,null,["number","array","number","array","number","number"])}},g6={kernelName:Op,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,l=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[c,p,h,f]=a.shape,[m,g]=$v.getImageCenter(o,p,h),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return j7(u,c,p,h,f,s,m,g,A,y.length,d),l},setupFunc:function(e){j7=e.wasm.cwrap(Op,null,["number","number","number","number","number","number","number","number","array","number","number"])}},y6=K5(Xc),A6=K5(Zc),b6={kernelName:Yc,backendName:"wasm",setupFunc:function(e){H7=e.wasm.cwrap(Yc,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===Jp.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:c,outputSize:p}=Xm.calculateShapes(s,a,i),h=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(c).buffer),g=t.dataIdMap.get(o.dataId).id;return H7(h,f,j5[s.dtype],l,u,d,m,p,g),o}},x6={kernelName:Jc,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(u.dataId).id,c=r.shape.length,p=a.shape.length,h=0===c||c>1||1===p?1:Jp.sizeFromShape(a.shape.slice(1));return q7(i,o,l,h,d),u},setupFunc:function(e){q7=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},w6={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){K7=e.wasm.cwrap(ap,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===Jp.sizeFromShape(a.shape)||K7(r,s),a}},v6=K5(tp),k6={kernelName:dp,backendName:"wasm",setupFunc:function(e){X7=e.wasm.cwrap(dp,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],l=Jp.sizeFromShape(n.shape)/o;return 0===Jp.sizeFromShape(s.shape)||X7(a,i,o,l),s}},I6={kernelName:lp,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=Jp.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=i6.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=$v.getReshaped(u.shape,s,o,!1),c=$v.getPermuted(d.length,s.length,!1),p=$v.getReshapedPermuted(u.shape,s,o,!1),h=f3({inputs:{x:u},backend:n,attrs:{shape:d}}),f=r3({inputs:{x:h},backend:n,attrs:{perm:c}}),m=f3({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}},S6={kernelName:cp,backendName:"wasm",setupFunc:function(e){Z7=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r}=e,{indices:a,values:s,denseShape:i,defaultValue:o}=r,l=a.shape[0],u=a.shape[1],d=n.readSync(i.dataId)[0],c=[l+d,u],p=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(c,a.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(c.slice(0,1),s.dtype),A=n.dataIdMap.get(y.dataId).id,b=n.makeOutput([d],"bool"),x=n.dataIdMap.get(b.dataId).id,w=n.makeOutput([l],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=n.makeOutput([4],"int32"),I=n.dataIdMap.get(k.dataId).id,S=Z7(p,h,j5[s.dtype],l,d,u,f,g,A,x,v,I),N=n.readSync(k.dataId);switch(N[0]){case 1:t=$v.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:t=$v.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:t=$v.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:t=""}if(n.disposeData(k.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(b.dataId),n.disposeData(w.dataId),new Error(t);let T=m,C=y;return S!==c[0]&&(T=A3({inputs:{x:m},attrs:{begin:0,size:[S,u]},backend:n}),C=A3({inputs:{x:y},attrs:{begin:0,size:S},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[T,C,b,w]}},N6={kernelName:pp,backendName:"wasm",setupFunc:function(e){Y7=e.wasm.cwrap(pp,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=r.shape[0],d=Jp.sizeFromShape(s.shape),c=t.makeOutput([u,d],r.dtype),p=t.dataIdMap.get(c.dataId).id,h=t.makeOutput([d],s.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;Y7(i,o,l,u,p,f,g);let y,A=t.readSync(m.dataId);switch(A[0]){case 0:y=$v.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break;case 1:y=$v.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break;case 2:y=$v.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(h.dataId));y=$v.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(a.dataId)),n=Array.from(t.readSync(h.dataId));y=$v.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(c.dataId),t.disposeData(h.dataId),new Error(y);return[c,h]}};function T6(e){J7=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function C6(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error($v.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=a.shape.slice();d[0]=u;let c=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(d,a.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;J7(c,j5[a.dtype],a.shape[0],p,h,m,y,t,0);let A,b=n.readSync(g.dataId);switch(b[0]){case 0:A=$v.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:A=$v.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:A=$v.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:A=$v.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:A=""}if(n.disposeData(g.dataId),A)throw n.disposeData(f.dataId),new Error(A);return f}var E6,_6,R6,M6,$6,F6,O6={kernelName:hp,backendName:"wasm",setupFunc:T6,kernelFunc:function(e){return C6(e,!0)}},z6={kernelName:fp,backendName:"wasm",setupFunc:T6,kernelFunc:function(e){return C6(e,!1)}},D6={kernelName:up,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=Jp.parseAxisParam(i,a.shape)[0],l=$v.prepareSplitSize(a,s,o),u=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{let t=[...d];t[o]=e;let n=A3({inputs:{x:a},attrs:{begin:u,size:t},backend:r});return u[o]+=e,n}))}},P6=K5(ip),L6=K5(yp),W6=Z5(gp),B6={kernelName:$p,backendName:"wasm",setupFunc:function(e){E6=e.wasm.cwrap($p,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return E6(i,a,j5[s.dtype],l),o}},U6={kernelName:Ap,backendName:"wasm",setupFunc:function(e){_6=e.wasm.cwrap(Ap,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:b,end:x,strides:w}=Qm.sliceInfo(s.shape,i,o,l,u,d,c,p,h);if(g)t=f3({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||A){Jp.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Qm.computeOutShape(b,x,w),r=A3({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});t=f3({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else{let e=n.makeOutput(f,"float32"),r=n.dataIdMap.get(s.dataId).id,a=new Uint8Array(new Int32Array(Jp.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(b).buffer),o=new Uint8Array(new Int32Array(x).buffer),l=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array(Jp.computeStrides(f)).buffer),c=n.dataIdMap.get(e.dataId).id;_6(r,a,s.shape.length,i,o,l,u,d,f.length,c),t=f3({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}},V6=Z5(vp),G6={kernelName:op,backendName:"wasm",setupFunc:function(e){R6=e.wasm.cwrap(op,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:d,axes:c,originalAxes:p,inputWasTransposed:h}=i3(i,a,t),f=c;if(h){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=$v.getInnerMostAxes(f.length,u.shape.length))}$v.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=$v.computeOutAndReduceShapes(u.shape,f),y=Jp.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==Jp.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;R6(l,y,j5[A.dtype],e)}if(h&&t.disposeData(d.dataId),s){let e=$v.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},j6=K5(kp),H6=K5(Ip),q6={kernelName:Sp,backendName:"wasm",setupFunc:function(e){M6=e.wasm.cwrap(Sp,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];let l=new Uint8Array(new Int32Array(a.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,a.dtype),c=n.dataIdMap.get(d.dataId).id;return M6(s,l,a.shape.length,u,o.length,j5[d.dtype],c),d}},K6={kernelName:Np,backendName:"wasm",setupFunc:function(e){$6=e.wasm.cwrap(Np,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),l=r.shape.slice();l[l.length-1]=a;let u=t.makeOutput(l,r.dtype),d=t.dataIdMap.get(u.dataId).id,c=t.makeOutput(l,"int32"),p=t.dataIdMap.get(c.dataId).id;return $6(i,o,r.shape.length,j5[r.dtype],a,s,d,p),[u,c]}},X6={kernelName:Tp,backendName:"wasm",setupFunc:function(e){F6=e.wasm.cwrap(Tp,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:r,attrs:a}=e,{image:s,transforms:i}=r,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=a,[c,p,h,f]=s.shape,[m,g]=null!=d?d:[p,h],y=[c,m,g,f],A=new Uint8Array(new Int32Array(Jp.computeStrides(s.shape)).buffer),b=n.makeOutput(y,s.dtype),x=n.dataIdMap.get(b.dataId).id,w=n.dataIdMap.get(s.dataId).id,v=n.dataIdMap.get(i.dataId).id,k="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return F6(w,v,i.shape[0]>1,c,m,g,f,h,p,A,s.shape.length-1,k,t,u,x),b}},Z6={kernelName:_p,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=a.shape[e]);let d=new Array(i),c=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<d.length;e++)c[s]=e,d[e]=A3({inputs:{x:a},attrs:{begin:c,size:p},backend:n});return d.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},Y6={kernelName:Mp,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},J6=[q5,X5,J5,Q5,d3,c3,p3,h3,y3,x3,k3,I3,S3,F3,O3,z3,D3,P3,W3,B3,U3,V3,G3,j3,H3,q3,X3,d7,c7,p7,h7,f7,m7,g7,y7,A7,b7,x7,n3,w7,v7,k7,I7,S7,N7,T7,C7,E7,_7,R7,$7,F7,O7,Q7,e6,t6,n6,r6,a6,s6,i6,o6,l6,u6,d6,c6,p6,h6,g3,f6,m6,g6,y6,A6,b6,x6,w6,v6,b3,k6,I6,S6,N6,O6,z6,D6,P6,L6,W6,B6,U6,V6,G6,j6,H6,q6,K6,X6,s3,Z6,Y6];for(let e of J6)Hp(e);var Q6=Cu();Q6.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),Q6.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Q6.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var e4=ol(Nl()),t4=ol(Tl()),n4=class extends El{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(p4),h4=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Cl(this,Ug())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=Jp.now();return e(),{kernelMs:Jp.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if("string"===r){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}let i=Jp.sizeFromShape(n),o=i*Jp.bytesPerElement(r),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===a)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||Jp.sizeFromShape(s);let o=Jp.bytesPerElement(a);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(r+t*o,r+n*o).buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=Jp.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=Jp.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function r4(e,t,n){if(null!=s4)return s4;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=o4&&null!=o4[r]?o4[r]:n+r}var a4=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],s4=null,i4=null,o4={},l4=!1,u4=!1;function d4(e,t=!1){if(Wg("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),l4)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");s4=e,u4=t}function c4(e,t=!1){if(l4)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)i4=e;else{o4=e;let t=a4.filter((e=>null==o4[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}u4=t}var p4=-1,h4=-1;function f4(e){p4=e}function m4(){if(-1===h4)throw new Error("WASM backend not initialized.");return h4}var g4="0.0.0";ty("wasm",(async()=>{let{wasm:e}=await async function(){let[e,t]=await Promise.all([Cu().getAsync("WASM_HAS_SIMD_SUPPORT"),Cu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{let a={locateFile:(n,r)=>{if(n.endsWith(".worker.js")){let e='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=((info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports});self.onmessage=(e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInit();try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(Module["keepRuntimeAlive"]()){Module["PThread"].setExitStatus(result)}else{Module["__emscripten_thread_exit"](result)}}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else if(e.data.cmd==="processProxyingQueue"){if(Module["_pthread_self"]()){Module["_emscripten_proxy_execute_queue"](e.data.queue)}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}});'.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?r4(e,t,null!=i4?i4:r):r+n}};u4&&(a.instantiateWasm=function(e){return(t,n)=>(Jp.fetch(e,{credentials:"same-origin"}).then((r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}(r4(e,t,null!=i4?i4:"")));let s,i=!1;a.onAbort=()=>{i||l4||(l4=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==s4?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+e4.default.toString()],{type:"text/javascript"}),s=(0,e4.default)(a)):s=(0,t4.default)(a),s.then((e=>{i=!0,l4=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new n4(e)}),2);var y4="3.15.0-20220405",A4={tfjs:y4,"tfjs-core":y4,"tfjs-data":y4,"tfjs-layers":y4,"tfjs-converter":y4,"tfjs-backend-cpu":y4,"tfjs-backend-webgl":y4,"tfjs-backend-wasm":y4},b4=(e,t,n)=>{const r=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(r,((e,t)=>(n[t]=0,e)))},x4=class{constructor(e,t,n){Uo(this,"uniform",{}),Uo(this,"attribute",{}),Uo(this,"gl"),Uo(this,"id"),Uo(this,"compile",((e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(qo(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)}`),null)):(qo("filter: could not create shader"),null)})),this.gl=e;const r=this.compile(t,this.gl.VERTEX_SHADER),a=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),r&&a)if(this.id)if(this.gl.attachShader(this.id,r),this.gl.attachShader(this.id,a),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),b4(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);b4(t,"uniform",this.uniform),b4(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else qo(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);else qo("filter: could not create webgl program")}};function w4(){let e=0,t=null,n=!1,r=-1,a=[null,null],s=[],i=null,o=null;const l=E4(100,100),u={},d=l.getContext("webgl");if(this.gl=d,!d)return void qo("filter: cannot get webgl context");function c(e){return a[e]=a[e]||function(e,t){const n=d.createFramebuffer();d.bindFramebuffer(d.FRAMEBUFFER,n);const r=d.createRenderbuffer();d.bindRenderbuffer(d.RENDERBUFFER,r);const a=d.createTexture();return d.bindTexture(d.TEXTURE_2D,a),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,e,t,0,d.RGBA,d.UNSIGNED_BYTE,null),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.LINEAR),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.framebufferTexture2D(d.FRAMEBUFFER,d.COLOR_ATTACHMENT0,d.TEXTURE_2D,a,0),d.bindTexture(d.TEXTURE_2D,null),d.bindFramebuffer(d.FRAMEBUFFER,null),{fbo:n,texture:a}}(l.width,l.height),a[e]}function p(a=0){if(!o)return;let s=null,i=null,l=!1;s=0===e?t:c(r).texture||null,e++,!n||1&a?(r=(r+1)%2,i=c(r).fbo||null):(i=null,l=e%2==0),d.bindTexture(d.TEXTURE_2D,s),d.bindFramebuffer(d.FRAMEBUFFER,i),d.uniform1f(o.uniform.flipY,l?-1:1),d.drawArrays(d.TRIANGLES,0,6)}function h(e){if(u[e])return o=u[e],d.useProgram((o?o.id:null)||null),o;if(o=new x4(d,"\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",e),!o)return qo("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return d.enableVertexAttribArray(o.attribute.pos),d.vertexAttribPointer(o.attribute.pos,2,d.FLOAT,!1,n,0*t),d.enableVertexAttribArray(o.attribute.uv),d.vertexAttribPointer(o.attribute.uv,2,d.FLOAT,!1,n,2*t),u[e]=o,o}const f={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=h(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n":"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n");n&&(d.uniform1fv(n.uniform.m,t),p())},brightness:e=>{const t=(e||0)+1;f.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);f.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{f.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);f.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{f.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),r=.213,a=.715,s=.072;f.colorMatrix([r+.787*t+n*-r,a+t*-a+n*-a,s+t*-s+.928*n,0,0,r+t*-r+.143*n,a+t*(1-a)+.14*n,s+t*-s+-.283*n,0,0,r+t*-r+-.787*n,a+t*-a+n*a,s+.928*t+n*s,0,0,0,0,0,1,0])},desaturateLuminance:()=>{f.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{f.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{f.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{f.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{f.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{f.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{f.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{f.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/l.width,r=1/l.height,a=h("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n");a&&(d.uniform1fv(a.uniform.m,t),d.uniform2f(a.uniform.px,n,r),p())},detectEdges:()=>{f.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{f.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{f.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;f.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;f.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/l.width,n=e/7/l.height,r=h("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n");r&&(d.uniform2f(r.uniform.px,0,n),p(1),d.uniform2f(r.uniform.px,t,0),p())},pixelate:e=>{const t=e/l.width,n=e/l.height,r=h("\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n");r&&(d.uniform2f(r.uniform.size,t,n),p())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=f[e];s.push({func:n,args:t})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(r){!function(e,t){if(e!==l.width||t!==l.height){if(l.width=e,l.height=t,!i){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=d.createBuffer(),d.bindBuffer(d.ARRAY_BUFFER,i),d.bufferData(d.ARRAY_BUFFER,e,d.STATIC_DRAW),d.pixelStorei(d.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}d.viewport(0,0,l.width,l.height),a=[null,null]}}(r.width,r.height),e=0,t||(t=d.createTexture()),d.bindTexture(d.TEXTURE_2D,t),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_S,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_WRAP_T,d.CLAMP_TO_EDGE),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA,d.RGBA,d.UNSIGNED_BYTE,r);for(let e=0;e<s.length;e++){n=e===s.length-1;const t=s[e];t.func.apply(this,t.args||[])}return l},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function v4(e){const t=4===e.shape.length?zx(e):e,n=Mx(t,3,2),r=[_b(n[0]),_b(n[1]),_b(n[2])],a=[sb(n[0]),sb(n[1]),sb(n[2])],s=await Promise.all(a.map((e=>e.data()))),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[ib(n[0],r[0]),ib(n[1],r[1]),ib(n[2],r[2])],l=[ib(a[0],r[0]),ib(a[1],r[1]),ib(a[2],r[2])],u=[iy(i,l[0]),iy(i,l[1]),iy(i,l[2])],d=[oy(o[0],u[0]),oy(o[1],u[1]),oy(o[2],u[2])],c=Dx([d[0],d[1],d[2]],2),p=Oy(c,[1,t.shape[0],t.shape[1],3]);return Hg([...n,...r,...a,...o,...l,...u,...d,c,t]),p}var k4,I4=2048,S4=null,N4=null,T4=null,C4={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function E4(e,t){let n;if(M4.browser)if(M4.worker){if("undefined"==typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if("undefined"==typeof document)throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else void 0!==M4.Canvas?n=new M4.Canvas(e,t):void 0!==globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function _4(e,t){const n=t||E4(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function R4(e,t,n=!0){if(!e)return t.debug&&qo("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof _h||"undefined"!=typeof Image&&e instanceof Image||void 0!==M4.Canvas&&e instanceof M4.Canvas||void 0!==globalThis.Canvas&&e instanceof globalThis.Canvas||"undefined"!=typeof ImageData&&e instanceof ImageData||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLMediaElement&&e instanceof HTMLMediaElement||"undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof _h){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=EA(e,0);else if(4===e.shape[2]){const t=Nx(e,[0,0,0],[-1,-1,3]);n=EA(t,0),Hg(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=dm(e):4===e.shape[3]&&(n=Tx(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if("int32"===n.dtype){const e=um(n,"float32");Hg(n),n=e}return{tensor:n,canvas:t.filter.return?N4:null}}{if(void 0!==e.readyState&&e.readyState<=2)return t.debug&&qo("input stream is not ready"),{tensor:null,canvas:S4};const r=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,a=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!r||!a)return t.debug&&qo("cannot determine input dimensions"),{tensor:null,canvas:S4};let s=r,i=a;if(s>I4&&(s=I4,i=Math.trunc(s*a/r)),i>I4&&(i=I4,s=Math.trunc(i*r/a)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=r*((t.filter.height||0)/a)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=a*((t.filter.width||0)/r)),!s||!i)throw new Error("input error: cannot determine dimension");S4&&(null==S4?void 0:S4.width)===s&&(null==S4?void 0:S4.height)===i||(S4=E4(s,i));const o=S4.getContext("2d");if("undefined"!=typeof ImageData&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&void 0!==o.translate?(o.translate(r,0),o.scale(-1,1),o.drawImage(e,0,0,r,a,0,0,null==S4?void 0:S4.width,null==S4?void 0:S4.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,r,a,0,0,null==S4?void 0:S4.width,null==S4?void 0:S4.height),N4&&S4.width===N4.width&&(null==S4?void 0:S4.height)===(null==N4?void 0:N4.height)||(N4=E4(S4.width,S4.height)),t.filter.enabled&&M4.webgl.supported){if(k4||(k4=M4.browser?new w4:null),M4.filter=!!k4,!k4||!k4.add)return t.debug&&qo("input process error: cannot initialize filters"),{tensor:null,canvas:S4};k4.reset(),0!==t.filter.brightness&&k4.add("brightness",t.filter.brightness),0!==t.filter.contrast&&k4.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&k4.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&k4.add("blur",t.filter.blur),0!==t.filter.saturation&&k4.add("saturation",t.filter.saturation),0!==t.filter.hue&&k4.add("hue",t.filter.hue),t.filter.negative&&k4.add("negative"),t.filter.sepia&&k4.add("sepia"),t.filter.vintage&&k4.add("brownie"),t.filter.sepia&&k4.add("sepia"),t.filter.kodachrome&&k4.add("kodachrome"),t.filter.technicolor&&k4.add("technicolor"),t.filter.polaroid&&k4.add("polaroid"),0!==t.filter.pixelate&&k4.add("pixelate",t.filter.pixelate),N4=k4.get()>0?k4.apply(S4):k4.draw(S4)}else _4(S4,N4),k4&&(k4=null),M4.filter=!!k4;if(!n)return{tensor:null,canvas:N4};if(!N4)throw new Error("canvas error: cannot create output");let l,u=3;if("undefined"!=typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)M4.browser&&Bm?l=Bm?Bm.fromPixels(e):null:(u=e.data.length/e.height/e.width,l=gf(new Uint8Array(e.data.buffer),[e.height,e.width,u],"int32"));else if(T4&&N4.width===T4.width&&N4.height===T4.height||(T4=E4(N4.width,N4.height)),Bm&&M4.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?l=Bm.fromPixels(N4):(T4=_4(N4),l=Bm.fromPixels(T4));else{const e=_4(N4).getContext("2d").getImageData(0,0,s,i);u=e.data.length/s/i,l=gf(new Uint8Array(e.data.buffer),[s,i,u])}if(4===u){const e=Nx(l,[0,0,0],[-1,-1,3]);Hg(l),l=e}if(!l)throw new Error("input error: cannot create tensor");const d=um(l,"float32"),c=t.filter.equalization?await v4(d):EA(d,0);return Hg([l,d]),{tensor:c,canvas:t.filter.return?N4:null}}}var M4=new class{constructor(){if(Uo(this,"browser"),Uo(this,"node"),Uo(this,"worker"),Uo(this,"platform",""),Uo(this,"agent",""),Uo(this,"backends",[]),Uo(this,"initial"),Uo(this,"filter"),Uo(this,"tfjs"),Uo(this,"offscreen"),Uo(this,"perfadd",!1),Uo(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),Uo(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),Uo(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),Uo(this,"cpu",{model:void 0,flags:[]}),Uo(this,"kernels",[]),Uo(this,"Canvas"),Uo(this,"Image"),Uo(this,"ImageData"),this.browser="undefined"!=typeof navigator,this.node="undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node,this.tfjs={version:A4["tfjs-core"]},this.offscreen="undefined"!=typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!=typeof WorkerGlobalScope:void 0,"undefined"!=typeof navigator){const e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){const t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!=typeof process&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}async updateBackend(){this.backends=Object.keys(Ug().registryFactory),this.wasm.supported="undefined"!=typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&"wasm"===Yg()&&(this.wasm.simd=await Cu().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Cu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=E4(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported=void 0!==t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&("webgl"===Yg()||"humangl"===Yg())){const e="undefined"!==ny().gpgpu?await ny().getGPGPUContext().gl:null;e&&(this.webgl.version=e.getParameter(e.VERSION),this.webgl.renderer=e.getParameter(e.RENDERER))}this.webgpu.supported=this.browser&&void 0!==navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(e){this.webgpu.supported=!1}try{this.kernels=jp(Yg()).map((e=>e.kernelName.toLowerCase()))}catch(e){}}async updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},$4={cacheModels:!1,verbose:!0,debug:!1,modelBasePath:""};async function F4(e){const t=function(e,t){const n=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}($4.modelBasePath,e||""),n=t.split("/"),r="indexeddb://"+n[n.length-1].replace(".json",""),a=await pm.listModels(),s=$4.cacheModels&&Object.keys(a).includes(r),i="undefined"==typeof fetch?{}:{fetchFunc:(e,t)=>async function(e,t){return $4.debug&&qo("load model fetch:",e,t),fetch(e,t)}(e,t)},o=new pO(s?r:t,i);let l=!1;try{o.findIOHandler(),$4.debug&&qo("model load handler:",o.handler);const e=await o.handler.load();o.loadSync(e),$4.verbose&&qo("load model:",o.modelUrl),l=!0}catch(e){qo("error loading model:",t,e)}if(l&&$4.cacheModels&&!s)try{qo("model saved:",r,await o.save(r))}catch(e){qo("error saving model:",t,e)}return o}var O4,z4="2.6.5";Bo({},{Models:()=>hne,load:()=>mne,reset:()=>fne,validate:()=>gne});var D4=[],P4=["white","black","asian","indian","other"],L4=[15,23,28,35.5,45.5,55.5,65],W4=0,B4=0,U4=Number.MAX_SAFE_INTEGER;async function V4(e,t,n,r){var a,s;if(!O4)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=U4<((null==(a=t.face.gear)?void 0:a.skipFrames)||0),o=((null==(s=t.face.gear)?void 0:s.skipTime)||0)>Ko()-B4;return t.skipAllowed&&o&&i&&W4===r&&D4[n]?(U4++,D4[n]):(U4=0,new Promise((async a=>{var s,i;if(!(null==O4?void 0:O4.inputs[0].shape))return;const o={};o.resize=gv.cropAndResize(e,[[0,.1,.9,.9]],[0],[O4.inputs[0].shape[2],O4.inputs[0].shape[1]]);const l={age:0,gender:"unknown",genderScore:0,race:[]};(null==(s=t.face.gear)?void 0:s.enabled)&&([o.age,o.gender,o.race]=O4.execute(o.resize,["age_output","gender_output","race_output"]));const u=await o.gender.data();l.gender=u[0]>u[1]?"male":"female",l.genderScore=Math.round(100*(u[0]>u[1]?u[0]:u[1]))/100;const d=await o.race.data();for(let e=0;e<d.length;e++)d[e]>((null==(i=t.face.gear)?void 0:i.minConfidence)||.2)&&l.race.push({score:Math.round(100*d[e])/100,race:P4[e]});l.race.sort(((e,t)=>t.score-e.score));const c=Array.from(await o.age.data()).map(((e,t)=>[L4[t],e])).sort(((e,t)=>t[1]-e[1]));let p=c[0][0];for(let e=1;e<c.length;e++)p+=c[e][1]*(c[e][0]-p);l.age=Math.round(10*p)/10,Object.keys(o).forEach((e=>Hg(o[e]))),D4[n]=l,W4=r,B4=Ko(),a(l)})))}var G4,j4,H4={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]},q4=[],K4=0,X4=0,Z4=Number.MAX_SAFE_INTEGER;async function Y4(e,t,n,r){var a,s,i,o;if(!G4)return{age:0};const l=Z4<((null==(a=t.face.ssrnet)?void 0:a.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>Ko()-X4;return t.skipAllowed&&l&&u&&K4===r&&(null==(i=q4[n])?void 0:i.age)&&(null==(o=q4[n])?void 0:o.age)>0?(Z4++,q4[n]):(Z4=0,new Promise((async a=>{if(!(null==G4?void 0:G4.inputs)||!G4.inputs[0]||!G4.inputs[0].shape)return;const s={};s.resize=gv.resizeBilinear(e,[G4.inputs[0].shape[2],G4.inputs[0].shape[1]],!1),s.enhance=oy(s.resize,H4.tf255);const i={age:0};if(t.face.ssrnet.enabled&&(s.age=G4.execute(s.enhance)),s.age){const e=await s.age.data();i.age=Math.trunc(10*e[0])/10}Object.keys(s).forEach((e=>Hg(s[e]))),q4[n]=i,K4=r,X4=Ko(),a(i)})))}var J4,Q4=[],e8=0,t8=0,n8=Number.MAX_SAFE_INTEGER,r8=[.2989,.587,.114];async function a8(e,t,n,r){var a,s,i,o;if(!j4)return{gender:"unknown",genderScore:0};const l=n8<((null==(a=t.face.ssrnet)?void 0:a.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>Ko()-t8;return t.skipAllowed&&l&&u&&e8===r&&(null==(i=Q4[n])?void 0:i.gender)&&(null==(o=Q4[n])?void 0:o.genderScore)>0?(n8++,Q4[n]):(n8=0,new Promise((async a=>{if(!(null==j4?void 0:j4.inputs[0].shape))return;const s={};s.resize=gv.resizeBilinear(e,[j4.inputs[0].shape[2],j4.inputs[0].shape[1]],!1),s.enhance=jg((()=>{const[e,t,n]=Mx(s.resize,3,3),r=oy(e,r8[0]),a=oy(t,r8[1]),i=oy(n,r8[2]),o=cy([r,a,i]);return oy(ib(o,H4.tf05),2)}));const i={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(s.gender=j4.execute(s.enhance));const o=await s.gender.data();i.gender=o[0]>o[1]?"female":"male",i.genderScore=o[0]>o[1]?Math.trunc(100*o[0])/100:Math.trunc(100*o[1])/100,Object.keys(s).forEach((e=>Hg(s[e]))),Q4[n]=i,e8=r,t8=Ko(),a(i)})))}var s8=[],i8=Number.MAX_SAFE_INTEGER,o8=0,l8=0;async function u8(e,t,n,r){var a,s;if(!J4)return 0;const i=((null==(a=t.face.antispoof)?void 0:a.skipTime)||0)>Ko()-l8,o=i8<((null==(s=t.face.antispoof)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&o8===r&&s8[n]?(i8++,s8[n]):(i8=0,new Promise((async t=>{const a=gv.resizeBilinear(e,[(null==J4?void 0:J4.inputs[0].shape)?J4.inputs[0].shape[2]:0,(null==J4?void 0:J4.inputs[0].shape)?J4.inputs[0].shape[1]:0],!1),s=null==J4?void 0:J4.execute(a),i=(await s.data())[0];s8[n]=Math.round(100*i)/100,o8=r,l8=Ko(),Hg([a,s]),t(s8[n])})))}var d8={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},c8={count:468,mouth:13,symmetryLine:[13,d8.midwayBetweenEyes[0]]},p8={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},h8=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],f8=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],m8=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],g8=([127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map((e=>f8[e])),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map((e=>f8[e])),[33,133,362,263,1,78,308].map((e=>f8[e])),e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]),y8=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],A8=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],b8=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],x8=(e,t,n)=>{const r=t.shape[1],a=t.shape[2],s=[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a],i=gv.cropAndResize(t,[s],[0],n),o=iy(i,H4.tf255);return Hg(i),o},w8=(e,t)=>{const n=y8(e),r=g8(e),a=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],landmarks:e.landmarks,confidence:e.confidence}},v8=e=>{const t=y8(e),n=g8(e),r=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-r),Math.round(t[1]-r)],endPoint:[Math.round(t[0]+r),Math.round(t[1]+r)],landmarks:e.landmarks,confidence:e.confidence}},k8=[[1,0,0],[0,1,0],[0,0,1]],I8=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],S8=(e,t)=>{let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n},N8=(e,t)=>{const n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n},T8=(e,t)=>{const n=[],r=e.length;for(let a=0;a<r;a++){n.push([]);for(let s=0;s<r;s++)n[a].push(S8(e[a],N8(t,s)))}return n},C8=(e,t)=>{const n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=I8(t[0],t[1]),i=T8(s,a),o=I8(-t[0],-t[1]);return T8(i,o)},E8=(e,t)=>[S8(e,t[0]),S8(e,t[1])];function _8(e,t,n,r,a){const s=g8(t),i=e.map((e=>[s[0]/a*(e[0]-a/2),s[1]/a*(e[1]-a/2),e[2]||0])),o=n&&0!==n&&Math.abs(n)>.2,l=o?C8(n,[0,0]):k8,u=o?i.map((e=>[...E8(e,l),e[2]])):i,d=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-S8(t[0],n),-S8(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]})(r):k8,c=y8(t),p=[S8(c,d[0]),S8(c,d[1])];return u.map((e=>[Math.trunc(e[0]+p[0]),Math.trunc(e[1]+p[1]),Math.trunc(e[2]||0)]))}function R8(e,t,n,r){const a=t.landmarks.length>=c8.count?c8.symmetryLine:p8.symmetryLine;let s,i=0,o=k8;if(e&&M4.kernels.includes("rotatewithoffset"))if(i=((e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n})(t.landmarks[a[0]],t.landmarks[a[1]]),i&&0!==i&&Math.abs(i)>.2){const e=y8(t),a=[e[0]/n.shape[2],e[1]/n.shape[1]],l=gv.rotateWithOffset(n,i,0,a);o=C8(-i,e),s=x8(t,l,[r,r]),Hg(l)}else s=x8(t,n,[r,r]);else s=x8(t,n,[r,r]);return[i,o,s]}var M8,$8=(e,t)=>{const n=(e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]})(e),r=g8(t);return{startPoint:[n[0]-r[0]/2,n[1]-r[1]/2],endPoint:[n[0]+r[0]/2,n[1]+r[1]/2]}},F8=null,O8=0,z8=null,D8=()=>O8;var P8={};Bo(P8,{connected:()=>W8,kpt:()=>L8});var L8=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],W8={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},B8=224,U8=5,V8=[8,16,32,32,32];function G8(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],r=[Math.min(...n[0]),Math.min(...n[1])],a=[Math.max(...n[0]),Math.max(...n[1])],s=[r[0],r[1],a[0]-r[0],a[1]-r[1]];return{box:s,boxRaw:[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]]}}function j8(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],r=[Math.min(...n[0]),Math.min(...n[1])],a=[Math.max(...n[0]),Math.max(...n[1])],s=[(r[0]+a[0])/2,(r[1]+a[1])/2],i=Math.max(s[0]-r[0],s[1]-r[1],-s[0]+a[0],-s[1]+a[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)];return{box:o,boxRaw:[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]]}}function H8(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var q8={initial:!0},K8={detector:null,landmarks:null},X8={detector:[224,224],landmarks:[256,256]},Z8=Number.MAX_SAFE_INTEGER,Y8=["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],J8=null,Q8=[[0,0],[0,0],[0,0],[0,0]],e9=0,t9=e=>1-1/(1+Math.exp(e));async function n9(e,t){const n=[e.shape[2]||0,e.shape[1]||0],r=(t.body.skipTime||0)>Ko()-e9,a=Z8<(t.body.skipFrames||0);if(t.skipAllowed&&r&&a&&null!==J8)Z8++;else{const r={};r.landmarks=await async function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let r;if(e.shape[1]!==e.shape[2]){const a=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];Q8=[[0,0],a,s,[0,0]],n.pad=Bb(n.cropped||e,Q8),n.resize=gv.resizeBilinear(n.pad,[t,t]),r=iy(n.resize,H4.tf255)}else e.shape[1]!==t?(n.resize=gv.resizeBilinear(n.cropped||e,[t,t]),r=iy(n.resize,H4.tf255)):r=iy(n.cropped||e,H4.tf255);return Object.keys(n).forEach((e=>Hg(n[e]))),r}(e,256),J8=await async function(e,t,n){var r;const a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=null==(r=K8.landmarks)?void 0:r.execute(e,Y8);const s=(await a.poseflag.data())[0],i=await a.ld.data(),o=await a.world.data();Object.keys(a).forEach((e=>Hg(a[e])));const l=[];for(let e=0;e<i.length/5;e++){const t=t9(i[5*e+3]),r=t9(i[5*e+4]),a=Math.trunc(100*t*r*s)/100,u=[i[5*e+0]/X8.landmarks[0],i[5*e+1]/X8.landmarks[1],i[5*e+2]+0],d=[Math.trunc(n[0]*u[0]),Math.trunc(n[1]*u[1]),u[2]],c=[o[5*e+0],o[5*e+1],o[5*e+2]+0];l.push({part:L8[e],positionRaw:u,position:d,distance:c,score:a})}if(s<(t.body.minConfidence||0))return null;!async function(e){const t=e.find((e=>"leftPalm"===e.part)),n=e.find((e=>"leftWrist"===e.part)),r=e.find((e=>"leftIndex"===e.part));t.position[2]=((n.position[2]||0)+(r.position[2]||0))/2;const a=e.find((e=>"rightPalm"===e.part)),s=e.find((e=>"rightWrist"===e.part)),i=e.find((e=>"rightIndex"===e.part));a.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}(l);const u=function(e,t){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+Q8[2][0]+Q8[2][1])/t[0]-Q8[2][0]),Math.trunc(n.position[1]*(t[1]+Q8[1][0]+Q8[1][1])/t[1]-Q8[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];return e}(l,n),d=G8(u.map((e=>e.position)),[n[0],n[1]]),c={};for(const[e,t]of Object.entries(W8)){const n=[];for(let e=0;e<t.length-1;e++){const r=u.find((n=>n.part===t[e])),a=u.find((n=>n.part===t[e+1]));r&&a&&n.push([r.position,a.position])}c[e]=n}return{id:0,score:Math.trunc(100*s)/100,box:d.box,boxRaw:d.boxRaw,keypoints:u,annotations:c}}(r.landmarks,t,n),Object.keys(r).forEach((e=>Hg(r[e]))),e9=Ko(),Z8=0}return J8?[J8]:[]}var r9,a9=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],s9=0,i9=[],o9=0,l9=Number.MAX_SAFE_INTEGER;async function u9(e,t){const n=(t.object.skipTime||0)>Ko()-o9,r=l9<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&i9.length>0?(l9++,i9):(l9=0,new Promise((async n=>{const r=[e.shape[2]||0,e.shape[1]||0],a=gv.resizeBilinear(e,[s9,s9]),s=t.object.enabled?null==r9?void 0:r9.execute(a,["tower_0/detections"]):null;o9=Ko(),Hg(a);const i=await async function(e,t,n){if(!e)return[];const r={},a=[],s=await e.array();r.squeeze=zx(e);const i=Mx(r.squeeze,6,1);r.stack=Dx([i[1],i[0],i[3],i[2]],1),r.boxes=zx(r.stack),r.scores=zx(i[4]),r.classes=zx(i[5]),Hg([e,...i]),r.nms=await gv.nonMaxSuppressionAsync(r.boxes,r.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence||0);const o=await r.nms.data();let l=0;for(const e of Array.from(o)){const n=Math.trunc(100*s[0][e][4])/100,r=s[0][e][5],i=a9[r].label,[o,u]=[s[0][e][0]/s9,s[0][e][1]/s9],d=[o,u,s[0][e][2]/s9-o,s[0][e][3]/s9-u],c=[Math.trunc(d[0]*t[0]),Math.trunc(d[1]*t[1]),Math.trunc(d[2]*t[0]),Math.trunc(d[3]*t[1])];a.push({id:l++,score:n,class:r,label:i,box:c,boxRaw:d})}return Object.keys(r).forEach((e=>Hg(r[e]))),a}(s,r,t);i9=i,n(i)})))}var d9={};Bo(d9,{connected:()=>h9,kpt:()=>p9});var c9,p9=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],h9={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},f9=0,m9={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},g9=Number.MAX_SAFE_INTEGER;async function y9(e,t){const[n,r]=e.shape,a=Oy(e,[r*n]),s=sb(a,0),i=(await s.data())[0];if(Hg([a,s]),i>t){const e=fy(a,0),t=$b(e,n),r=(await t.data())[0],s=iy(e,yx(n,"int32")),o=(await s.data())[0];return Hg([t,s]),[r,o,i]}return[0,0,i]}async function A9(e,t){const n=(t.body.skipTime||0)>Ko()-f9,r=g9<(t.body.skipFrames||0);return t.skipAllowed&&n&&r&&Object.keys(m9.keypoints).length>0?(g9++,[m9]):(g9=0,new Promise((async n=>{var r;const a=jg((()=>{if(!(null==c9?void 0:c9.inputs[0].shape))return null;const t=gv.resizeBilinear(e,[c9.inputs[0].shape[2],c9.inputs[0].shape[1]],!1),n=oy(t,H4.tf2);return ib(n,H4.tf1)}));let s;if(t.body.enabled&&(s=null==c9?void 0:c9.execute(a)),f9=Ko(),Hg(a),s){m9.keypoints.length=0;const n=s.squeeze();Hg(s);const a=n.unstack(2);Hg(n);for(let n=0;n<a.length;n++){const[s,i,o]=await y9(a[n],t.body.minConfidence);o>((null==(r=t.body)?void 0:r.minConfidence)||0)&&m9.keypoints.push({score:Math.round(100*o)/100,part:p9[n],positionRaw:[s/c9.inputs[0].shape[2],i/c9.inputs[0].shape[1]],position:[Math.round(e.shape[2]*s/c9.inputs[0].shape[2]),Math.round(e.shape[1]*i/c9.inputs[0].shape[1])]})}a.forEach((e=>Hg(e)))}m9.score=m9.keypoints.reduce(((e,t)=>t.score>e?t.score:e),0);const i=m9.keypoints.map((e=>e.position[0])),o=m9.keypoints.map((e=>e.position[1]));m9.box=[Math.min(...i),Math.min(...o),Math.max(...i)-Math.min(...i),Math.max(...o)-Math.min(...o)];const l=m9.keypoints.map((e=>e.positionRaw[0])),u=m9.keypoints.map((e=>e.positionRaw[1]));m9.boxRaw=[Math.min(...l),Math.min(...u),Math.max(...l)-Math.min(...l),Math.max(...u)-Math.min(...u)];for(const[e,n]of Object.entries(h9)){const r=[];for(let e=0;e<n.length-1;e++){const a=m9.keypoints.find((t=>t.part===n[e])),s=m9.keypoints.find((t=>t.part===n[e+1]));a&&s&&a.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&r.push([a.position,s.position])}m9.annotations[e]=r}n([m9])})))}var b9,x9,w9=["angry","disgust","fear","happy","sad","surprise","neutral"],v9=[],k9=0,I9=0,S9=Number.MAX_SAFE_INTEGER;async function N9(e,t,n,r){var a,s;if(!b9)return[];const i=S9<((null==(a=t.face.emotion)?void 0:a.skipFrames)||0),o=((null==(s=t.face.emotion)?void 0:s.skipTime)||0)>Ko()-I9;return t.skipAllowed&&o&&i&&k9===r&&v9[n]&&v9[n].length>0?(S9++,v9[n]):(S9=0,new Promise((async a=>{var s,i;const o=[];if(null==(s=t.face.emotion)?void 0:s.enabled){const n={},r=(null==b9?void 0:b9.inputs[0].shape)?b9.inputs[0].shape[2]:0;n.resize=gv.resizeBilinear(e,[r,r],!1),n.channels=oy(n.resize,H4.rgb),n.grayscale=ob(n.channels,3,!0),n.grayscaleSub=ib(n.grayscale,H4.tf05),n.grayscaleMul=oy(n.grayscaleSub,H4.tf2),n.emotion=null==b9?void 0:b9.execute(n.grayscaleMul),I9=Ko();const a=await n.emotion.data();for(let e=0;e<a.length;e++)a[e]>((null==(i=t.face.emotion)?void 0:i.minConfidence)||0)&&o.push({score:Math.min(.99,Math.trunc(100*a[e])/100),emotion:w9[e]});o.sort(((e,t)=>t.score-e.score)),Object.keys(n).forEach((e=>Hg(n[e])))}v9[n]=o,k9=r,a(o)})))}var T9,C9=[],E9=0,_9=0,R9=Number.MAX_SAFE_INTEGER;async function M9(e,t,n,r){var a,s;if(!x9)return[];const i=R9<((null==(a=t.face.embedding)?void 0:a.skipFrames)||0),o=((null==(s=t.face.embedding)?void 0:s.skipTime)||0)>Ko()-_9;return t.skipAllowed&&o&&i&&E9===r&&C9[n]?(R9++,C9[n]):new Promise((async a=>{var s;let i=[];if((null==(s=t.face.embedding)?void 0:s.enabled)&&(null==x9?void 0:x9.inputs[0].shape)){const t={};t.crop=gv.resizeBilinear(e,[x9.inputs[0].shape[2],x9.inputs[0].shape[1]],!1),t.data=null==x9?void 0:x9.execute(t.crop);const n=await t.data.data();i=Array.from(n)}C9[n]=i,E9=r,_9=Ko(),a(i)}))}var $9=0,F9=d8.leftEyeLower0,O9=d8.rightEyeLower0,z9={leftBounds:[F9[0],F9[F9.length-1]],rightBounds:[O9[0],O9[O9.length-1]]};function D9(e,t,n,r){for(let a=0;a<h8.length;a++){const{key:s,indices:i}=h8[a],o=d8[`${n}${s}`];if(!r||r.includes(s))for(let n=0;n<i.length;n++){const r=i[n];e[o[n]]=[t[r][0],t[r][1],(t[r][2]+e[o[n]][2])/2]}}}var P9=(e,t,n,r,a,s=!1)=>{const i=v8(w8((e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}})([e[n],e[r]]),2.3)),o=g8(i);let l=gv.cropAndResize(t,[[i.startPoint[1]/a,i.startPoint[0]/a,i.endPoint[1]/a,i.endPoint[0]/a]],[0],[$9,$9]);if(s&&M4.kernels.includes("flipleftright")){const e=gv.flipLeftRight(l);Hg(l),l=e}return{box:i,boxSize:o,crop:l}},L9=(e,t,n,r=!1)=>{const a=[];for(let s=0;s<76;s++){const i=e[3*s],o=e[3*s+1],l=e[3*s+2];a.push([(r?1-i/$9:i/$9)*n[0]+t.startPoint[0],o/$9*n[1]+t.startPoint[1],l])}return{rawCoords:a,iris:a.slice(71)}},W9=(e,t,n)=>{const r=e[d8[`${n}EyeUpper0`][3]][2],a=e[d8[`${n}EyeLower0`][4]][2],s=(r+a)/2;return t.map(((e,t)=>{let n=s;return 2===t?n=r:4===t&&(n=a),[e[0],e[1],n]}))};async function B9(e,t,n,r){if(!T9)return n.debug&&qo("face mesh iris detection requested, but model is not loaded"),e;const{box:a,boxSize:s,crop:i}=P9(e,t,z9.leftBounds[0],z9.leftBounds[1],r,!0),{box:o,boxSize:l,crop:u}=P9(e,t,z9.rightBounds[0],z9.rightBounds[1],r,!0),d=Py([i,u]);Hg(i),Hg(u);const c=T9.execute(d);Hg(d);const p=await c.data();Hg(c);const h=p.slice(0,228),{rawCoords:f,iris:m}=L9(h,a,s,!0),g=p.slice(228),{rawCoords:y,iris:A}=L9(g,o,l),b=(e=>e[z9.leftBounds[0]][2]-e[z9.rightBounds[0]][2])(e);Math.abs(b)<30?(D9(e,f,"left",null),D9(e,y,"right",null)):b<1?D9(e,f,"left",["EyeUpper0","EyeLower0"]):D9(e,y,"right",["EyeUpper0","EyeLower0"]);const x=W9(e,m,"left"),w=W9(e,A,"right");return e.concat(x).concat(w)}var U9,V9={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},G9=null,j9=0,H9=m8,q9=f8,K9=[],X9=0,Z9=0,Y9=Number.MAX_SAFE_INTEGER;function J9(e){const t=e.image||e.tensor||e;if(!(null==U9?void 0:U9.inputs[0].shape))return t;const n=gv.resizeBilinear(t,[U9.inputs[0].shape[2],U9.inputs[0].shape[1]],!1),r=oy(n,H4.tf255);return Hg(n),r}async function Q9(e,t,n,r){var a,s,i,o;if(!U9)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};const l=Y9<((null==(a=t.face.description)?void 0:a.skipFrames)||0),u=((null==(s=t.face.description)?void 0:s.skipTime)||0)>Ko()-X9;return t.skipAllowed&&l&&u&&Z9===r&&(null==(i=K9[n])?void 0:i.age)&&(null==(o=K9[n])?void 0:o.age)>0?(Y9++,K9[n]):(Y9=0,new Promise((async a=>{var s,i;const o={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(null==(s=t.face.description)?void 0:s.enabled){const n=J9(e),r=null==U9?void 0:U9.execute(n);X9=Ko(),Hg(n);const a=await r.find((e=>1===e.shape[1])),s=await a.data(),l=Math.trunc(200*Math.abs(s[0]-.5))/100;l>((null==(i=t.face.description)?void 0:i.minConfidence)||0)&&(o.gender=s[0]<=.5?"female":"male",o.genderScore=Math.min(.99,l));const u=fy(r.find((e=>100===e.shape[1])),1),d=(await u.data())[0];Hg(u);const c=r.find((e=>100===e.shape[1])),p=await c.data();o.age=Math.round(p[d-1]>p[d+1]?10*d-100*p[d-1]:10*d+100*p[d+1])/10;const h=r.find((e=>1024===e.shape[1])),f=h?await h.data():[];o.descriptor=Array.from(f),r.forEach((e=>Hg(e)))}K9[n]=o,Z9=r,a(o)})))}function eee(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function tee(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function nee(e,t,n){const r=t.shape[1],a=t.shape[2],s=[[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a]];return gv.cropAndResize(t,s,[0],n)}function ree(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((e=>[e[0]*t[0],e[1]*t[1]])),confidence:e.confidence}}function aee(e,t=1.5){const n=tee(e),r=eee(e),a=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],palmLandmarks:e.palmLandmarks}}function see(e){const t=tee(e),n=eee(e),r=Math.max(...n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],palmLandmarks:e.palmLandmarks}}function iee(e,t){return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n}var oee=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function lee(e,t){let n=0;for(let r=0;r<e.length;r++)n+=e[r]*t[r];return n}function uee(e,t){const n=[];for(let r=0;r<e.length;r++)n.push(e[r][t]);return n}function dee(e,t){const n=[],r=e.length;for(let a=0;a<r;a++){n.push([]);for(let s=0;s<r;s++)n[a].push(lee(e[a],uee(t,s)))}return n}function cee(e,t){const n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=dee(oee(t[0],t[1]),a);return dee(s,oee(-t[0],-t[1]))}function pee(e,t){return[lee(e,t[0]),lee(e,t[1])]}var hee=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],fee=class{constructor(e){Uo(this,"model"),Uo(this,"anchors"),Uo(this,"anchorsTensor"),Uo(this,"inputSize"),Uo(this,"inputSizeTensor"),Uo(this,"doubleInputSizeTensor"),this.model=e,this.anchors=hee.map((e=>[e.x,e.y])),this.anchorsTensor=Ux(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=Bx([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Bx([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=Wy(e,[0,0],[-1,2]),t.boxSizes=Wy(e,[0,2],[-1,2]),t.div=iy(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=ay(t.div,this.anchorsTensor),t.halfBoxSizes=iy(t.boxSizes,this.doubleInputSizeTensor),t.sub=ib(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=oy(t.sub,this.inputSizeTensor),t.add=ay(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=oy(t.add,this.inputSizeTensor);const n=tA([t.startPoints,t.endPoints],1);return Object.keys(t).forEach((e=>Hg(t[e]))),n}normalizeLandmarks(e,t){const n={};n.reshape=Oy(e,[-1,7,2]),n.div=iy(n.reshape,this.inputSizeTensor),n.landmarks=ay(n.div,this.anchors[t]);const r=oy(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach((e=>Hg(n[e]))),r}async predict(e,t){const n={};n.resize=gv.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=iy(n.resize,H4.tf127),n.image=ib(n.div,H4.tf1),n.batched=this.model.execute(n.image),n.predictions=zx(n.batched),n.slice=Wy(n.predictions,[0,0],[-1,1]),n.sigmoid=Ly(n.slice),n.scores=zx(n.sigmoid);const r=await n.scores.data();n.boxes=Wy(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await gv.nonMaxSuppressionAsync(n.norm,n.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);const a=await n.nms.array(),s=[];for(const t of a){const a={};a.box=Wy(n.norm,[t,0],[1,-1]),a.slice=Wy(n.predictions,[t,5],[1,14]),a.norm=this.normalizeLandmarks(a.slice,t),a.palmLandmarks=Oy(a.norm,[-1,2]);const i=await a.box.data(),o=ree({startPoint:i.slice(0,2),endPoint:i.slice(2,4),palmLandmarks:await a.palmLandmarks.array(),confidence:r[t]},[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);s.push(o),Object.keys(a).forEach((e=>Hg(a[e])))}return Object.keys(n).forEach((e=>Hg(n[e]))),s}},mee=[0,5,9,13,17,1,2],gee=0,yee=class{constructor(e,t){Uo(this,"handDetector"),Uo(this,"handPoseModel"),Uo(this,"inputSize"),Uo(this,"storedBoxes"),Uo(this,"skipped"),Uo(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map((e=>pee([...e,1],t)));return aee(see(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=aee(see(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<mee.length;n++)t.palmLandmarks.push(e[mee[n]].slice(0,2));return t}transformRawCoords(e,t,n,r){const a=eee(t),s=[a[0]/this.inputSize,a[1]/this.inputSize,(a[0]+a[1])/this.inputSize/2],i=e.map((e=>[s[0]*(e[0]-this.inputSize/2),s[1]*(e[1]-this.inputSize/2),s[2]*e[2]])),o=cee(n,[0,0]),l=i.map((e=>[...pee(e,o),e[2]])),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],r=[-lee(t[0],n),-lee(t[1],n)];return[t[0].concat(r[0]),t[1].concat(r[1]),[0,0,1]]}(r),d=[...tee(t),1],c=[lee(d,u[0]),lee(d,u[1])];return l.map((e=>[Math.trunc(e[0]+c[0]),Math.trunc(e[1]+c[1]),Math.trunc(e[2])]))}async estimateHands(e,t){let n,r=!1;const a=(t.hand.skipTime||0)>Ko()-gee,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&a&&s&&(n=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(r=!0));const i=[];for(let n=0;n<this.storedBoxes.length;n++){const a=this.storedBoxes[n];if(a)if(t.hand.landmarks){const s=t.hand.rotation?iee(a.palmLandmarks[0],a.palmLandmarks[2]):0,o=tee(a),l=[o[0]/e.shape[2],o[1]/e.shape[1]],u=t.hand.rotation&&M4.kernels.includes("rotatewithoffset")?gv.rotateWithOffset(e,s,0,l):e.clone(),d=cee(-s,o),c=r?this.getBoxForPalmLandmarks(a.palmLandmarks,d):a,p=nee(c,u,[this.inputSize,this.inputSize]),h=iy(p,H4.tf255);Hg(p),Hg(u);const[f,m]=this.handPoseModel.execute(h);gee=Ko(),Hg(h);const g=(await f.data())[0];if(Hg(f),g>=t.hand.minConfidence/4){const e=Oy(m,[-1,3]),t=await e.array();Hg(m),Hg(e);const r=this.transformRawCoords(t,c,s,d),o=this.getBoxForHandLandmarks(r);this.storedBoxes[n]={...o,confidence:g};const l={landmarks:r,confidence:g,boxConfidence:a.confidence,fingerConfidence:g,box:{topLeft:o.startPoint,bottomRight:o.endPoint}};i.push(l)}else this.storedBoxes[n]=null;Hg(m)}else{const e=aee(see(a),1.65),t={confidence:a.confidence,boxConfidence:a.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};i.push(t)}}return this.storedBoxes=this.storedBoxes.filter((e=>null!==e)),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}},Aee={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Aee.nameMapping[e],getPoints:e=>Aee.pointsMapping[e]},bee={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>bee.nameMapping[e]},xee={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>xee.nameMapping[e]},wee=class{constructor(e){Uo(this,"name"),Uo(this,"curls"),Uo(this,"directions"),Uo(this,"weights"),Uo(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){void 0===this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const t in e){const r=e[t],a=this.curls[t];if(void 0!==a){for(const[e,s]of a)if(r===e){n+=s*this.weightsRelative[t];break}}else n+=this.weightsRelative[t]}for(const e in t){const r=t[e],a=this.directions[e];if(void 0!==a){for(const[t,s]of a)if(r===t){n+=s*this.weightsRelative[e];break}}else n+=this.weightsRelative[e]}return n/10}},{thumb:vee,index:kee,middle:Iee,ring:See,pinky:Nee}=Aee,{none:Tee,half:Cee,full:Eee}=bee,{verticalUp:_ee,verticalDown:Ree,horizontalLeft:Mee,horizontalRight:$ee,diagonalUpRight:Fee,diagonalUpLeft:Oee,diagonalDownRight:zee,diagonalDownLeft:Dee}=xee,Pee=new wee("thumbs up");Pee.curl(vee,Tee,1),Pee.direction(vee,_ee,1),Pee.direction(vee,Oee,.25),Pee.direction(vee,Fee,.25);for(const e of[Aee.index,Aee.middle,Aee.ring,Aee.pinky])Pee.curl(e,Eee,1),Pee.direction(e,Mee,1),Pee.direction(e,$ee,1);var Lee=new wee("victory");Lee.curl(vee,Cee,.5),Lee.curl(vee,Tee,.5),Lee.direction(vee,_ee,1),Lee.direction(vee,Oee,1),Lee.curl(kee,Tee,1),Lee.direction(kee,_ee,.75),Lee.direction(kee,Oee,1),Lee.curl(Iee,Tee,1),Lee.direction(Iee,_ee,1),Lee.direction(Iee,Oee,.75),Lee.curl(See,Eee,1),Lee.direction(See,_ee,.2),Lee.direction(See,Oee,1),Lee.direction(See,Mee,.2),Lee.curl(Nee,Eee,1),Lee.direction(Nee,_ee,.2),Lee.direction(Nee,Oee,1),Lee.direction(Nee,Mee,.2),Lee.weight(kee,2),Lee.weight(Iee,2);var Wee=new wee("point");Wee.curl(vee,Eee,1),Wee.curl(kee,Tee,.5),Wee.curl(Iee,Eee,.5),Wee.curl(See,Eee,.5),Wee.curl(Nee,Eee,.5),Wee.weight(kee,2),Wee.weight(Iee,2);var Bee=new wee("middle finger");Bee.curl(vee,Tee,1),Bee.curl(kee,Eee,.5),Bee.curl(Iee,Eee,.5),Bee.curl(See,Eee,.5),Bee.curl(Nee,Eee,.5),Bee.weight(kee,2),Bee.weight(Iee,2);var Uee=new wee("open palm");Uee.curl(vee,Tee,.75),Uee.curl(kee,Tee,.75),Uee.curl(Iee,Tee,.75),Uee.curl(See,Tee,.75),Uee.curl(Nee,Tee,.75);var Vee=[Pee,Lee,Wee,Bee,Uee];function Gee(e,t,n,r){const a=(t-r)/(e-n);let s=180*Math.atan(a)/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function jee(e,t){if(!e||!t)return[0,0];const n=Gee(e[0],e[1],t[0],t[1]);return 2===e.length?n:[n,Gee(e[1],e[2],t[1],t[2])]}function Hee(e,t=1){let n=0,r=0,a=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?r=1*t:a=1*t,[n,r,a]}function qee(e,t,n){const r=e[0]-t[0],a=e[0]-n[0],s=t[0]-n[0],i=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],d=e[2]-n[2],c=t[2]-n[2],p=Math.sqrt(r*r+i*i+u*u),h=Math.sqrt(a*a+o*o+d*d),f=Math.sqrt(s*s+l*l+c*c);let m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g,y=Math.acos(m);return y=57.2958*y%180,g=y>130?bee.none:y>60?bee.half:bee.full,g}function Kee(e,t,n,r){let a;return a=r===Math.abs(e)?e>0?xee.horizontalLeft:xee.horizontalRight:r===Math.abs(t)?t>0?xee.horizontalLeft:xee.horizontalRight:n>0?xee.horizontalLeft:xee.horizontalRight,a}function Xee(e,t,n,r){let a;return a=r===Math.abs(e)?e<0?xee.verticalDown:xee.verticalUp:r===Math.abs(t)?t<0?xee.verticalDown:xee.verticalUp:n<0?xee.verticalDown:xee.verticalUp,a}function Zee(e,t,n,r){const a=e[0]-t[0],s=e[0]-n[0],i=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],d=Math.max(Math.abs(a),Math.abs(s),Math.abs(i)),c=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let p=0,h=0,f=0;const m=c/(d+1e-5);m>1.5?p+=1.1:m>.66?h+=1.1:f+=1.1;const g=Math.sqrt(a*a+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+u*u),b=Math.max(g,y,A);let x=e[0],w=e[1],v=n[0],k=n[1];b===g?(v=n[0],k=n[1]):b===A&&(x=t[0],w=t[1]);const I=Hee(jee([x,w],[v,k]),1.6);p+=I[0],h+=I[1],f+=I[2];for(const e of r){const t=Hee(e,.9);p+=t[0],h+=t[1],f+=t[2]}let S;return S=p===Math.max(p,h,f)?Xee(l,o,u,c):f===Math.max(h,f)?Kee(s,a,i,d):function(e,t,n,r,a,s,i,o){let l;const u=Xee(e,t,n,r),d=Kee(a,s,i,o);return l=u===xee.verticalUp?d===xee.horizontalLeft?xee.diagonalUpLeft:xee.diagonalUpRight:d===xee.horizontalLeft?xee.diagonalDownLeft:xee.diagonalDownRight,l}(l,o,u,c,s,a,i,d),S}function Yee(e){const t=[],n=[],r=[],a=[];if(!e)return{curls:r,directions:a};for(const r of Aee.all){const a=Aee.getPoints(r),s=[],i=[];for(const t of a){const n=jee(e[t[0]],e[t[1]]),r=n[0],a=n[1];s.push(r),i.push(a)}t.push(s),n.push(i)}for(const n of Aee.all){const s=n===Aee.thumb?1:0,i=Aee.getPoints(n),o=e[i[s][0]],l=e[i[s+1][1]],u=e[i[3][1]],d=qee(o,l,u),c=Zee(o,l,u,t[n].slice(s));r[n]=d,a[n]=c}return{curls:r,directions:a}}function Jee(e){if(!e||0===e.length)return null;const t=Yee(e),n={};for(const e of Aee.all)n[Aee.getName(e)]={curl:bee.getName(t.curls[e]),direction:xee.getName(t.directions[e])};return n}function Qee(e){const t=[];if(!e||0===e.length)return t;const n=Yee(e);for(const e of Vee){const r=e.matchAgainst(n.curls,n.directions);r>=.7&&t.push({name:e.name,confidence:r})}return t}var ete,tte,nte,rte={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function ate(e,t){const n=await nte.estimateHands(e,t);if(!n)return[];const r=[];for(let t=0;t<n.length;t++){const a={};if(n[t].landmarks)for(const e of Object.keys(rte))a[e]=rte[e].map((e=>n[t].landmarks[e]));const s=n[t].landmarks;let i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(s&&s.length>0){for(const e of s)e[0]<i[0]&&(i[0]=e[0]),e[1]<i[1]&&(i[1]=e[1]),e[0]>i[2]&&(i[2]=e[0]),e[1]>i[3]&&(i[3]=e[1]);i[2]-=i[0],i[3]-=i[1],o=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[t].box?[Math.trunc(Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.max(0,n[t].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[t].box.bottomRight[0])-Math.max(0,n[t].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[t].box.bottomRight[1])-Math.max(0,n[t].box.topLeft[1]))]:[0,0,0,0],o=[n[t].box.topLeft[0]/(e.shape[2]||0),n[t].box.topLeft[1]/(e.shape[1]||0),(n[t].box.bottomRight[0]-n[t].box.topLeft[0])/(e.shape[2]||0),(n[t].box.bottomRight[1]-n[t].box.topLeft[1])/(e.shape[1]||0)];const l=Jee(s);r.push({id:t,score:Math.round(100*n[t].confidence)/100,boxScore:Math.round(100*n[t].boxConfidence)/100,fingerScore:Math.round(100*n[t].fingerConfidence)/100,label:"hand",box:i,boxRaw:o,keypoints:s,annotations:a,landmarks:l})}return r}async function ste(e){var t,n;M4.initial&&(ete=null,tte=null),ete&&tte?(e.debug&&qo("cached model:",ete.modelUrl),e.debug&&qo("cached model:",tte.modelUrl)):[ete,tte]=await Promise.all([e.hand.enabled?F4(null==(t=e.hand.detector)?void 0:t.modelPath):null,e.hand.landmarks?F4(null==(n=e.hand.skeleton)?void 0:n.modelPath):null]);const r=new fee(ete);return nte=new yee(r,tte),[ete,tte]}var ite,ote=[null,null],lte=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],ute=[[0,0],[0,0]],dte=["hand","fist","pinch","point","face","tip","pinchtip"],cte=Number.MAX_SAFE_INTEGER,pte=0,hte=[0,0],fte={boxes:[],hands:[]},mte={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function gte(e,t,n){const r={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&ote[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const a={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];a.crop=gv.cropAndResize(e,[s],[0],[ute[1][0],ute[1][1]],"bilinear"),a.div=iy(a.crop,H4.tf255),[a.score,a.keypoints]=ote[1].execute(a.div,["Identity_1","Identity"]);const i=(await a.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(n.hand.minConfidence||0)){r.fingerScore=o,a.reshaped=Oy(a.keypoints,[-1,3]);const e=(await a.reshaped.array()).map((e=>[e[0]/ute[1][1],e[1]/ute[1][0],e[2]||0])).map((e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]));r.keypoints=e.map((e=>[hte[0]*(e[0]+t.boxRaw[0]),hte[1]*(e[1]+t.boxRaw[1]),e[2]||0])),r.landmarks=Jee(r.keypoints);for(const e of Object.keys(mte))r.annotations[e]=mte[e].map((e=>r.landmarks&&r.keypoints[e]?r.keypoints[e]:null))}Object.keys(a).forEach((e=>Hg(a[e])))}return r}async function yte(e,t){var n,r;if(!(ote[0]&&ote[1]&&(null==(n=ote[0])?void 0:n.inputs[0].shape)&&(null==(r=ote[1])?void 0:r.inputs[0].shape)))return[];hte=[e.shape[2]||0,e.shape[1]||0],cte++;const a=(t.hand.skipTime||0)>Ko()-pte,s=cte<(t.hand.skipFrames||0);return t.skipAllowed&&a&&s?fte.hands:new Promise((async n=>{const r=3*(t.hand.skipTime||0)>Ko()-pte,a=cte<3*(t.hand.skipFrames||0);t.skipAllowed&&fte.hands.length===t.hand.maxDetected||t.skipAllowed&&r&&a&&fte.hands.length>0?fte.hands=await Promise.all(fte.boxes.map((n=>gte(e,n,t)))):(fte.boxes=await async function(e,t){const n=[];if(!e||!ote[0])return n;const r={},a=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(8*Math.round((e.shape[1]||0)/8),512),i=8*Math.round(s*a/8);r.resize=gv.resizeBilinear(e,[s,i]),r.cast=um(r.resize,"int32"),[r.rawScores,r.rawBoxes]=await ote[0].executeAsync(r.cast,lte),r.boxes=zx(r.rawBoxes,[0,2]),r.scores=zx(r.rawScores,[0]);const o=Zx(r.scores,1);Hg(o[4]),o.splice(4,1),r.filtered=Dx(o,1),Hg(o),r.max=sb(r.filtered,1),r.argmax=fy(r.filtered,1);let l=0;r.nms=await gv.nonMaxSuppressionAsync(r.boxes,r.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const u=await r.nms.data(),d=await r.max.data(),c=await r.argmax.data();for(const e of Array.from(u)){const t=Wy(r.boxes,e,1),a=await t.data();Hg(t);const s=[a[1],a[0],a[3]-a[1],a[2]-a[0]],i=H8(s,1.4),o=[Math.trunc(s[0]*hte[0]),Math.trunc(s[1]*hte[1]),Math.trunc(s[2]*hte[0]),Math.trunc(s[3]*hte[1])],u={id:l++,score:d[e],box:o,boxRaw:i,label:dte[c[e]]};n.push(u)}return Object.keys(r).forEach((e=>Hg(r[e]))),n.sort(((e,t)=>t.score-e.score)),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),pte=Ko(),fte.hands=await Promise.all(fte.boxes.map((n=>gte(e,n,t)))),cte=0);const s=[...fte.boxes];if(fte.boxes.length=0,t.cacheSensitivity>0)for(let n=0;n<fte.hands.length;n++){const r=j8(fte.hands[n].keypoints,hte);if(r.box[2]/(e.shape[2]||1)>.05&&r.box[3]/(e.shape[1]||1)>.05&&fte.hands[n].fingerScore&&fte.hands[n].fingerScore>(t.hand.minConfidence||0)){const e=H8(r.box,1.6),t=H8(r.boxRaw,1.6);fte.boxes.push({...s[n],box:e,boxRaw:t})}}for(let e=0;e<fte.hands.length;e++){const t=G8(fte.hands[e].keypoints,hte);fte.hands[e].box=t.box,fte.hands[e].boxRaw=t.boxRaw}n(fte.hands)}))}var Ate=[],bte=Number.MAX_SAFE_INTEGER,xte=0,wte=0;async function vte(e,t,n,r){var a,s;if(!ite)return 0;const i=((null==(a=t.face.liveness)?void 0:a.skipTime)||0)>Ko()-wte,o=bte<((null==(s=t.face.liveness)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&xte===r&&Ate[n]?(bte++,Ate[n]):(bte=0,new Promise((async t=>{const a=gv.resizeBilinear(e,[(null==ite?void 0:ite.inputs[0].shape)?ite.inputs[0].shape[2]:0,(null==ite?void 0:ite.inputs[0].shape)?ite.inputs[0].shape[1]:0],!1),s=null==ite?void 0:ite.execute(a),i=(await s.data())[0];Ate[n]=Math.round(100*i)/100,xte=r,wte=Ko(),Hg([a,s]),t(Ate[n])})))}var kte={};Bo(kte,{connected:()=>Ete,horizontal:()=>Nte,kpt:()=>Ste,relative:()=>Cte,vertical:()=>Tte});var Ite,Ste=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Nte=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],Tte=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],Cte=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],Ete={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},_te={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function Rte(e){for(const t of Nte){const n=e.keypoints.findIndex((e=>e.part===t[0])),r=e.keypoints.findIndex((e=>e.part===t[1]));if(e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[0]<e.keypoints[r].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[r],e.keypoints[r]=t}}for(const t of Tte){const n=e.keypoints.findIndex((e=>e&&e.part===t[0])),r=e.keypoints.findIndex((e=>e&&e.part===t[1]));e.keypoints[n]&&e.keypoints[r]&&e.keypoints[n].position[1]<e.keypoints[r].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of Cte){const r=e.keypoints.findIndex((e=>e&&e.part===t[0])),a=e.keypoints.findIndex((e=>e&&e.part===t[1])),s=e.keypoints.findIndex((e=>e&&e.part===n[0])),i=e.keypoints.findIndex((e=>e&&e.part===n[1]));if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0],l=e.keypoints[a]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[r];e.keypoints[r]=e.keypoints[a],e.keypoints[a]=t}}}function Mte(e){for(let t=0;t<e.length;t++)if(e[t]&&_te.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-_te.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-_te.keypoints[t].positionRaw[1])];n[0]<.005&&n[1]<.005?e[t]=_te.keypoints[t]:_te.keypoints[t]=e[t]}else _te.keypoints[t]=e[t];return e}function $te(e,t){e.keypoints=e.keypoints.filter((e=>e&&e.position));for(const n of e.keypoints)n.position=[n.position[0]*(t[0]+_te.padding[2][0]+_te.padding[2][1])/t[0]-_te.padding[2][0],n.position[1]*(t[1]+_te.padding[1][0]+_te.padding[1][1])/t[1]-_te.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];const n=G8(e.keypoints.map((e=>e.position)),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var Fte,Ote=0,zte=Number.MAX_SAFE_INTEGER,Dte={boxes:[],bodies:[],last:0};async function Pte(e,t){if(!Ite||!(null==Ite?void 0:Ite.inputs[0].shape))return[];t.skipAllowed||(Dte.boxes.length=0),zte++;const n=(t.body.skipTime||0)>Ko()-Dte.last,r=zte<(t.body.skipFrames||0);return t.skipAllowed&&n&&r?Dte.bodies:new Promise((async n=>{const r={};zte=0,r.input=function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;_te.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=Bb(e,_te.padding),n.resize=gv.resizeBilinear(n.pad,[t,t]);const r=um(n.resize,"int32");return Object.keys(n).forEach((e=>Hg(n[e]))),r}(e,Ote),r.res=null==Ite?void 0:Ite.execute(r.input),Dte.last=Ko();const a=await r.res.array();Dte.bodies=17===r.res.shape[2]?await async function(e,t,n){const r=e[0][0],a=[];let s=0;for(let e=0;e<r.length;e++)if(s=r[e][2],s>t.body.minConfidence){const t=[r[e][1],r[e][0]];a.push({score:Math.round(100*s)/100,part:Ste[e],positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}s=a.reduce(((e,t)=>t.score>e?t.score:e),0);const i=[],o=G8(a.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[e,n]of Object.entries(Ete)){const r=[];for(let e=0;e<n.length-1;e++){const s=a.find((t=>t.part===n[e])),i=a.find((t=>t.part===n[e+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&r.push([s.position,i.position])}l[e]=r}const u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:a,annotations:l};return Rte(u),i.push(u),i}(a,t,e):await async function(e,t,n){const r=[];for(let a=0;a<e[0].length;a++){const s=e[0][a],i=Math.round(100*s[55])/100;if(i>t.body.minConfidence){const e=[];for(let r=0;r<17;r++){const a=s[3*r+2];if(a>t.body.minConfidence){const t=[s[3*r+1],s[3*r+0]];e.push({part:Ste[r],score:Math.round(100*a)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=G8(e.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[n,r]of Object.entries(Ete)){const a=[];for(let n=0;n<r.length-1;n++){const s=e.find((e=>e.part===r[n])),i=e.find((e=>e.part===r[n+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&a.push([s.position,i.position])}l[n]=a}const u={id:a,score:i,box:o.box,boxRaw:o.boxRaw,keypoints:[...e],annotations:l};Rte(u),r.push(u)}}return r.sort(((e,t)=>t.score-e.score)),r.length>t.body.maxDetected&&(r.length=t.body.maxDetected),r}(a,t,e);for(const t of Dte.bodies)$te(t,[e.shape[2]||1,e.shape[1]||1]),Mte(t.keypoints);Object.keys(r).forEach((e=>Hg(r[e]))),n(Dte.bodies)}))}var Lte=[],Wte=0,Bte=Number.MAX_SAFE_INTEGER,Ute=0,Vte=2.5;async function Gte(e,t){const n=(t.object.skipTime||0)>Ko()-Wte,r=Bte<(t.object.skipFrames||0);return t.skipAllowed&&n&&r&&Lte.length>0?(Bte++,Lte):(Bte=0,M4.kernels.includes("mod")&&M4.kernels.includes("sparsetodense")?new Promise((async n=>{const r=[e.shape[2]||0,e.shape[1]||0],a=gv.resizeBilinear(e,[Ute,Ute],!1),s=iy(a,H4.tf255),i=s.transpose([0,3,1,2]);let o;Hg(s),Hg(a),t.object.enabled&&(o=Fte.execute(i)),Wte=Ko(),Hg(i);const l=await async function(e,t,n){let r=0,a=[];for(const s of[1,2,4])jg((async()=>{const i=13*s,o=zx(e.find((e=>e.shape[1]===i**2&&(e.shape[2]||0)===a9.length))),l=zx(e.find((e=>e.shape[1]===i**2&&(e.shape[2]||0)<a9.length))),u=l.reshape([-1,4,l.shape[1]/4]),d=await u.argMax(2).array(),c=await o.array();for(let e=0;e<o.shape[0];e++)for(let l=0;l<o.shape[1];l++){const o=c[e][l];if(o>(n.object.minConfidence||0)&&61!==l){const n=(.5+Math.trunc(e%i))/i,u=(.5+Math.trunc(e/i))/i,c=d[e].map((e=>e*(i/s/Ute))),[p,h]=[n-Vte/s*c[0],u-Vte/s*c[1]],[f,m]=[n+Vte/s*c[2]-p,u+Vte/s*c[3]-h];let g=[p,h,f,m];g=g.map((e=>Math.max(0,Math.min(e,1))));const y=[g[0]*t[0],g[1]*t[1],g[2]*t[0],g[3]*t[1]],A={id:r++,score:Math.round(100*o)/100,class:l+1,label:a9[l].label,box:y.map((e=>Math.trunc(e))),boxRaw:g};a.push(A)}}}));e.forEach((e=>Hg(e)));const s=a.map((e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]])),i=a.map((e=>e.score));let o=[];if(s&&s.length>0){const e=await gv.nonMaxSuppressionAsync(s,i,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);o=await e.data(),Hg(e)}return a=a.filter(((e,t)=>o.includes(t))).sort(((e,t)=>t.score-e.score)),a}(o,r,t);Lte=l,n(l)})):Lte)}var jte=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Hte=jte.length,qte=jte.reduce(((e,t,n)=>(e[t]=n,e)),{}),Kte=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((([e,t])=>[qte[e],qte[t]])),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function Xte(e){const t=e.reduce((({maxX:e,maxY:t,minX:n,minY:r},{position:{x:a,y:s}})=>({maxX:Math.max(e,a),maxY:Math.max(t,s),minX:Math.min(n,a),minY:Math.min(r,s)})),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}var Zte,Yte=class{constructor(e,t){Uo(this,"priorityQueue"),Uo(this,"numberOfElements"),Uo(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}};function Jte(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+Hte)}}function Qte(e,t,n){const{heatmapY:r,heatmapX:a,id:s}=e,{y:i,x:o}=Jte(r,a,s,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function ene(e,t,n){return e<t?t:e>n?n:e}function tne(e,t){return{x:e.x+t.x,y:e.y+t.y}}var nne,rne=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],ane=16;function sne(e,t,n,r,a,s,i=2){const o=(e,t,n)=>({y:ene(Math.round(e.y/ane),0,t-1),x:ene(Math.round(e.x/ane),0,n-1)}),[l,u]=r.shape,d=(c=o(t.position,l,u),{y:s.get(c.y,c.x,e),x:s.get(c.y,c.x,s.shape[2]/2+e)});var c;let p=tne(t.position,d);for(let e=0;e<i;e++){const e=o(p,l,u),t=Jte(e.y,e.x,n,a);p=tne({x:e.x*ane,y:e.y*ane},{x:t.x,y:t.y})}const h=o(p,l,u),f=r.get(h.y,h.x,n);return{position:p,part:jte[n],score:f}}function ine(e,t,n,r,a){const s=Kte.map((([e,t])=>[qte[e],qte[t]])),i=s.map((([,e])=>e)),o=s.map((([e])=>e)),l=t.shape[2],u=i.length,d=new Array(l),c=Qte(e.part,ane,n);d[e.part.id]={score:e.score,part:jte[e.part.id],position:c};for(let e=u-1;e>=0;--e){const r=i[e],s=o[e];d[r]&&!d[s]&&(d[s]=sne(e,d[r],s,t,n,a))}for(let e=0;e<u;++e){const a=o[e],s=i[e];d[a]&&!d[s]&&(d[s]=sne(e,d[a],s,t,n,r))}return d}function one(e,t,n,r,a){const[s,i]=a.shape;let o=!0;const l=Math.max(n-1,0),u=Math.min(n+1+1,s);for(let n=l;n<u;++n){const s=Math.max(r-1,0),l=Math.min(r+1+1,i);for(let r=s;r<l;++r)if(a.get(n,r,e)>t){o=!1;break}if(!o)break}return o}function lne(e,{x:t,y:n},r){return e.some((({keypoints:e})=>{var a;const s=null==(a=e[r])?void 0:a.position;return!!s&&function(e,t,n,r){const a=n-e,s=r-t;return a*a+s*s}(n,t,s.y,s.x)<=2500}))}function une(e,t){return t.reduce(((t,{position:n,score:r},a)=>(lne(e,n,a)||(t+=r),t)),0)/t.length}async function dne(e,t){const n=jg((()=>{if(!Zte.inputs[0].shape)return[];const t=gv.resizeBilinear(e,[Zte.inputs[0].shape[2],Zte.inputs[0].shape[1]]),n=ib(iy(um(t,"float32"),127.5),1),r=Zte.execute(n,rne).map((e=>zx(e,[0])));return r[1]=Ly(r[1]),r})),r=await Promise.all(n.map((e=>e.buffer())));for(const e of n)Hg(e);const a=await function(e,t,n,r,a,s){const i=[],o=function(e,t){const[n,r,a]=t.shape,s=new Yte(n*r*a,(({score:e})=>e));for(let i=0;i<n;++i)for(let n=0;n<r;++n)for(let r=0;r<a;++r){const a=t.get(i,n,r);a<e||one(r,a,i,n,t)&&s.enqueue({score:a,part:{heatmapY:i,heatmapX:n,id:r}})}return s}(s,t);for(;i.length<a&&!o.empty();){const a=o.dequeue();if(lne(i,Qte(a.part,ane,e),a.part.id))continue;let l=ine(a,t,e,n,r);l=l.filter((e=>e.score>s));const u=une(i,l),d=Xte(l);u>s&&i.push({keypoints:l,box:d,score:Math.round(100*u)/100})}return i}(r[0],r[1],r[2],r[3],t.body.maxDetected,t.body.minConfidence);return Zte.inputs[0].shape?function(e,[t,n],[r,a]){const s=t/r,i=n/a;return e.map(((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/a,e.box[1]/r,e.box[2]/a,e.box[3]/r],box:[Math.trunc(e.box[0]*i),Math.trunc(e.box[1]*s),Math.trunc(e.box[2]*i),Math.trunc(e.box[3]*s)],keypoints:e.keypoints.map((({score:e,part:t,position:n})=>({score:e,part:t,position:[Math.trunc(n.x*i),Math.trunc(n.y*s)],positionRaw:[n.x/r,n.y/r]}))),annotations:{}}))(e,t)))}(a,[e.shape[1],e.shape[2]],[Zte.inputs[0].shape[2],Zte.inputs[0].shape[1]]):[]}var cne=!1;async function pne(e){return!nne||M4.initial?nne=await F4(e.segmentation.modelPath):e.debug&&qo("cached model:",nne.modelUrl),nne}var hne=class{constructor(){Uo(this,"ssrnetage",null),Uo(this,"gear",null),Uo(this,"blazeposedetect",null),Uo(this,"blazepose",null),Uo(this,"centernet",null),Uo(this,"efficientpose",null),Uo(this,"mobilefacenet",null),Uo(this,"emotion",null),Uo(this,"facedetect",null),Uo(this,"faceiris",null),Uo(this,"facemesh",null),Uo(this,"faceres",null),Uo(this,"ssrnetgender",null),Uo(this,"handpose",null),Uo(this,"handskeleton",null),Uo(this,"handtrack",null),Uo(this,"liveness",null),Uo(this,"movenet",null),Uo(this,"nanodet",null),Uo(this,"posenet",null),Uo(this,"segmentation",null),Uo(this,"antispoof",null)}};function fne(e){for(const t of Object.keys(e.models))e.models[t]=null}async function mne(e){var t,n,r,a,s,i,o,l,u,d,c,p,h,f,m,g,y,A,b,x,w,v,k,I,S,N,T,C,E,_;M4.initial&&fne(e),e.config.hand.enabled&&(!e.models.handpose&&(null==(n=null==(t=e.config.hand.detector)?void 0:t.modelPath)?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await ste(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&(null==(a=null==(r=e.config.hand.detector)?void 0:r.modelPath)?void 0:a.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await ste(e.config))),e.config.body.enabled&&!e.models.blazepose&&(null==(i=null==(s=e.config.body)?void 0:s.modelPath)?void 0:i.includes("blazepose"))&&(e.models.blazepose=async function(e){if(q8.initial&&(K8.landmarks=null),K8.landmarks)e.debug&&qo("cached model:",K8.landmarks.modelUrl);else{K8.landmarks=await F4(e.body.modelPath);const t=Object.values(K8.landmarks.modelSignature.inputs);X8.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,X8.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return K8.landmarks}(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=async function(e){if(q8.initial&&(K8.detector=null),!K8.detector&&e.body.detector&&e.body.detector.modelPath){K8.detector=await F4(e.body.detector.modelPath);const t=Object.values(K8.detector.modelSignature.inputs);X8.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,X8.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&K8.detector&&qo("cached model:",K8.detector.modelUrl);return await async function(){const e=[];let t=0;for(;t<U8;){let n=0,r=t;for(;r<V8.length&&V8[r]===V8[t];)n+=2,r++;const a=V8[t],s=Math.ceil(B8/a),i=Math.ceil(B8/a);for(let t=0;t<s;++t)for(let r=0;r<i;++r)for(let a=0;a<n;++a)e.push({x:(r+.5)/i,y:(t+.5)/s});t=r}Bx(e.map((e=>e.x))),Bx(e.map((e=>e.y)))}(),K8.detector}(e.config)),e.config.body.enabled&&!e.models.efficientpose&&(null==(l=null==(o=e.config.body)?void 0:o.modelPath)?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=async function(e){return M4.initial&&(c9=null),c9?e.debug&&qo("cached model:",c9.modelUrl):c9=await F4(e.body.modelPath),c9}(e.config)),e.config.body.enabled&&!e.models.movenet&&(null==(d=null==(u=e.config.body)?void 0:u.modelPath)?void 0:d.includes("movenet"))&&(e.models.movenet=async function(e){return M4.initial&&(Ite=null),Ite?e.debug&&qo("cached model:",Ite.modelUrl):(bne(["size"],e),Ite=await F4(e.body.modelPath)),(Ote=Ite.inputs[0].shape?Ite.inputs[0].shape[2]:0)<64&&(Ote=256),Ite}(e.config)),e.config.body.enabled&&!e.models.posenet&&(null==(p=null==(c=e.config.body)?void 0:c.modelPath)?void 0:p.includes("posenet"))&&(e.models.posenet=async function(e){return!Zte||M4.initial?Zte=await F4(e.body.modelPath):e.debug&&qo("cached model:",Zte.modelUrl),Zte}(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=async function(e){var t;return M4.initial&&(M8=null),M8?e.debug&&qo("cached model:",M8.modelUrl):M8=await F4(null==(t=e.face.detector)?void 0:t.modelPath),O8=M8.inputs[0].shape?M8.inputs[0].shape[2]:0,z8=yx(O8,"int32"),F8=Ux(function(e){const t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let r=0;r<t.strides.length;r++){const a=t.strides[r],s=Math.floor((e+a-1)/a),i=Math.floor((e+a-1)/a),o=t.anchors[r];for(let e=0;e<s;e++){const t=a*(e+.5);for(let e=0;e<i;e++){const r=a*(e+.5);for(let e=0;e<o;e++)n.push([r,t])}}}return n}(O8)),M8}(e.config)),e.config.face.enabled&&(null==(h=e.config.face.antispoof)?void 0:h.enabled)&&!e.models.antispoof&&(e.models.antispoof=async function(e){var t;return M4.initial&&(J4=null),J4?e.debug&&qo("cached model:",J4.modelUrl):J4=await F4(null==(t=e.face.antispoof)?void 0:t.modelPath),J4}(e.config)),e.config.face.enabled&&(null==(f=e.config.face.liveness)?void 0:f.enabled)&&!e.models.liveness&&(e.models.liveness=async function(e){var t;return M4.initial&&(ite=null),ite?e.debug&&qo("cached model:",ite.modelUrl):ite=await F4(null==(t=e.face.liveness)?void 0:t.modelPath),ite}(e.config)),e.config.face.enabled&&(null==(m=e.config.face.description)?void 0:m.enabled)&&!e.models.faceres&&(e.models.faceres=async function(e){var t;return M4.initial&&(U9=null),U9?e.debug&&qo("cached model:",U9.modelUrl):U9=await F4(null==(t=e.face.description)?void 0:t.modelPath),U9}(e.config)),e.config.face.enabled&&(null==(g=e.config.face.emotion)?void 0:g.enabled)&&!e.models.emotion&&(e.models.emotion=async function(e){var t;return M4.initial&&(b9=null),b9?e.debug&&qo("cached model:",b9.modelUrl):b9=await F4(null==(t=e.face.emotion)?void 0:t.modelPath),b9}(e.config)),e.config.face.enabled&&(null==(y=e.config.face.iris)?void 0:y.enabled)&&!e.models.faceiris&&(e.models.faceiris=async function(e){var t;return M4.initial&&(T9=null),T9?e.debug&&qo("cached model:",T9.modelUrl):T9=await F4(null==(t=e.face.iris)?void 0:t.modelPath),-1===($9=T9.inputs[0].shape?T9.inputs[0].shape[2]:0)&&($9=64),T9}(e.config)),e.config.face.enabled&&(null==(A=e.config.face.mesh)?void 0:A.enabled)&&!e.models.facemesh&&(e.models.facemesh=async function(e){var t;return M4.initial&&(G9=null),G9?e.debug&&qo("cached model:",G9.modelUrl):G9=await F4(null==(t=e.face.mesh)?void 0:t.modelPath),j9=G9.inputs[0].shape?G9.inputs[0].shape[2]:0,G9}(e.config)),e.config.face.enabled&&(null==(b=e.config.face.gear)?void 0:b.enabled)&&!e.models.gear&&(e.models.gear=async function(e){return M4.initial&&(O4=null),O4?e.debug&&qo("cached model:",O4.modelUrl):O4=await F4(e.face.gear),O4}(e.config)),e.config.face.enabled&&(null==(x=e.config.face.ssrnet)?void 0:x.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=async function(e){return M4.initial&&(G4=null),G4?e.debug&&qo("cached model:",G4.modelUrl):G4=await F4(e.face.ssrnet.modelPathAge),G4}(e.config)),e.config.face.enabled&&(null==(w=e.config.face.ssrnet)?void 0:w.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=async function(e){return M4.initial&&(j4=null),j4?e.debug&&qo("cached model:",j4.modelUrl):j4=await F4(e.face.ssrnet.modelPathGender),j4}(e.config)),e.config.face.enabled&&(null==(v=e.config.face.mobilefacenet)?void 0:v.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=async function(e){return M4.initial&&(x9=null),x9?e.debug&&qo("cached model:",x9.modelUrl):x9=await F4(e.face.mobilefacenet.modelPath),x9}(e.config)),e.config.hand.enabled&&!e.models.handtrack&&(null==(I=null==(k=e.config.hand.detector)?void 0:k.modelPath)?void 0:I.includes("handtrack"))&&(e.models.handtrack=async function(e){var t;if(M4.initial&&(ote[0]=null),ote[0])e.debug&&qo("cached model:",ote[0].modelUrl);else{bne(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),ote[0]=await F4(null==(t=e.hand.detector)?void 0:t.modelPath);const n=Object.values(ote[0].modelSignature.inputs);ute[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ute[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return ote[0]}(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&(null==(N=null==(S=e.config.hand.detector)?void 0:S.modelPath)?void 0:N.includes("handtrack"))&&(e.models.handskeleton=async function(e){var t;if(M4.initial&&(ote[1]=null),ote[1])e.debug&&qo("cached model:",ote[1].modelUrl);else{ote[1]=await F4(null==(t=e.hand.skeleton)?void 0:t.modelPath);const n=Object.values(ote[1].modelSignature.inputs);ute[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,ute[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return ote[1]}(e.config)),e.config.object.enabled&&!e.models.centernet&&(null==(C=null==(T=e.config.object)?void 0:T.modelPath)?void 0:C.includes("centernet"))&&(e.models.centernet=async function(e){if(M4.initial&&(r9=null),r9)e.debug&&qo("cached model:",r9.modelUrl);else{r9=await F4(e.object.modelPath);const t=Object.values(r9.modelSignature.inputs);s9=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return r9}(e.config)),e.config.object.enabled&&!e.models.nanodet&&(null==(_=null==(E=e.config.object)?void 0:E.modelPath)?void 0:_.includes("nanodet"))&&(e.models.nanodet=async function(e){if(!Fte||M4.initial){Fte=await F4(e.object.modelPath);const t=Object.values(Fte.modelSignature.inputs);Ute=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}else e.debug&&qo("cached model:",Fte.modelUrl);return Fte}(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=pne(e.config));for await(const t of Object.keys(e.models))e.models[t]&&void 0!==e.models[t]&&(e.models[t]=await e.models[t])}async function gne(e){const t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(const n of Object.keys(e.models)){const r=e.models[n];if(!r)continue;const a=[],s=null==r?void 0:r.executor;if(s&&s.graph.nodes)for(const e of Object.values(s.graph.nodes)){const t=e.op.toLowerCase();a.includes(t)||a.push(t)}else!s&&e.config.debug&&qo("model signature not determined:",n);const i=[];for(const n of a)t.includes(n)||e.env.kernels.includes(n)||e.env.kernels.includes(n.replace("_",""))||e.env.kernels.includes(n.replace("native",""))||e.env.kernels.includes(n.replace("v2",""))||i.push(n);e.config.debug&&i.length>0&&qo("model validation failed:",n,i)}}var yne={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};async function Ane(e,t=!1){if(e.state="backend",t||M4.initial||e.config.backend&&e.config.backend.length>0&&Yg()!==e.config.backend){const t=Ko();if(e.config.backend&&e.config.backend.length>0){if("undefined"==typeof window&&"undefined"!=typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&qo("running inside web worker"),M4.browser&&"tensorflow"===e.config.backend&&(e.config.debug&&qo("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),!M4.node||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||(e.config.debug&&qo(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),M4.browser&&"webgpu"===e.config.backend)if("undefined"==typeof navigator||void 0===navigator.gpu)qo("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{const t=await navigator.gpu.requestAdapter();e.config.debug&&qo("enumerated webgpu adapter:",t)}"humangl"===e.config.backend&&await async function(e){var t;if("humangl"===e.config.backend&&(!(yne.name in Ug().registry)||yne.gl&&yne.gl.getParameter(yne.gl.VERSION)||(qo("error: humangl backend invalid context"),fne(e)),!Qg(yne.name))){try{yne.canvas=await E4(100,100)}catch(e){return void qo("error: cannot create canvas:",e)}try{if(yne.gl=null==(t=yne.canvas)?void 0:t.getContext("webgl2",yne.webGLattr),!yne.gl.getParameter(yne.gl.VERSION).includes("2.0"))return qo("override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");yne.canvas&&(yne.canvas.addEventListener("webglcontextlost",(async t=>{throw qo("error: humangl:",t.type),qo("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")})),yne.canvas.addEventListener("webglcontextrestored",(e=>{qo("error: humangl context restored:",e)})),yne.canvas.addEventListener("webglcontextcreationerror",(e=>{qo("error: humangl context create:",e)})))}catch(e){return void qo("error: cannot get WebGL context:",e)}try{VU(2,yne.gl)}catch(e){return void qo("error: cannot set WebGL context:",e)}try{const e=new jG(yne.gl);ty(yne.name,(()=>new eH(e)),yne.priority)}catch(e){return void qo("error: cannot register WebGL backend:",e)}try{jp("webgl").forEach((e=>{Hp({...e,backendName:yne.name})}))}catch(e){return void qo("error: cannot update WebGL backend registration:",e)}const n=ny().getGPGPUContext?ny().getGPGPUContext().gl:null;if(!n)return void qo("error: no current gl context:",n,yne.gl);qo(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);try{_u.set("WEBGL_VERSION",2)}catch(e){return void qo("error: cannot set WebGL backend flags:",e)}!function(){const e=yne.gl;e&&(yne.extensions=e.getSupportedExtensions())}(),qo("backend registered:",yne.name)}}(e);const t=Object.keys(Ug().registryFactory);if(e.config.debug&&qo("available backends:",t),t.includes(e.config.backend)||(qo(`error: backend ${e.config.backend} not found in registry`),e.config.backend=M4.node?"tensorflow":"webgl",e.config.debug&&qo(`override: setting backend ${e.config.backend}`)),e.config.debug&&qo("setting backend:",e.config.backend),"wasm"===e.config.backend){if(e.config.debug&&qo("wasm path:",e.config.wasmPath),void 0===(null==Jo?void 0:Jo.setWasmPaths))throw new Error("backend error: attempting to use wasm backend but wasm path is not set");await c4(e.config.wasmPath,e.config.wasmPlatformFetch);const t=await Cu().getAsync("WASM_HAS_SIMD_SUPPORT"),n=await Cu().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&qo(`wasm execution: ${t?"SIMD":"no SIMD"} ${n?"multithreaded":"singlethreaded"}`),e.config.debug&&!t&&qo("warning: wasm simd support is not enabled")}try{await Xg(e.config.backend),await Zg(),H4.tf255=yx(255,"float32"),H4.tf1=yx(1,"float32"),H4.tf2=yx(2,"float32"),H4.tf05=yx(.5,"float32"),H4.tf127=yx(127.5,"float32"),H4.rgb=Bx([.2989,.587,.114],"float32")}catch(t){return qo("error: cannot set backend:",e.config.backend,t),!1}}if("humangl"===Yg()&&(_u.set("CHECK_COMPUTATION_FOR_ERRORS",!1),_u.set("WEBGL_CPU_FORWARD",!0),_u.set("WEBGL_USE_SHAPES_UNIFORMS",!0),_u.set("CPU_HANDOFF_SIZE_THRESHOLD",256),void 0!==e.config.deallocate&&e.config.deallocate&&(qo("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),_u.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),ny().getGPGPUContext)){const t=await ny().getGPGPUContext().gl;e.config.debug&&qo(`gl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`)}Yg(),Dg(),await Zg(),e.performance.initBackend=Math.trunc(Ko()-t),e.config.backend=Yg(),await M4.updateBackend(),M4.kernels.includes("mod")||(Hp({kernelName:"Mod",backendName:Yg(),kernelFunc:e=>jg((()=>ib(e.inputs.a,oy(iy(e.inputs.a,e.inputs.b),e.inputs.b))))}),M4.kernels.push("mod")),M4.kernels.includes("floormod")||(Hp({kernelName:"FloorMod",backendName:Yg(),kernelFunc:e=>jg((()=>sy(e.inputs.a/e.inputs.b)*e.inputs.b+$b(e.inputs.a,e.inputs.b)))}),M4.kernels.push("floormod"))}return!0}function bne(e,t){for(const n of e)Hp({kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&qo("kernelFunc",n,t.backend)}});M4.kernels=jp(Yg()).map((e=>e.kernelName.toLowerCase()))}Bo({},{all:()=>zne,body:()=>Rne,canvas:()=>One,face:()=>_ne,gesture:()=>Ene,hand:()=>Mne,object:()=>$ne,options:()=>xne,person:()=>Fne});var xne={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},wne=0,vne=e=>{if(e)if(e.getContext){const t=e.getContext("2d");if(t)return t;qo("draw error: cannot get canvas context")}else qo("draw error: canvas context not defined");else qo("draw error: invalid canvas");return null},kne=e=>Math.round(180*e/Math.PI);function Ine(e,t,n,r,a){r=r||0,e.fillStyle=a.useDepth&&r?`rgba(${127.5+2*r}, ${127.5-2*r}, 255, 0.3)`:a.color,e.beginPath(),e.arc(t,n,a.pointSize,0,2*Math.PI),e.fill()}function Sne(e,t,n,r,a,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){const s=(t+t+r)/2,i=(n+n+a)/2;e.ellipse(s,i,r/2,a/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,n),e.lineTo(t+r-s.roundRect,n),e.quadraticCurveTo(t+r,n,t+r,n+s.roundRect),e.lineTo(t+r,n+a-s.roundRect),e.quadraticCurveTo(t+r,n+a,t+r-s.roundRect,n+a),e.lineTo(t+s.roundRect,n+a),e.quadraticCurveTo(t,n+a,t,n+a-s.roundRect),e.lineTo(t,n+s.roundRect),e.quadraticCurveTo(t,n,t+s.roundRect,n),e.closePath();e.stroke()}function Nne(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const r of t){const t=r[2]||0;e.strokeStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.lineTo(r[0],Math.round(r[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function Tne(e,t,n){if(!(t.length<2))if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2)Nne(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const r=(t[n][0]+t[n+1][0])/2,a=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],r,a)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function Cne(e,t,n,r=5){let a,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),a=Math.atan2(n[1]-t[1],n[0]-t[0]),s=r*Math.cos(a)+n[0],i=r*Math.sin(a)+n[1],e.moveTo(s,i),a+=1/3*(2*Math.PI),s=r*Math.cos(a)+n[0],i=r*Math.sin(a)+n[1],e.lineTo(s,i),a+=1/3*(2*Math.PI),s=r*Math.cos(a)+n[0],i=r*Math.sin(a)+n[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}async function Ene(e,t,n){const r=Zo(xne,n);if(t&&e&&r.drawGestures){const n=vne(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let a=1;for(let e=0;e<t.length;e++){let s=[],i=[];if([s,i]=Object.entries(t[e]),i.length>1&&i[1].length>0){const e=s[1]>0?`#${s[1]}`:"",t=`${s[0]} ${e}: ${i[1]}`;r.shadowColor&&""!==r.shadowColor&&(n.fillStyle=r.shadowColor,n.fillText(t,8,2+a*r.lineHeight)),n.fillStyle=r.labelColor,n.fillText(t,6,0+a*r.lineHeight),a+=1}}}}async function _ne(e,t,n){var r,a,s,i,o;const l=Zo(xne,n);if(!t||!e)return;const u=vne(e);if(u)for(const e of t){if(u.font=l.font,u.strokeStyle=l.color,u.fillStyle=l.color,l.drawBoxes&&Sne(u,e.box[0],e.box[1],e.box[2],e.box[3],l),l.drawLabels){const t=[];if(t.push(`face: ${Math.trunc(100*e.score)}%`),e.genderScore&&t.push(`${e.gender||""} ${Math.trunc(100*e.genderScore)}%`),e.age&&t.push(`age: ${e.age||""}`),e.iris&&t.push(`distance: ${e.iris}`),e.real&&t.push(`real: ${Math.trunc(100*e.real)}%`),e.live&&t.push(`live: ${Math.trunc(100*e.live)}%`),e.emotion&&e.emotion.length>0){const n=e.emotion.map((e=>`${Math.trunc(100*e.score)}% ${e.emotion}`));n.length>3&&(n.length=3),t.push(n.join(" "))}e.rotation&&e.rotation.angle&&e.rotation.gaze&&(e.rotation.angle.roll&&t.push(`roll: ${kne(e.rotation.angle.roll)}° yaw:${kne(e.rotation.angle.yaw)}° pitch:${kne(e.rotation.angle.pitch)}°`),e.rotation.gaze.bearing&&t.push(`gaze: ${kne(e.rotation.gaze.bearing)}°`)),0===t.length&&t.push("face"),u.fillStyle=l.color;for(let n=t.length-1;n>=0;n--){const r=Math.max(e.box[0],0),a=n*l.lineHeight+e.box[1];l.shadowColor&&""!==l.shadowColor&&(u.fillStyle=l.shadowColor,u.fillText(t[n],r+5,a+16)),u.fillStyle=l.labelColor,u.fillText(t[n],r+4,a+15)}}if(u.lineWidth=2,e.mesh&&e.mesh.length>0){if(l.drawPoints)for(const t of e.mesh)Ine(u,t[0],t[1],t[2],l);if(l.drawPolygons){if(e.mesh.length>450)for(let t=0;t<m8.length/3;t++)Nne(u,[m8[3*t+0],m8[3*t+1],m8[3*t+2]].map((t=>e.mesh[t])),l);if(e.annotations&&e.annotations.leftEyeIris&&e.annotations.leftEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const t=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,n=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;u.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],t,n,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(e.annotations&&e.annotations.rightEyeIris&&e.annotations.rightEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const t=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,n=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;u.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],t,n,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(l.drawGaze&&(null==(r=e.rotation)?void 0:r.angle)&&"undefined"!=typeof Path2D){u.strokeStyle="pink";const t=e.box[0]+e.box[2]/2-e.box[3]*kne(e.rotation.angle.yaw)/90,n=e.box[1]+e.box[3]/2+e.box[2]*kne(e.rotation.angle.pitch)/90,r=new Path2D(`\n            M ${e.box[0]+e.box[2]/2} ${e.box[1]}\n            C\n              ${t} ${e.box[1]},\n              ${t} ${e.box[1]+e.box[3]},\n              ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}\n          `),a=new Path2D(`\n            M ${e.box[0]} ${e.box[1]+e.box[3]/2}\n            C \n              ${e.box[0]} ${n},\n              ${e.box[0]+e.box[2]} ${n},\n              ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}\n          `);u.stroke(a),u.stroke(r)}if(l.drawGaze&&(null==(s=null==(a=e.rotation)?void 0:a.gaze)?void 0:s.strength)&&(null==(o=null==(i=e.rotation)?void 0:i.gaze)?void 0:o.bearing)&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){u.strokeStyle="pink",u.fillStyle="pink";const t=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];Cne(u,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[t[0],t[1]],4);const n=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];Cne(u,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[n[0],n[1]],4)}}}}}async function Rne(e,t,n){var r;const a=Zo(xne,n);if(!t||!e)return;const s=vne(e);if(s){s.lineJoin="round";for(let e=0;e<t.length;e++){if(s.strokeStyle=a.color,s.fillStyle=a.color,s.lineWidth=a.lineWidth,s.font=a.font,a.drawBoxes&&t[e].box&&4===(null==(r=t[e].box)?void 0:r.length)&&(Sne(s,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels&&(a.shadowColor&&""!==a.shadowColor&&(s.fillStyle=a.shadowColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),s.fillStyle=a.labelColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2]))),a.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(s.fillStyle=a.useDepth&&t[e].keypoints[n].position[2]?`rgba(${127.5+2*(t[e].keypoints[n].position[2]||0)}, ${127.5-2*(t[e].keypoints[n].position[2]||0)}, 255, 0.5)`:a.color,Ine(s,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,a));if(a.drawLabels&&t[e].keypoints){s.font=a.font;for(const n of t[e].keypoints)n.score&&0!==n.score&&(s.fillStyle=a.useDepth&&n.position[2]?`rgba(${127.5+2*n.position[2]}, ${127.5-2*n.position[2]}, 255, 0.5)`:a.color,s.fillText(`${n.part} ${Math.trunc(100*n.score)}%`,n.position[0]+4,n.position[1]+4))}if(a.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)Tne(s,e,a)}}}async function Mne(e,t,n){const r=Zo(xne,n);if(!t||!e)return;const a=vne(e);if(a){a.lineJoin="round",a.font=r.font;for(const e of t){if(r.drawBoxes&&(a.strokeStyle=r.color,a.fillStyle=r.color,Sne(a,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels&&(r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+3,1+e.box[1]+r.lineHeight,e.box[2])),a.fillStyle=r.labelColor,a.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+2,0+e.box[1]+r.lineHeight,e.box[2])),a.stroke()),r.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)a.fillStyle=r.useDepth?`rgba(${127.5+2*(t[2]||0)}, ${127.5-2*(t[2]||0)}, 255, 0.5)`:r.color,Ine(a,t[0],t[1],0,r);if(r.drawLabels&&e.annotations){const t=(e,t)=>{if(!e||0===e.length||!e[0])return;const n=e[e.length-1][2]||0;a.fillStyle=r.useDepth?`rgba(${127.5+2*n}, ${127.5-2*n}, 255, 0.5)`:r.color,a.fillText(t,e[e.length-1][0]+4,e[e.length-1][1]+4)};a.font=r.font,t(e.annotations.index,"index"),t(e.annotations.middle,"middle"),t(e.annotations.ring,"ring"),t(e.annotations.pinky,"pinky"),t(e.annotations.thumb,"thumb"),t(e.annotations.palm,"palm")}if(r.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){a.beginPath();const n=e[t][2]||0;a.strokeStyle=r.useDepth?`rgba(${127.5+t*n}, ${127.5-t*n}, 255, 0.5)`:r.color,a.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),a.lineTo(e[t][0],e[t][1]),a.stroke()}};a.lineWidth=r.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}async function $ne(e,t,n){const r=Zo(xne,n);if(!t||!e)return;const a=vne(e);if(a){a.lineJoin="round",a.font=r.font;for(const e of t)if(r.drawBoxes){if(a.strokeStyle=r.color,a.fillStyle=r.color,Sne(a,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels){const t=`${e.label} ${Math.round(100*e.score)}%`;r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(t,e.box[0]+3,1+e.box[1]+r.lineHeight,e.box[2])),a.fillStyle=r.labelColor,a.fillText(t,e.box[0]+2,0+e.box[1]+r.lineHeight,e.box[2])}a.stroke()}}}async function Fne(e,t,n){const r=Zo(xne,n);if(!t||!e)return;const a=vne(e);if(a){a.lineJoin="round",a.font=r.font;for(let e=0;e<t.length;e++)if(r.drawBoxes){if(a.strokeStyle=r.color,a.fillStyle=r.color,Sne(a,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],r),r.drawLabels){const n=`person #${e}`;r.shadowColor&&""!==r.shadowColor&&(a.fillStyle=r.shadowColor,a.fillText(n,t[e].box[0]+3,1+t[e].box[1]+r.lineHeight,t[e].box[2])),a.fillStyle=r.labelColor,a.fillText(n,t[e].box[0]+2,0+t[e].box[1]+r.lineHeight,t[e].box[2])}a.stroke()}}}async function One(e,t){if(!e||!t)return;const n=vne(t);n&&n.drawImage(e,0,0)}async function zne(e,t,n){if(!(t&&t.performance&&t&&e))return null;const r=Ko(),a=Zo(xne,n),s=Promise.all([_ne(e,t.face,a),Rne(e,t.body,a),Mne(e,t.hand,a),$ne(e,t.object,a),Ene(e,t.gesture,a)]);return wne=M4.perfadd?wne+Math.round(Ko()-r):Math.round(Ko()-r),t.performance.draw=wne,s}var Dne=.1;function Pne(e,t,n){let r=!1,a=n.length-1;for(let s=0;s<n.length;a=s++)n[s].y>t!=n[a].y>t&&e<(n[a].x-n[s].x)*(t-n[s].y)/(n[a].y-n[s].y)+n[s].x&&(r=!r);return r}async function Lne(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,r=await e.tensor.buffer();let a=[];for(const t of d8.silhouette)a.push({x:(e.mesh[t][0]-e.box[0])/e.box[2],y:(e.mesh[t][1]-e.box[1])/e.box[3]});a=a.map((e=>({x:e.x>.5?e.x+Dne:e.x-Dne,y:e.y>.5?e.y+Dne:e.y-Dne})));for(let e=0;e<t;e++)for(let s=0;s<n;s++)Pne(e/t,s/t,a)||(r.set(.5*r.get(0,s,e,0),0,s,e,0),r.set(.5*r.get(0,s,e,1),0,s,e,1),r.set(.5*r.get(0,s,e,2),0,s,e,2));const s=r.toTensor();return Hg(r),s}var Wne=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},r=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],a=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],s=e.meshRaw;if(!s||s.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[s[10],s[152],s[234],s[454]].map((e=>[e[0]*t[0]/i,e[1]*t[1]/i,e[2]])),l=n(r(o[1],o[0]));let u=n(r(o[3],o[2]));const d=n(a(u,l));u=a(l,d);const c=[u[0],u[1],u[2],l[0],l[1],l[2],d[0],d[1],d[2]],p=(e=>{const[t,n,r,a,s,i,o,l,u]=e;let d,c,p;return a<1?a>-1?(p=Math.asin(a),c=Math.atan2(-o,t),d=Math.atan2(-i,s)):(p=-Math.PI/2,c=-Math.atan2(l,u),d=0):(p=Math.PI/2,c=Math.atan2(l,u),d=0),isNaN(d)&&(d=0),isNaN(c)&&(c=0),isNaN(p)&&(p=0),{pitch:2*-d,yaw:2*-c,roll:2*-p}})(c),h=478===s.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),r=n?e.mesh[473]:e.mesh[468],a=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],s=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],i=[(a[0]-r[0])/s[0]-t[0],1*(r[1]-a[1])/s[1]-t[1]];let o=Math.sqrt(i[0]*i[0]+i[1]*i[1]);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=i,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0};return{angle:p,matrix:c,gaze:h}},Bne=async(e,t)=>{var n,r,a,s,i,o,l,u,d,c,p,h,f,m,g,y,A,b,x,w,v,k;let I,S,N,T,C,E,_,R,M=Ko();const $=[];e.state="run:face";const F=await async function(e,t){var n,r,a,s,i,o,l,u,d;const c=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>Ko()-V9.timestamp,p=V9.skipped<((null==(r=t.face.detector)?void 0:r.skipFrames)||0);t.skipAllowed&&c&&p&&0!==V9.boxes.length?V9.skipped++:(V9.boxes=await async function(e,t){var n,r,a,s;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];const i={};i.resized=gv.resizeBilinear(e,[O8,O8]),i.div=iy(i.resized,H4.tf127),i.normalized=ib(i.div,H4.tf05);const o=null==M8?void 0:M8.execute(i.normalized);if(Array.isArray(o)){const e=o.sort(((e,t)=>e.size-t.size));i.concat384=Py([e[0],e[2]],2),i.concat512=Py([e[1],e[3]],2),i.concat=Py([i.concat512,i.concat384],1),i.batch=zx(i.concat,0)}else i.batch=zx(o);Hg(o),i.boxes=function(e){const t={};t.boxStarts=Wy(e,[0,1],[-1,2]),t.centers=ay(t.boxStarts,F8),t.boxSizes=Wy(e,[0,3],[-1,2]),t.boxSizesNormalized=iy(t.boxSizes,z8),t.centersNormalized=iy(t.centers,z8),t.halfBoxSize=iy(t.boxSizesNormalized,H4.tf2),t.starts=ib(t.centersNormalized,t.halfBoxSize),t.ends=ay(t.centersNormalized,t.halfBoxSize),t.startNormalized=oy(t.starts,z8),t.endNormalized=oy(t.ends,z8);const n=tA([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach((e=>Hg(t[e]))),n}(i.batch),i.logits=Wy(i.batch,[0,0],[-1,1]),i.sigmoid=Ly(i.logits),i.scores=zx(i.sigmoid),i.nms=await gv.nonMaxSuppressionAsync(i.boxes,i.scores,(null==(n=t.face.detector)?void 0:n.maxDetected)||0,(null==(r=t.face.detector)?void 0:r.iouThreshold)||0,(null==(a=t.face.detector)?void 0:a.minConfidence)||0);const l=await i.nms.array(),u=[],d=await i.scores.data();for(let n=0;n<l.length;n++){const r=d[l[n]];if(r>((null==(s=t.face.detector)?void 0:s.minConfidence)||0)){const a={};a.bbox=Wy(i.boxes,[l[n],0],[1,-1]),a.slice=Wy(i.batch,[l[n],5],[1,-1]),a.squeeze=zx(a.slice),a.landmarks=Oy(a.squeeze,[6,-1]);const s=await a.bbox.data(),o=(c={startPoint:[s[0],s[1]],endPoint:[s[2],s[3]],landmarks:await a.landmarks.array(),confidence:r},p=[(e.shape[2]||0)/O8,(e.shape[1]||0)/O8],{startPoint:[c.startPoint[0]*p[0],c.startPoint[1]*p[1]],endPoint:[c.endPoint[0]*p[0],c.endPoint[1]*p[1]],landmarks:c.landmarks,confidence:c.confidence}),d=w8(o,t.face.scale||1.2),h=v8(d);u.push(h),Object.keys(a).forEach((e=>Hg(a[e])))}}var c,p;return Object.keys(i).forEach((e=>Hg(i[e]))),u}(e,t),V9.timestamp=Ko(),V9.skipped=0);const h=[],f=[];let m=0;for(let n=0;n<V9.boxes.length;n++){const r=V9.boxes[n];let c,p=0;const g={id:m++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([p,c,g.tensor]=R8(null==(a=t.face.detector)?void 0:a.rotation,r,e,(null==(s=t.face.mesh)?void 0:s.enabled)?j9:D8()),null==(i=null==t?void 0:t.filter)?void 0:i.equalization){const e=await v4(g.tensor);Hg(g.tensor),g.tensor=e}if(g.boxScore=Math.round(100*r.confidence)/100,null==(o=t.face.mesh)?void 0:o.enabled)if(G9){const[n,a,s]=G9.execute(g.tensor),i=await a.data();g.faceScore=Math.round(100*i[0])/100;const o=Oy(s,[-1,3]);let d=await o.array();if(Hg([s,o,a,n]),g.faceScore<((null==(l=t.face.detector)?void 0:l.minConfidence)||1))r.confidence=g.faceScore;else{(null==(u=t.face.iris)?void 0:u.enabled)&&(d=await B9(d,g.tensor,t,j9)),g.mesh=_8(d,r,p,c,j9),g.meshRaw=g.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/j9]));for(const e of Object.keys(d8))g.annotations[e]=d8[e].map((e=>g.mesh[e]));g.score=g.faceScore;const n={...$8(g.mesh,r),confidence:r.confidence,landmarks:r.landmarks};g.box=A8(n,e),g.boxRaw=b8(n,e),f.push(n)}}else t.debug&&qo("face mesh detection requested, but model is not loaded");else{g.box=A8(r,e),g.boxRaw=b8(r,e),g.score=g.boxScore,g.mesh=r.landmarks.map((e=>[(r.startPoint[0]+r.endPoint[0])/2+(r.endPoint[0]+r.startPoint[0])*e[0]/D8(),(r.startPoint[1]+r.endPoint[1])/2+(r.endPoint[1]+r.startPoint[1])*e[1]/D8()])),g.meshRaw=g.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/j9]));for(const e of Object.keys(p8))g.annotations[e]=[g.mesh[p8[e]]]}g.score>((null==(d=t.face.detector)?void 0:d.minConfidence)||1)?h.push(g):Hg(g.tensor)}return V9.boxes=f,h}(t,e.config);if(e.performance.face=M4.perfadd?(e.performance.face||0)+Math.trunc(Ko()-M):Math.trunc(Ko()-M),!t.shape||4!==t.shape.length)return[];if(!F)return[];for(let O=0;O<F.length;O++){if(e.analyze("Get Face"),!F[O].tensor||F[O].tensor.isDisposedInternal){qo("Face object is disposed:",F[O].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await Lne(F[O]);Hg(F[O].tensor),F[O].tensor=e}const z=F[O].mesh&&F[O].mesh.length>200?Wne(F[O],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?T=(null==(r=e.config.face.emotion)?void 0:r.enabled)?N9(F[O].tensor||gf([]),e.config,O,F.length):[]:(e.state="run:emotion",M=Ko(),T=(null==(a=e.config.face.emotion)?void 0:a.enabled)?await N9(F[O].tensor||gf([]),e.config,O,F.length):[],e.performance.emotion=M4.perfadd?(e.performance.emotion||0)+Math.trunc(Ko()-M):Math.trunc(Ko()-M)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?E=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?u8(F[O].tensor||gf([]),e.config,O,F.length):0:(e.state="run:antispoof",M=Ko(),E=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?await u8(F[O].tensor||gf([]),e.config,O,F.length):0,e.performance.antispoof=M4.perfadd?(e.performance.antispoof||0)+Math.trunc(Ko()-M):Math.trunc(Ko()-M)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?_=(null==(o=e.config.face.liveness)?void 0:o.enabled)?vte(F[O].tensor||gf([]),e.config,O,F.length):0:(e.state="run:liveness",M=Ko(),_=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await vte(F[O].tensor||gf([]),e.config,O,F.length):0,e.performance.liveness=M4.perfadd?(e.performance.antispoof||0)+Math.trunc(Ko()-M):Math.trunc(Ko()-M)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?S=(null==(u=e.config.face.gear)?void 0:u.enabled)?V4(F[O].tensor||gf([]),e.config,O,F.length):null:(e.state="run:gear",M=Ko(),S=(null==(d=e.config.face.gear)?void 0:d.enabled)?await V4(F[O].tensor||gf([]),e.config,O,F.length):null,e.performance.gear=Math.trunc(Ko()-M)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(I=(null==(c=e.config.face.ssrnet)?void 0:c.enabled)?Y4(F[O].tensor||gf([]),e.config,O,F.length):null,N=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?a8(F[O].tensor||gf([]),e.config,O,F.length):null):(e.state="run:ssrnet",M=Ko(),I=(null==(h=e.config.face.ssrnet)?void 0:h.enabled)?await Y4(F[O].tensor||gf([]),e.config,O,F.length):null,N=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await a8(F[O].tensor||gf([]),e.config,O,F.length):null,e.performance.ssrnet=Math.trunc(Ko()-M)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?C=(null==(m=e.config.face.mobilefacenet)?void 0:m.enabled)?M9(F[O].tensor||gf([]),e.config,O,F.length):null:(e.state="run:mobilefacenet",M=Ko(),C=(null==(g=e.config.face.mobilefacenet)?void 0:g.enabled)?await M9(F[O].tensor||gf([]),e.config,O,F.length):null,e.performance.mobilefacenet=Math.trunc(Ko()-M)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?R=(null==(y=e.config.face.description)?void 0:y.enabled)?Q9(F[O].tensor||gf([]),e.config,O,F.length):null:(e.state="run:description",M=Ko(),R=(null==(A=e.config.face.description)?void 0:A.enabled)?await Q9(F[O].tensor||gf([]),e.config,O,F.length):null,e.performance.description=M4.perfadd?(e.performance.description||0)+Math.trunc(Ko()-M):Math.trunc(Ko()-M)),e.analyze("End Description:"),e.config.async&&([I,N,T,C,R,S,E,_]=await Promise.all([I,N,T,C,R,S,E,_])),e.analyze("Finish Face:"),(null==(b=e.config.face.ssrnet)?void 0:b.enabled)&&I&&N&&(R={...R,age:I.age,gender:N.gender,genderScore:N.genderScore}),(null==(x=e.config.face.gear)?void 0:x.enabled)&&S&&(R={...R,age:S.age,gender:S.gender,genderScore:S.genderScore,race:S.race}),(null==(w=e.config.face.mobilefacenet)?void 0:w.enabled)&&C&&(R.descriptor=C),null==(v=e.config.face.iris)||v.enabled;const D=F[O].annotations&&F[O].annotations.leftEyeIris&&F[O].annotations.leftEyeIris[0]&&F[O].annotations.rightEyeIris&&F[O].annotations.rightEyeIris[0]&&F[O].annotations.leftEyeIris.length>0&&F[O].annotations.rightEyeIris.length>0&&null!==F[O].annotations.leftEyeIris[0]&&null!==F[O].annotations.rightEyeIris[0]?Math.max(Math.abs(F[O].annotations.leftEyeIris[3][0]-F[O].annotations.leftEyeIris[1][0]),Math.abs(F[O].annotations.rightEyeIris[4][1]-F[O].annotations.rightEyeIris[2][1]))/t.shape[2]:0,P=(null==(k=e.config.face.detector)?void 0:k.return)?zx(F[O].tensor):null;Hg(F[O].tensor),F[O].tensor&&delete F[O].tensor;const L={...F[O],id:O};(null==R?void 0:R.age)&&(L.age=R.age),(null==R?void 0:R.gender)&&(L.gender=R.gender),(null==R?void 0:R.genderScore)&&(L.genderScore=null==R?void 0:R.genderScore),(null==R?void 0:R.descriptor)&&(L.embedding=null==R?void 0:R.descriptor),(null==R?void 0:R.race)&&(L.race=null==R?void 0:R.race),T&&(L.emotion=T),E&&(L.real=E),_&&(L.live=_),D&&0!==D&&(L.iris=Math.trunc(500/D/11.7)/100),z&&(L.rotation=z),P&&(L.tensor=P),$.push(L),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),$},Une=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const r=e[n].keypoints.find((e=>"leftWrist"===e.part)),a=e[n].keypoints.find((e=>"rightWrist"===e.part)),s=e[n].keypoints.find((e=>"nose"===e.part));s&&r&&a&&r.position[1]<s.position[1]&&a.position[1]<s.position[1]?t.push({body:n,gesture:"i give up"}):s&&r&&r.position[1]<s.position[1]?t.push({body:n,gesture:"raise left hand"}):s&&a&&a.position[1]<s.position[1]&&t.push({body:n,gesture:"raise right hand"});const i=e[n].keypoints.find((e=>"leftShoulder"===e.part)),o=e[n].keypoints.find((e=>"rightShoulder"===e.part));i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(i.position[1]>o.position[1]?"left":"right")})}return t},Vne=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const r=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),a=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(r/a)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(r<0?"left":"right")}),Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"}),Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const s=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));s>10&&t.push({face:n,gesture:`mouth ${Math.trunc(s)}% open`});const i=e[n].mesh[152][2]||0;Math.abs(i)>10&&t.push({face:n,gesture:"head "+(i<0?"up":"down")})}return t},Gne=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){if(!(e[n].annotations&&e[n].annotations.leftEyeIris&&e[n].annotations.leftEyeIris[0]&&e[n].annotations.rightEyeIris&&e[n].annotations.rightEyeIris[0]))continue;const r=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],a=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],s=Math.abs(r*a),i=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],o=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(i*o);let u=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));const d=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],c=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(d>.06||c>.06)&&(u=!1),d>c?d>.05&&t.push({iris:n,gesture:"looking right"}):c>.05&&t.push({iris:n,gesture:"looking left"});const p=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],h=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(h<.01||p<.01||h>.022||p>.022)&&(u=!1),(h<.01||p<.01)&&t.push({iris:n,gesture:"looking down"}),(h>.022||p>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},jne=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const r=[];if(e[n].annotations)for(const[t,a]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(a)&&a[0]&&r.push({name:t.toLowerCase(),position:a[0]});if(r&&r.length>0){const e=r.reduce(((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t));t.push({hand:n,gesture:`${e.name} forward`});const a=r.reduce(((e,t)=>e.position[1]<t.position[1]?e:t));t.push({hand:n,gesture:`${a.name} up`})}if(e[n].keypoints){const r=Qee(e[n].keypoints);for(const e of r)t.push({hand:n,gesture:e.name})}}return t},Hne={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},qne=0;function Kne(e,t,n={order:2,multiplier:25}){let r=0;for(let a=0;a<e.length;a++){const s=n.order&&2!==n.order?Math.abs(e[a]-t[a]):e[a]-t[a];r+=n.order&&2!==n.order?s**n.order:s*s}return(n.multiplier||20)*r}Bo({},{distance:()=>Kne,match:()=>Yne,similarity:()=>Zne});var Xne=(e,t,n,r)=>{if(0===e)return 1;const a=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(r-n);return Math.max(Math.min(a,1),0)};function Zne(e,t,n={order:2,multiplier:25,min:.2,max:.8}){const r=Kne(e,t,n);return Xne(r,n.order||2,n.min||0,n.max||1)}function Yne(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let r=Number.MAX_SAFE_INTEGER,a=-1;for(let s=0;s<t.length;s++){const i=Kne(e,t[s],n);if(i<r&&(r=i,a=s),r<(n.threshold||0))break}return{index:a,distance:r,similarity:Xne(r,n.order||2,n.min||0,n.max||1)}}var Jne,Qne,ere,tre,nre="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",rre="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";var are=class{constructor(e){var t;Uo(this,"version"),Uo(this,"config"),Uo(this,"result"),Uo(this,"state"),Uo(this,"process"),Uo(this,"tf"),Uo(this,"env"),Uo(this,"draw"),Uo(this,"models"),Uo(this,"events"),Uo(this,"faceTriangulation"),Uo(this,"faceUVMap"),Uo(this,"performance"),jo(this,Jne,void 0),jo(this,Qne,void 0),jo(this,ere,void 0),Uo(this,"gl"),Uo(this,"analyze",((...e)=>{if(!Go(this,Qne))return;const t=this.tf.engine().state.numTensors,n=Go(this,Jne);Ho(this,Jne,t);const r=t-n;0!==r&&qo(...e,r)})),jo(this,tre,(e=>{if(!Go(this,ere))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof _h))return"input must be a tensor";try{this.tf.getBackend()}catch(e){return"backend not loaded"}return null})),Uo(this,"similarity",Zne),Uo(this,"distance",Kne),Uo(this,"match",Yne),Uo(this,"emit",(e=>{var t;this.events&&this.events.dispatchEvent&&(null==(t=this.events)||t.dispatchEvent(new Event(e)))})),this.env=M4,Yo.wasmPath=A4["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${zg}/dist/`,Yo.modelBasePath=M4.browser?"../models/":"file://models/",Yo.backend=M4.browser?"humangl":"tensorflow",this.version=z4,Object.defineProperty(this,"version",{value:z4}),this.config=JSON.parse(JSON.stringify(Yo)),Object.seal(this.config),this.config.cacheModels="undefined"!=typeof indexedDB,e&&(this.config=Zo(this.config,e)),t=this.config,$4.cacheModels=t.cacheModels,$4.verbose=t.debug,$4.modelBasePath=t.modelBasePath,this.tf=Jo,this.state="idle",Ho(this,Jne,0),Ho(this,Qne,!1),Ho(this,ere,!1),this.performance={},this.events="undefined"!=typeof EventTarget?new EventTarget:void 0,this.models=new hne,this.draw={options:xne,canvas:(e,t)=>One(e,t),face:(e,t,n)=>_ne(e,t,n),body:(e,t,n)=>Rne(e,t,n),hand:(e,t,n)=>Mne(e,t,n),gesture:(e,t,n)=>Ene(e,t,n),object:(e,t,n)=>$ne(e,t,n),person:(e,t,n)=>Fne(e,t,n),all:(e,t,n)=>zne(e,t,n)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=H9,this.faceUVMap=q9,this.gl=yne,this.emit("create")}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(Yo)),this.config.backend=e}validate(e){return Xo(Yo,e||this.config)}now(){return Ko()}image(e,t=!0){return R4(e,this.config,t)}async segmentation(e,t){return async function(e,t,n){var r,a;if(cne)return{data:[],canvas:null,alpha:null};cne=!0,nne||await pne(n);const s=await R4(e,n),i=(null==(r=s.tensor)?void 0:r.shape[2])||0,o=(null==(a=s.tensor)?void 0:a.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};const l={};l.resize=gv.resizeBilinear(s.tensor,[nne.inputs[0].shape?nne.inputs[0].shape[1]:0,nne.inputs[0].shape?nne.inputs[0].shape[2]:0],!1),Hg(s.tensor),l.norm=iy(l.resize,H4.tf255),l.res=nne.execute(l.norm),l.squeeze=zx(l.res,0),2===l.squeeze.shape[2]?(l.softmax=Cx(l.squeeze),[l.bg,l.fg]=Zx(l.softmax,2),l.expand=EA(l.fg,2),l.pad=EA(l.expand,0),l.crop=gv.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[i,o]),l.data=zx(l.crop,0)):l.data=gv.resizeBilinear(l.squeeze,[o,i]);const u=Array.from(await l.data.data());if(M4.node&&!M4.Canvas&&"undefined"==typeof ImageData)return n.debug&&qo("canvas support missing"),Object.keys(l).forEach((e=>Hg(l[e]))),{data:u,canvas:null,alpha:null};const d=E4(i,o);Bm&&await Bm.toPixels(l.data,d);const c=d.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(c.filter=`blur(${n.segmentation.blur}px)`);const p=c.getImageData(0,0,i,o),h=E4(i,o),f=h.getContext("2d");s.canvas&&f.drawImage(s.canvas,0,0),f.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(f.filter=`blur(${n.segmentation.blur}px)`),f.drawImage(d,0,0),f.globalCompositeOperation="source-over",f.filter="none";const m=f.getImageData(0,0,i,o);for(let e=0;e<i*o;e++)m.data[4*e+3]=p.data[4*e+0];f.putImageData(m,0,0);let g=null;if(t&&h){g=E4(i,o);const e=await R4(t,n);Hg(e.tensor);const r=g.getContext("2d");r.drawImage(e.canvas,0,0,g.width,g.height),r.drawImage(h,0,0)}return Object.keys(l).forEach((e=>Hg(l[e]))),cne=!1,{data:u,canvas:h,alpha:d}}(e,t,this.config)}enhance(e){return J9(e)}compare(e,t){return async function(e,t,n){const r={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||qo("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||qo("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;r.input1=dm(t),r.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?gv.resizeBilinear(n,[t.shape[1],t.shape[2]]):dm(n),r.diff=ib(r.input1,r.input2),r.squared=oy(r.diff,r.diff),r.sum=ob(r.squared);const a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return Hg([r.input1,r.input2,r.diff,r.squared,r.sum]),a}(this.config,e,t)}async init(){await Ane(this,!0),await this.tf.ready()}async load(e){this.state="load";const t=Ko(),n=Object.values(this.models).filter((e=>e)).length;e&&(this.config=Zo(this.config,e)),this.env.initial&&(this.config.debug&&qo(`version: ${this.version}`),this.config.debug&&qo(`tfjs version: ${this.tf.version["tfjs-core"]}`),await Ane(this)||qo("error: backend check failed"),await Zg(),this.env.browser&&(this.config.debug&&qo("configuration:",this.config),this.config.debug&&qo("environment:",this.env),this.config.debug&&qo("tf flags:",this.tf.ENV.flags))),await mne(this),this.env.initial&&this.config.debug&&qo("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models).filter((e=>e)).length!==n&&(await gne(this),this.emit("load"));const r=Math.trunc(Ko()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(e=this.result){return function(e,t){var n,r,a,s,i,o,l,u,d,c,p,h,f,m,g,y,A,b,x,w,v,k,I,S,N,T,C;const E=Ko();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};const _=Date.now()-e.timestamp,R=_<1e3?8-Math.log(_+1):1;if(e.canvas&&(Hne.canvas=e.canvas),e.error&&(Hne.error=e.error),Hne.body&&e.body.length===Hne.body.length)for(let l=0;l<e.body.length;l++){const u=e.body[l].box.map(((e,t)=>((R-1)*Hne.body[l].box[t]+e)/R)),d=e.body[l].boxRaw.map(((e,t)=>((R-1)*Hne.body[l].boxRaw[t]+e)/R)),c=e.body[l].keypoints.map(((e,t)=>{var n,r,a,s,i,o,u,d,c;return{score:e.score,part:e.part,position:[Hne.body[l].keypoints[t]?((R-1)*(Hne.body[l].keypoints[t].position[0]||0)+(e.position[0]||0))/R:e.position[0],Hne.body[l].keypoints[t]?((R-1)*(Hne.body[l].keypoints[t].position[1]||0)+(e.position[1]||0))/R:e.position[1],Hne.body[l].keypoints[t]?((R-1)*(Hne.body[l].keypoints[t].position[2]||0)+(e.position[2]||0))/R:e.position[2]],positionRaw:[Hne.body[l].keypoints[t]?((R-1)*(Hne.body[l].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/R:e.positionRaw[0],Hne.body[l].keypoints[t]?((R-1)*(Hne.body[l].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/R:e.positionRaw[1],Hne.body[l].keypoints[t]?((R-1)*(Hne.body[l].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/R:e.positionRaw[2]],distance:[Hne.body[l].keypoints[t]?((R-1)*((null==(n=Hne.body[l].keypoints[t].distance)?void 0:n[0])||0)+((null==(r=e.distance)?void 0:r[0])||0))/R:null==(a=e.distance)?void 0:a[0],Hne.body[l].keypoints[t]?((R-1)*((null==(s=Hne.body[l].keypoints[t].distance)?void 0:s[1])||0)+((null==(i=e.distance)?void 0:i[1])||0))/R:null==(o=e.distance)?void 0:o[1],Hne.body[l].keypoints[t]?((R-1)*((null==(u=Hne.body[l].keypoints[t].distance)?void 0:u[2])||0)+((null==(d=e.distance)?void 0:d[2])||0))/R:null==(c=e.distance)?void 0:c[2]]}})),p={};let h={connected:{}};(null==(r=null==(n=t.body)?void 0:n.modelPath)?void 0:r.includes("efficientpose"))?h=d9:(null==(s=null==(a=t.body)?void 0:a.modelPath)?void 0:s.includes("blazepose"))?h=P8:(null==(o=null==(i=t.body)?void 0:i.modelPath)?void 0:o.includes("movenet"))&&(h=kte);for(const[e,t]of Object.entries(h.connected)){const n=[];for(let e=0;e<t.length-1;e++){const r=c.find((n=>n.part===t[e])),a=c.find((n=>n.part===t[e+1]));r&&a&&n.push([r.position,a.position])}p[e]=n}Hne.body[l]={...e.body[l],box:u,boxRaw:d,keypoints:c,annotations:p}}else Hne.body=JSON.parse(JSON.stringify(e.body));if(Hne.hand&&e.hand.length===Hne.hand.length)for(let t=0;t<e.hand.length;t++){const n=e.hand[t].box.map(((e,n)=>((R-1)*Hne.hand[t].box[n]+e)/R)),r=e.hand[t].boxRaw.map(((e,n)=>((R-1)*Hne.hand[t].boxRaw[n]+e)/R));Hne.hand[t].keypoints.length!==e.hand[t].keypoints.length&&(Hne.hand[t].keypoints=e.hand[t].keypoints);const a=e.hand[t].keypoints&&e.hand[t].keypoints.length>0?e.hand[t].keypoints.map(((e,n)=>e.map(((e,r)=>((R-1)*(Hne.hand[t].keypoints[n][r]||1)+(e||0))/R)))):[];let s={};if(Object.keys(Hne.hand[t].annotations).length!==Object.keys(e.hand[t].annotations).length)Hne.hand[t].annotations=e.hand[t].annotations,s=Hne.hand[t].annotations;else if(e.hand[t].annotations)for(const n of Object.keys(e.hand[t].annotations))s[n]=e.hand[t].annotations[n]&&e.hand[t].annotations[n][0]?e.hand[t].annotations[n].map(((e,r)=>e.map(((e,a)=>((R-1)*Hne.hand[t].annotations[n][r][a]+e)/R)))):null;Hne.hand[t]={...e.hand[t],box:n,boxRaw:r,keypoints:a,annotations:s}}else Hne.hand=JSON.parse(JSON.stringify(e.hand));if(Hne.face&&e.face.length===Hne.face.length)for(let t=0;t<e.face.length;t++){const n=e.face[t].box.map(((e,n)=>((R-1)*Hne.face[t].box[n]+e)/R)),r=e.face[t].boxRaw.map(((e,n)=>((R-1)*Hne.face[t].boxRaw[n]+e)/R));if(e.face[t].rotation){const a={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};a.matrix=null==(l=e.face[t].rotation)?void 0:l.matrix,a.angle={roll:((R-1)*((null==(d=null==(u=Hne.face[t].rotation)?void 0:u.angle)?void 0:d.roll)||0)+((null==(p=null==(c=e.face[t].rotation)?void 0:c.angle)?void 0:p.roll)||0))/R,yaw:((R-1)*((null==(f=null==(h=Hne.face[t].rotation)?void 0:h.angle)?void 0:f.yaw)||0)+((null==(g=null==(m=e.face[t].rotation)?void 0:m.angle)?void 0:g.yaw)||0))/R,pitch:((R-1)*((null==(A=null==(y=Hne.face[t].rotation)?void 0:y.angle)?void 0:A.pitch)||0)+((null==(x=null==(b=e.face[t].rotation)?void 0:b.angle)?void 0:x.pitch)||0))/R},a.gaze={bearing:((R-1)*((null==(v=null==(w=Hne.face[t].rotation)?void 0:w.gaze)?void 0:v.bearing)||0)+((null==(I=null==(k=e.face[t].rotation)?void 0:k.gaze)?void 0:I.bearing)||0))/R,strength:((R-1)*((null==(N=null==(S=Hne.face[t].rotation)?void 0:S.gaze)?void 0:N.strength)||0)+((null==(C=null==(T=e.face[t].rotation)?void 0:T.gaze)?void 0:C.strength)||0))/R},Hne.face[t]={...e.face[t],rotation:a,box:n,boxRaw:r}}Hne.face[t]={...e.face[t],box:n,boxRaw:r}}else Hne.face=JSON.parse(JSON.stringify(e.face));if(Hne.object&&e.object.length===Hne.object.length)for(let t=0;t<e.object.length;t++){const n=e.object[t].box.map(((e,n)=>((R-1)*Hne.object[t].box[n]+e)/R)),r=e.object[t].boxRaw.map(((e,n)=>((R-1)*Hne.object[t].boxRaw[n]+e)/R));Hne.object[t]={...e.object[t],box:n,boxRaw:r}}else Hne.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(Hne.persons&&t.length===Hne.persons.length)for(let e=0;e<t.length;e++)Hne.persons[e].box=t[e].box.map(((t,n)=>((R-1)*Hne.persons[e].box[n]+t)/R));else Hne.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(Hne.gesture=e.gesture);const M=Ko();return qne=M4.perfadd?qne+Math.round(M-E):Math.round(M-E),e.performance&&(Hne.performance={...e.performance,interpolate:qne}),Hne}(e,this.config)}async warmup(e){const t=Ko(),n=await async function(e,t){const n=Ko();return e.state="warmup",t&&(e.config=Zo(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup?new Promise((async t=>{const r=await async function(e){let t;return t="function"==typeof createImageBitmap?await async function(e){const t=(e,t="application/octet-stream")=>fetch(`data:${t};base64,${e}`).then((e=>e.blob()));let n,r;switch(e.config.warmup){case"face":n=await t(nre);break;case"body":case"full":n=await t(rre);break;default:n=null}if(n){const t=await createImageBitmap(n);r=await e.detect(t,e.config),t.close()}return r}(e):"undefined"!=typeof Image||void 0!==M4.Canvas?await async function(e){return new Promise((t=>{let n,r;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+nre;break;case"full":case"body":n="data:image/jpeg;base64,"+rre;break;default:n=null}if("undefined"!=typeof Image)r=new Image;else{if(!M4.Image)return;r=new M4.Image}r.onload=async()=>{const n=E4(r.naturalWidth,r.naturalHeight);if(n){const a=n.getContext("2d");a&&a.drawImage(r,0,0);const s=await e.image(n),i=await e.detect(s.tensor,e.config);t(i)}else qo("Warmup: Canvas not found"),t(void 0)},n?r.src=n:t(void 0)}))}(e):await async function(e){const t=e=>Buffer.from(e,"base64");let n,r;if(n="face"===e.config.warmup?t(nre):t(rre),"node"in Jo){const t=(void 0).decodeJpeg(n),a=t.expandDims(0);e.tf.dispose(t),r=await e.detect(a,e.config),e.tf.dispose(a)}else e.config.debug&&qo("Warmup tfjs-node not loaded");return r}(e),t}(e),a=Ko();e.config.debug&&qo("warmup",e.config.warmup,Math.round(a-n),"ms"),e.emit("warmup"),t(r)})):{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:Ko(),persons:[],error:null}}(this,e),r=Ko();return this.performance.warmup=Math.trunc(r-t),n}async profile(e,t){const n=await this.tf.profile((()=>this.detect(e,t))),r={};for(const e of n.kernels)r[e.name]?r[e.name]+=e.kernelTimeMs:r[e.name]=e.kernelTimeMs;const a=[];Object.entries(r).forEach((e=>a.push({name:e[0],ms:e[1]}))),a.sort(((e,t)=>t.ms-e.ms)),a.length=20;const s={};for(const e of a)s[e.name]=e.ms;return s}async detect(e,t){return this.state="detect",new Promise((async n=>{var r,a,s,i,o,l,u,d,c,p,h,f,m,g,y,A,b,x,w,v,k,I;let S;this.state="config",this.config=Zo(this.config,t),this.state="check";const N=Go(this,tre).call(this,e);N&&(qo(N,e),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:Ko(),persons:[],error:N}));const T=Ko();await Ane(this),await this.load(),S=Ko(),this.state="image";const C=await R4(e,this.config);if(this.process=C,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S),this.analyze("Get Image:"),!C.tensor)return this.config.debug&&qo("could not convert input to tensor"),this.emit("error"),void n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:Ko(),persons:[],error:"could not convert input to tensor"});this.emit("image"),S=Ko(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>2048||t.shape[2]>2048)return n;if(C4.inputTensor)if(C4.inputTensor.shape[1]!==t.shape[1]||C4.inputTensor.shape[2]!==t.shape[2])Hg(C4.inputTensor),C4.inputTensor=dm(t);else{const r={};r.diff=ib(t,C4.inputTensor),r.squared=oy(r.diff,r.diff),r.sum=ob(r.squared);const a=(await r.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;Hg([C4.inputTensor,r.diff,r.squared,r.sum]),C4.inputTensor=dm(t),n=a<=(e.cacheSensitivity||0)}else C4.inputTensor=dm(t);return n}(this.config,C.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S),this.analyze("Check Changed:");let E=[],_=[],R=[],M=[];this.state="detect:face",this.config.async?(E=this.config.face.enabled?Bne(this,C.tensor):[],this.performance.face&&delete this.performance.face):(S=Ko(),E=this.config.face.enabled?await Bne(this,C.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(E=await E),this.analyze("Start Body:"),this.state="detect:body";const $=-1===this.config.body.maxDetected?Zo(this.config,{body:{maxDetected:this.config.face.enabled?1*E.length:1}}):this.config;this.config.async?((null==(r=this.config.body.modelPath)?void 0:r.includes("posenet"))?_=this.config.body.enabled?dne(C.tensor,$):[]:(null==(a=this.config.body.modelPath)?void 0:a.includes("blazepose"))?_=this.config.body.enabled?n9(C.tensor,$):[]:(null==(s=this.config.body.modelPath)?void 0:s.includes("efficientpose"))?_=this.config.body.enabled?A9(C.tensor,$):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("movenet"))&&(_=this.config.body.enabled?Pte(C.tensor,$):[]),this.performance.body&&delete this.performance.body):(S=Ko(),(null==(o=this.config.body.modelPath)?void 0:o.includes("posenet"))?_=this.config.body.enabled?await dne(C.tensor,$):[]:(null==(l=this.config.body.modelPath)?void 0:l.includes("blazepose"))?_=this.config.body.enabled?await n9(C.tensor,$):[]:(null==(u=this.config.body.modelPath)?void 0:u.includes("efficientpose"))?_=this.config.body.enabled?await A9(C.tensor,$):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("movenet"))&&(_=this.config.body.enabled?await Pte(C.tensor,$):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const F=-1===this.config.hand.maxDetected?Zo(this.config,{hand:{maxDetected:this.config.face.enabled?2*E.length:1}}):this.config;this.config.async?((null==(p=null==(c=this.config.hand.detector)?void 0:c.modelPath)?void 0:p.includes("handdetect"))?R=this.config.hand.enabled?ate(C.tensor,F):[]:(null==(f=null==(h=this.config.hand.detector)?void 0:h.modelPath)?void 0:f.includes("handtrack"))&&(R=this.config.hand.enabled?yte(C.tensor,F):[]),this.performance.hand&&delete this.performance.hand):(S=Ko(),(null==(g=null==(m=this.config.hand.detector)?void 0:m.modelPath)?void 0:g.includes("handdetect"))?R=this.config.hand.enabled?await ate(C.tensor,F):[]:(null==(A=null==(y=this.config.hand.detector)?void 0:y.modelPath)?void 0:A.includes("handtrack"))&&(R=this.config.hand.enabled?await yte(C.tensor,F):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(b=this.config.object.modelPath)?void 0:b.includes("nanodet"))?M=this.config.object.enabled?Gte(C.tensor,this.config):[]:(null==(x=this.config.object.modelPath)?void 0:x.includes("centernet"))&&(M=this.config.object.enabled?u9(C.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(S=Ko(),(null==(w=this.config.object.modelPath)?void 0:w.includes("nanodet"))?M=this.config.object.enabled?await Gte(C.tensor,this.config):[]:(null==(v=this.config.object.modelPath)?void 0:v.includes("centernet"))&&(M=this.config.object.enabled?await u9(C.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([E,_,R,M]=await Promise.all([E,_,R,M])),this.state="detect:gesture";let O=[];this.config.gesture.enabled&&(S=Ko(),O=[...Vne(E),...Une(_),...jne(R),...Gne(E)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(Ko()-S):Math.trunc(Ko()-S)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(Ko()-T):Math.trunc(Ko()-T);const z=(null==(I=null==(k=this.process)?void 0:k.tensor)?void 0:I.shape)||[];this.result={face:E,body:_,hand:R,gesture:O,object:M,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return function(e,t,n,r,a){var s,i,o,l,u,d,c,p,h,f,m,g,y,A,b,x;let w=0;const v=[];for(const k of e){const e={id:w++,face:k,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)k.box[0]>n.box[0]&&k.box[0]<n.box[0]+n.box[2]&&k.box[1]+k.box[3]>n.box[1]&&k.box[1]+k.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of r)void 0!==t.face&&t.face===k.id?null==(s=e.gestures)||s.push(t):void 0!==t.iris&&t.iris===k.id?null==(i=e.gestures)||i.push(t):void 0!==t.body&&t.body===(null==(o=e.body)?void 0:o.id)?null==(l=e.gestures)||l.push(t):void 0!==t.hand&&t.hand===(null==(d=null==(u=e.hands)?void 0:u.left)?void 0:d.id)?null==(c=e.gestures)||c.push(t):void 0!==t.hand&&t.hand===(null==(h=null==(p=e.hands)?void 0:p.right)?void 0:h.id)&&(null==(f=e.gestures)||f.push(t));const I=[],S=[],N=e=>{e&&4===e.length&&(I.push(e[0],e[0]+e[2]),S.push(e[1],e[1]+e[3]))};N(null==(m=e.face)?void 0:m.box),N(null==(g=e.body)?void 0:g.box),N(null==(A=null==(y=e.hands)?void 0:y.left)?void 0:A.box),N(null==(x=null==(b=e.hands)?void 0:b.right)?void 0:x.box);const T=Math.min(...I),C=Math.min(...S);e.box=[T,C,Math.max(...I)-T,Math.max(...S)-C],a&&a[1]&&a[2]&&(e.boxRaw=[e.box[0]/a[2],e.box[1]/a[1],e.box[2]/a[2],e.box[3]/a[1]]),v.push(e)}return v}(E,_,R,O,z)}},Hg(C.tensor),this.emit("detect"),this.state="idle",n(this.result)}))}};Jne=new WeakMap,Qne=new WeakMap,ere=new WeakMap,tre=new WeakMap;const sre={happy:"happy",neutral:"neutral",surprise:"surprised",angry:"angry",fear:"fearful",disgust:"disgusted",sad:"sad"},ire="face-box",ore="face-expressions";function lre(e,t,n){return(t=function(e){var t=function(e){if("object"!=typeof e||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class ure{constructor(e){let{baseUrl:t,detectionTypes:n}=e;lre(this,"human",void 0),lre(this,"faceDetectionTypes",void 0),lre(this,"baseUrl",void 0),lre(this,"detectionInProgress",!1),lre(this,"lastValidFaceBox",void 0),lre(this,"config",{backend:"humangl",async:!0,warmup:"none",cacheModels:!0,cacheSensitivity:0,debug:!1,deallocate:!0,filter:{enabled:!1},face:{enabled:!1,detector:{enabled:!1,rotation:!1,modelPath:"blazeface-front.json",maxDetected:20},mesh:{enabled:!1},iris:{enabled:!1},emotion:{enabled:!1,modelPath:"emotion.json"},description:{enabled:!1}},hand:{enabled:!1},gesture:{enabled:!1},body:{enabled:!1},segmentation:{enabled:!1}}),this.faceDetectionTypes=n,this.baseUrl=t,this.init()}async init(){if(!this.human){var e,t;this.config.modelBasePath=this.baseUrl,self.OffscreenCanvas||(this.config.backend="wasm",this.config.wasmPath=this.baseUrl,function(e,t=!1){if(Oo)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)$o=e;else{Fo=e;const t=Ro.filter((e=>null==Fo[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}zo=t}(this.baseUrl)),this.faceDetectionTypes.length>0&&this.config.face&&(this.config.face.enabled=!0),this.faceDetectionTypes.includes(ire)&&null!==(e=this.config.face)&&void 0!==e&&e.detector&&(this.config.face.detector.enabled=!0),this.faceDetectionTypes.includes(ore)&&null!==(t=this.config.face)&&void 0!==t&&t.emotion&&(this.config.face.emotion.enabled=!0);const n=new are(this.config);try{await n.load()}catch(e){console.error(e)}this.human=n}}getFaceBox(e,t){if(1!==this.getFaceCount(e))return;const n={left:Math.round(100*e[0].boxRaw[0]),right:Math.round(100*(e[0].boxRaw[0]+e[0].boxRaw[2]))};return n.width=Math.round(n.right-n.left),this.lastValidFaceBox&&t&&Math.abs(this.lastValidFaceBox.left-n.left)<t?void 0:(this.lastValidFaceBox=n,n)}getFaceExpression(e){if(1!==this.getFaceCount(e))return;const t=e[0];return t.emotion?{expression:sre[t.emotion[0].emotion],score:t.emotion[0].score}:void 0}getFaceCount(e){return e?e.length:0}async getDetections(e){if(!this.human||!this.faceDetectionTypes.length)return[];this.human.tf.engine().startScope();const t=this.human.tf.browser.fromPixels(e),{face:n}=await this.human.detect(t,this.config);return this.human.tf.engine().endScope(),n.filter((e=>e.score>.75))}async detect(e){let t,n,{image:r,threshold:a}=e;this.detectionInProgress=!0;const s=await this.getDetections(r);return this.faceDetectionTypes.includes(ore)&&(t=this.getFaceExpression(s)),this.faceDetectionTypes.includes(ire)&&(this.getFaceCount(s)>1?(this.faceDetectionTypes.splice(this.faceDetectionTypes.indexOf(ire),1),n={left:0,right:100,width:100}):n=this.getFaceBox(s,a)),this.detectionInProgress=!1,{faceExpression:t,faceBox:n,faceCount:this.getFaceCount(s)}}getDetectionInProgress(){return this.detectionInProgress}}let dre;onmessage=async function(e){let{data:t}=e;switch(t.type){case"DETECT_FACE":{if(!dre||dre.getDetectionInProgress())return;const e=await dre.detect(t);e&&self.postMessage(e);break}case"INIT_WORKER":dre=new ure(t)}}})()})();
//# sourceMappingURL=face-landmarks-worker.min.js.map